{"ast":null,"code":"import _toConsumableArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';//mock data\nimport data from\"./data.json\";//style\nimport'./App.css';//components\nimport Header from\"./components/Header/Header\";import TodoForm from\"./components/Form/TodoForm\";import TodoList from\"./components/TodoList/TodoList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(data),_useState2=_slicedToArray(_useState,2),toDoList=_useState2[0],setToDoList=_useState2[1];var handleFilter=function handleFilter(){var filtered=toDoList.filter(function(task){return!task.complete;});setToDoList(filtered);};var completeTask=function completeTask(index){var newTodos=_toConsumableArray(toDoList);newTodos[index].complete=true;setToDoList(newTodos);};var addTask=function addTask(userInput){var copy=_toConsumableArray(toDoList);copy=[].concat(_toConsumableArray(copy),[{id:toDoList.length+1,key:userInput,complete:false}]);setToDoList(copy);};var removeTask=function removeTask(index){var newTodos=_toConsumableArray(toDoList);newTodos.splice(index,1);setToDoList(newTodos);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(TodoForm,{addTask:addTask}),/*#__PURE__*/_jsx(TodoList,{toDoList:toDoList,handleFilter:handleFilter,completeTask:completeTask,removeTask:removeTask})]});};export default App;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/App.js"],"names":["useState","data","Header","TodoForm","TodoList","App","toDoList","setToDoList","handleFilter","filtered","filter","task","complete","completeTask","index","newTodos","addTask","userInput","copy","id","length","key","removeTask","splice"],"mappings":"8QAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA;AACA,MAAO,WAAP,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAAgCL,QAAQ,CAACC,IAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAIC,CAAAA,QAAQ,CAAGH,QAAQ,CAACI,MAAT,CAAgB,SAAAC,IAAI,CAAI,CACrC,MAAO,CAACA,IAAI,CAACC,QAAb,CACD,CAFc,CAAf,CAGAL,WAAW,CAACE,QAAD,CAAX,CACD,CALD,CAOA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5B,GAAMC,CAAAA,QAAQ,oBAAOT,QAAP,CAAd,CACAS,QAAQ,CAACD,KAAD,CAAR,CAAgBF,QAAhB,CAA2B,IAA3B,CACAL,WAAW,CAACQ,QAAD,CAAX,CACD,CAJD,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,SAAS,CAAI,CAC3B,GAAIC,CAAAA,IAAI,oBAAOZ,QAAP,CAAR,CACAY,IAAI,8BAAOA,IAAP,GAAa,CAACC,EAAE,CAAEb,QAAQ,CAACc,MAAT,CAAkB,CAAvB,CAA0BC,GAAG,CAAEJ,SAA/B,CAA0CL,QAAQ,CAAE,KAApD,CAAb,EAAJ,CACAL,WAAW,CAACW,IAAD,CAAX,CACD,CAJD,CAMA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAR,KAAK,CAAI,CAC1B,GAAMC,CAAAA,QAAQ,oBAAOT,QAAP,CAAd,CACAS,QAAQ,CAACQ,MAAT,CAAgBT,KAAhB,CAAuB,CAAvB,EACAP,WAAW,CAACQ,QAAD,CAAX,CACD,CAJD,CAKA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,IADF,cAEE,KAAC,QAAD,EAAU,OAAO,CAAEC,OAAnB,EAFF,cAGE,KAAC,QAAD,EAAU,QAAQ,CAAEV,QAApB,CAA8B,YAAY,CAAEE,YAA5C,CAA0D,YAAY,CAAEK,YAAxE,CAAsF,UAAU,CAAES,UAAlG,EAHF,GADJ,CAOD,CAlCD,CAoCA,cAAejB,CAAAA,GAAf","sourcesContent":["import {useState} from 'react';\n//mock data\nimport data from \"./data.json\";\n//style\nimport './App.css';\n//components\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/Form/TodoForm\";\nimport TodoList from \"./components/TodoList/TodoList\";\n\nconst App = () => {\n  const [toDoList, setToDoList] = useState(data);\n\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered);\n  };\n\n  const completeTask = index => {\n    const newTodos = [...toDoList];\n    newTodos[index].complete = true;\n    setToDoList(newTodos);\n  }\n\n  const addTask = userInput => {\n    let copy = [...toDoList];\n    copy = [...copy, {id: toDoList.length + 1, key: userInput, complete: false}];\n    setToDoList(copy);\n  }\n\n  const removeTask = index => {\n    const newTodos = [...toDoList];\n    newTodos.splice(index, 1);\n    setToDoList(newTodos);\n  }\n  return (\n      <div className=\"App\">\n        <Header />\n        <TodoForm addTask={addTask}/>\n        <TodoList toDoList={toDoList} handleFilter={handleFilter} completeTask={completeTask} removeTask={removeTask}/>\n      </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}