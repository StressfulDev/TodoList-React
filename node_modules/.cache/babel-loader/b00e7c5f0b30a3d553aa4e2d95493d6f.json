{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import{formatMuiErrorMessage as _formatMuiErrorMessage}from\"@mui/utils\";var _excluded=[\"mode\",\"contrastThreshold\",\"tonalOffset\"];import{deepmerge}from'@mui/utils';import{darken,getContrastRatio,lighten}from'@mui/system';import common from'../colors/common';import grey from'../colors/grey';import purple from'../colors/purple';import red from'../colors/red';import orange from'../colors/orange';import blue from'../colors/blue';import lightBlue from'../colors/lightBlue';import green from'../colors/green';export var light={// The colors used to style the text.\ntext:{// The most important text.\nprimary:'rgba(0, 0, 0, 0.87)',// Secondary text.\nsecondary:'rgba(0, 0, 0, 0.6)',// Disabled text have even lower visual prominence.\ndisabled:'rgba(0, 0, 0, 0.38)'},// The color used to divide different elements.\ndivider:'rgba(0, 0, 0, 0.12)',// The background colors used to style the surfaces.\n// Consistency between these values is important.\nbackground:{paper:common.white,default:common.white},// The colors used to style the action elements.\naction:{// The color of an active action like an icon button.\nactive:'rgba(0, 0, 0, 0.54)',// The color of an hovered action.\nhover:'rgba(0, 0, 0, 0.04)',hoverOpacity:0.04,// The color of a selected action.\nselected:'rgba(0, 0, 0, 0.08)',selectedOpacity:0.08,// The color of a disabled action.\ndisabled:'rgba(0, 0, 0, 0.26)',// The background color of a disabled action.\ndisabledBackground:'rgba(0, 0, 0, 0.12)',disabledOpacity:0.38,focus:'rgba(0, 0, 0, 0.12)',focusOpacity:0.12,activatedOpacity:0.12}};export var dark={text:{primary:common.white,secondary:'rgba(255, 255, 255, 0.7)',disabled:'rgba(255, 255, 255, 0.5)',icon:'rgba(255, 255, 255, 0.5)'},divider:'rgba(255, 255, 255, 0.12)',background:{paper:'#121212',default:'#121212'},action:{active:common.white,hover:'rgba(255, 255, 255, 0.08)',hoverOpacity:0.08,selected:'rgba(255, 255, 255, 0.16)',selectedOpacity:0.16,disabled:'rgba(255, 255, 255, 0.3)',disabledBackground:'rgba(255, 255, 255, 0.12)',disabledOpacity:0.38,focus:'rgba(255, 255, 255, 0.12)',focusOpacity:0.12,activatedOpacity:0.24}};function addLightOrDark(intent,direction,shade,tonalOffset){var tonalOffsetLight=tonalOffset.light||tonalOffset;var tonalOffsetDark=tonalOffset.dark||tonalOffset*1.5;if(!intent[direction]){if(intent.hasOwnProperty(shade)){intent[direction]=intent[shade];}else if(direction==='light'){intent.light=lighten(intent.main,tonalOffsetLight);}else if(direction==='dark'){intent.dark=darken(intent.main,tonalOffsetDark);}}}function getDefaultPrimary(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:blue[200],light:blue[50],dark:blue[400]};}return{main:blue[700],light:blue[400],dark:blue[800]};}function getDefaultSecondary(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:purple[200],light:purple[50],dark:purple[400]};}return{main:purple[500],light:purple[300],dark:purple[700]};}function getDefaultError(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:red[500],light:red[300],dark:red[700]};}return{main:red[700],light:red[400],dark:red[800]};}function getDefaultInfo(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:lightBlue[400],light:lightBlue[300],dark:lightBlue[700]};}return{main:lightBlue[700],light:lightBlue[500],dark:lightBlue[900]};}function getDefaultSuccess(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:green[400],light:green[300],dark:green[700]};}return{main:green[800],light:green[500],dark:green[900]};}function getDefaultWarning(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:orange[400],light:orange[300],dark:orange[700]};}return{main:'#ed6c02',// closest to orange[800] that pass 3:1.\nlight:orange[500],dark:orange[900]};}export default function createPalette(palette){var _palette$mode=palette.mode,mode=_palette$mode===void 0?'light':_palette$mode,_palette$contrastThre=palette.contrastThreshold,contrastThreshold=_palette$contrastThre===void 0?3:_palette$contrastThre,_palette$tonalOffset=palette.tonalOffset,tonalOffset=_palette$tonalOffset===void 0?0.2:_palette$tonalOffset,other=_objectWithoutPropertiesLoose(palette,_excluded);var primary=palette.primary||getDefaultPrimary(mode);var secondary=palette.secondary||getDefaultSecondary(mode);var error=palette.error||getDefaultError(mode);var info=palette.info||getDefaultInfo(mode);var success=palette.success||getDefaultSuccess(mode);var warning=palette.warning||getDefaultWarning(mode);// Use the same logic as\n// Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n// and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\nfunction getContrastText(background){var contrastText=getContrastRatio(background,dark.text.primary)>=contrastThreshold?dark.text.primary:light.text.primary;if(process.env.NODE_ENV!=='production'){var contrast=getContrastRatio(background,contrastText);if(contrast<3){console.error([\"MUI: The contrast ratio of \".concat(contrast,\":1 for \").concat(contrastText,\" on \").concat(background),'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.','https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));}}return contrastText;}var augmentColor=function augmentColor(_ref){var color=_ref.color,name=_ref.name,_ref$mainShade=_ref.mainShade,mainShade=_ref$mainShade===void 0?500:_ref$mainShade,_ref$lightShade=_ref.lightShade,lightShade=_ref$lightShade===void 0?300:_ref$lightShade,_ref$darkShade=_ref.darkShade,darkShade=_ref$darkShade===void 0?700:_ref$darkShade;color=_extends({},color);if(!color.main&&color[mainShade]){color.main=color[mainShade];}if(!color.hasOwnProperty('main')){throw new Error(process.env.NODE_ENV!==\"production\"?\"MUI: The color\".concat(name?\" (\".concat(name,\")\"):'',\" provided to augmentColor(color) is invalid.\\nThe color object needs to have a `main` property or a `\").concat(mainShade,\"` property.\"):_formatMuiErrorMessage(11,name?\" (\".concat(name,\")\"):'',mainShade));}if(typeof color.main!=='string'){throw new Error(process.env.NODE_ENV!==\"production\"?\"MUI: The color\".concat(name?\" (\".concat(name,\")\"):'',\" provided to augmentColor(color) is invalid.\\n`color.main` should be a string, but `\").concat(JSON.stringify(color.main),\"` was provided instead.\\n\\nDid you intend to use one of the following approaches?\\n\\nimport { green } from \\\"@mui/material/colors\\\";\\n\\nconst theme1 = createTheme({ palette: {\\n  primary: green,\\n} });\\n\\nconst theme2 = createTheme({ palette: {\\n  primary: { main: green[500] },\\n} });\"):_formatMuiErrorMessage(12,name?\" (\".concat(name,\")\"):'',JSON.stringify(color.main)));}addLightOrDark(color,'light',lightShade,tonalOffset);addLightOrDark(color,'dark',darkShade,tonalOffset);if(!color.contrastText){color.contrastText=getContrastText(color.main);}return color;};var modes={dark:dark,light:light};if(process.env.NODE_ENV!=='production'){if(!modes[mode]){console.error(\"MUI: The palette mode `\".concat(mode,\"` is not supported.\"));}}var paletteOutput=deepmerge(_extends({// A collection of common colors.\ncommon:_extends({},common),// prevent mutable object.\n// The palette mode, can be light or dark.\nmode:mode,// The colors used to represent primary interface elements for a user.\nprimary:augmentColor({color:primary,name:'primary'}),// The colors used to represent secondary interface elements for a user.\nsecondary:augmentColor({color:secondary,name:'secondary',mainShade:'A400',lightShade:'A200',darkShade:'A700'}),// The colors used to represent interface elements that the user should be made aware of.\nerror:augmentColor({color:error,name:'error'}),// The colors used to represent potentially dangerous actions or important messages.\nwarning:augmentColor({color:warning,name:'warning'}),// The colors used to present information to the user that is neutral and not necessarily important.\ninfo:augmentColor({color:info,name:'info'}),// The colors used to indicate the successful completion of an action that user triggered.\nsuccess:augmentColor({color:success,name:'success'}),// The grey colors.\ngrey:grey,// Used by `getContrastText()` to maximize the contrast between\n// the background and the text.\ncontrastThreshold:contrastThreshold,// Takes a background color and returns the text color that maximizes the contrast.\ngetContrastText:getContrastText,// Generate a rich color object.\naugmentColor:augmentColor,// Used by the functions below to shift a color's luminance by approximately\n// two indexes within its tonal palette.\n// E.g., shift from Red 500 to Red 300 or Red 700.\ntonalOffset:tonalOffset},modes[mode]),other);return paletteOutput;}","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/styles/createPalette.js"],"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_excluded","deepmerge","darken","getContrastRatio","lighten","common","grey","purple","red","orange","blue","lightBlue","green","light","text","primary","secondary","disabled","divider","background","paper","white","default","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","intent","direction","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","hasOwnProperty","main","getDefaultPrimary","mode","getDefaultSecondary","getDefaultError","getDefaultInfo","getDefaultSuccess","getDefaultWarning","createPalette","palette","contrastThreshold","other","error","info","success","warning","getContrastText","contrastText","process","env","NODE_ENV","contrast","console","join","augmentColor","color","name","mainShade","lightShade","darkShade","Error","JSON","stringify","modes","paletteOutput"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,oCAArB,CACA,MAAOC,CAAAA,6BAAP,KAA0C,yDAA1C,CACA,OAASC,qBAAqB,GAAIC,CAAAA,sBAAlC,KAAgE,YAAhE,CACA,GAAMC,CAAAA,SAAS,CAAG,CAAC,MAAD,CAAS,mBAAT,CAA8B,aAA9B,CAAlB,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,OAASC,MAAT,CAAiBC,gBAAjB,CAAmCC,OAAnC,KAAkD,aAAlD,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAO,IAAMC,CAAAA,KAAK,CAAG,CACnB;AACAC,IAAI,CAAE,CACJ;AACAC,OAAO,CAAE,qBAFL,CAGJ;AACAC,SAAS,CAAE,oBAJP,CAKJ;AACAC,QAAQ,CAAE,qBANN,CAFa,CAUnB;AACAC,OAAO,CAAE,qBAXU,CAYnB;AACA;AACAC,UAAU,CAAE,CACVC,KAAK,CAAEf,MAAM,CAACgB,KADJ,CAEVC,OAAO,CAAEjB,MAAM,CAACgB,KAFN,CAdO,CAkBnB;AACAE,MAAM,CAAE,CACN;AACAC,MAAM,CAAE,qBAFF,CAGN;AACAC,KAAK,CAAE,qBAJD,CAKNC,YAAY,CAAE,IALR,CAMN;AACAC,QAAQ,CAAE,qBAPJ,CAQNC,eAAe,CAAE,IARX,CASN;AACAX,QAAQ,CAAE,qBAVJ,CAWN;AACAY,kBAAkB,CAAE,qBAZd,CAaNC,eAAe,CAAE,IAbX,CAcNC,KAAK,CAAE,qBAdD,CAeNC,YAAY,CAAE,IAfR,CAgBNC,gBAAgB,CAAE,IAhBZ,CAnBW,CAAd,CAsCP,MAAO,IAAMC,CAAAA,IAAI,CAAG,CAClBpB,IAAI,CAAE,CACJC,OAAO,CAAEV,MAAM,CAACgB,KADZ,CAEJL,SAAS,CAAE,0BAFP,CAGJC,QAAQ,CAAE,0BAHN,CAIJkB,IAAI,CAAE,0BAJF,CADY,CAOlBjB,OAAO,CAAE,2BAPS,CAQlBC,UAAU,CAAE,CACVC,KAAK,CAAE,SADG,CAEVE,OAAO,CAAE,SAFC,CARM,CAYlBC,MAAM,CAAE,CACNC,MAAM,CAAEnB,MAAM,CAACgB,KADT,CAENI,KAAK,CAAE,2BAFD,CAGNC,YAAY,CAAE,IAHR,CAINC,QAAQ,CAAE,2BAJJ,CAKNC,eAAe,CAAE,IALX,CAMNX,QAAQ,CAAE,0BANJ,CAONY,kBAAkB,CAAE,2BAPd,CAQNC,eAAe,CAAE,IARX,CASNC,KAAK,CAAE,2BATD,CAUNC,YAAY,CAAE,IAVR,CAWNC,gBAAgB,CAAE,IAXZ,CAZU,CAAb,CA2BP,QAASG,CAAAA,cAAT,CAAwBC,MAAxB,CAAgCC,SAAhC,CAA2CC,KAA3C,CAAkDC,WAAlD,CAA+D,CAC7D,GAAMC,CAAAA,gBAAgB,CAAGD,WAAW,CAAC3B,KAAZ,EAAqB2B,WAA9C,CACA,GAAME,CAAAA,eAAe,CAAGF,WAAW,CAACN,IAAZ,EAAoBM,WAAW,CAAG,GAA1D,CAEA,GAAI,CAACH,MAAM,CAACC,SAAD,CAAX,CAAwB,CACtB,GAAID,MAAM,CAACM,cAAP,CAAsBJ,KAAtB,CAAJ,CAAkC,CAChCF,MAAM,CAACC,SAAD,CAAN,CAAoBD,MAAM,CAACE,KAAD,CAA1B,CACD,CAFD,IAEO,IAAID,SAAS,GAAK,OAAlB,CAA2B,CAChCD,MAAM,CAACxB,KAAP,CAAeT,OAAO,CAACiC,MAAM,CAACO,IAAR,CAAcH,gBAAd,CAAtB,CACD,CAFM,IAEA,IAAIH,SAAS,GAAK,MAAlB,CAA0B,CAC/BD,MAAM,CAACH,IAAP,CAAchC,MAAM,CAACmC,MAAM,CAACO,IAAR,CAAcF,eAAd,CAApB,CACD,CACF,CACF,CAED,QAASG,CAAAA,iBAAT,EAA2C,IAAhBC,CAAAA,IAAgB,2DAAT,OAAS,CACzC,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnB,MAAO,CACLF,IAAI,CAAElC,IAAI,CAAC,GAAD,CADL,CAELG,KAAK,CAAEH,IAAI,CAAC,EAAD,CAFN,CAGLwB,IAAI,CAAExB,IAAI,CAAC,GAAD,CAHL,CAAP,CAKD,CAED,MAAO,CACLkC,IAAI,CAAElC,IAAI,CAAC,GAAD,CADL,CAELG,KAAK,CAAEH,IAAI,CAAC,GAAD,CAFN,CAGLwB,IAAI,CAAExB,IAAI,CAAC,GAAD,CAHL,CAAP,CAKD,CAED,QAASqC,CAAAA,mBAAT,EAA6C,IAAhBD,CAAAA,IAAgB,2DAAT,OAAS,CAC3C,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnB,MAAO,CACLF,IAAI,CAAErC,MAAM,CAAC,GAAD,CADP,CAELM,KAAK,CAAEN,MAAM,CAAC,EAAD,CAFR,CAGL2B,IAAI,CAAE3B,MAAM,CAAC,GAAD,CAHP,CAAP,CAKD,CAED,MAAO,CACLqC,IAAI,CAAErC,MAAM,CAAC,GAAD,CADP,CAELM,KAAK,CAAEN,MAAM,CAAC,GAAD,CAFR,CAGL2B,IAAI,CAAE3B,MAAM,CAAC,GAAD,CAHP,CAAP,CAKD,CAED,QAASyC,CAAAA,eAAT,EAAyC,IAAhBF,CAAAA,IAAgB,2DAAT,OAAS,CACvC,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnB,MAAO,CACLF,IAAI,CAAEpC,GAAG,CAAC,GAAD,CADJ,CAELK,KAAK,CAAEL,GAAG,CAAC,GAAD,CAFL,CAGL0B,IAAI,CAAE1B,GAAG,CAAC,GAAD,CAHJ,CAAP,CAKD,CAED,MAAO,CACLoC,IAAI,CAAEpC,GAAG,CAAC,GAAD,CADJ,CAELK,KAAK,CAAEL,GAAG,CAAC,GAAD,CAFL,CAGL0B,IAAI,CAAE1B,GAAG,CAAC,GAAD,CAHJ,CAAP,CAKD,CAED,QAASyC,CAAAA,cAAT,EAAwC,IAAhBH,CAAAA,IAAgB,2DAAT,OAAS,CACtC,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnB,MAAO,CACLF,IAAI,CAAEjC,SAAS,CAAC,GAAD,CADV,CAELE,KAAK,CAAEF,SAAS,CAAC,GAAD,CAFX,CAGLuB,IAAI,CAAEvB,SAAS,CAAC,GAAD,CAHV,CAAP,CAKD,CAED,MAAO,CACLiC,IAAI,CAAEjC,SAAS,CAAC,GAAD,CADV,CAELE,KAAK,CAAEF,SAAS,CAAC,GAAD,CAFX,CAGLuB,IAAI,CAAEvB,SAAS,CAAC,GAAD,CAHV,CAAP,CAKD,CAED,QAASuC,CAAAA,iBAAT,EAA2C,IAAhBJ,CAAAA,IAAgB,2DAAT,OAAS,CACzC,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnB,MAAO,CACLF,IAAI,CAAEhC,KAAK,CAAC,GAAD,CADN,CAELC,KAAK,CAAED,KAAK,CAAC,GAAD,CAFP,CAGLsB,IAAI,CAAEtB,KAAK,CAAC,GAAD,CAHN,CAAP,CAKD,CAED,MAAO,CACLgC,IAAI,CAAEhC,KAAK,CAAC,GAAD,CADN,CAELC,KAAK,CAAED,KAAK,CAAC,GAAD,CAFP,CAGLsB,IAAI,CAAEtB,KAAK,CAAC,GAAD,CAHN,CAAP,CAKD,CAED,QAASuC,CAAAA,iBAAT,EAA2C,IAAhBL,CAAAA,IAAgB,2DAAT,OAAS,CACzC,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnB,MAAO,CACLF,IAAI,CAAEnC,MAAM,CAAC,GAAD,CADP,CAELI,KAAK,CAAEJ,MAAM,CAAC,GAAD,CAFR,CAGLyB,IAAI,CAAEzB,MAAM,CAAC,GAAD,CAHP,CAAP,CAKD,CAED,MAAO,CACLmC,IAAI,CAAE,SADD,CAEL;AACA/B,KAAK,CAAEJ,MAAM,CAAC,GAAD,CAHR,CAILyB,IAAI,CAAEzB,MAAM,CAAC,GAAD,CAJP,CAAP,CAMD,CAED,cAAe,SAAS2C,CAAAA,aAAT,CAAuBC,OAAvB,CAAgC,CAC7C,kBAIIA,OAJJ,CACEP,IADF,CACEA,IADF,wBACS,OADT,qCAIIO,OAJJ,CAEEC,iBAFF,CAEEA,iBAFF,gCAEsB,CAFtB,4CAIID,OAJJ,CAGEb,WAHF,CAGEA,WAHF,+BAGgB,GAHhB,sBAKMe,KALN,CAKc1D,6BAA6B,CAACwD,OAAD,CAAUrD,SAAV,CAL3C,CAOA,GAAMe,CAAAA,OAAO,CAAGsC,OAAO,CAACtC,OAAR,EAAmB8B,iBAAiB,CAACC,IAAD,CAApD,CACA,GAAM9B,CAAAA,SAAS,CAAGqC,OAAO,CAACrC,SAAR,EAAqB+B,mBAAmB,CAACD,IAAD,CAA1D,CACA,GAAMU,CAAAA,KAAK,CAAGH,OAAO,CAACG,KAAR,EAAiBR,eAAe,CAACF,IAAD,CAA9C,CACA,GAAMW,CAAAA,IAAI,CAAGJ,OAAO,CAACI,IAAR,EAAgBR,cAAc,CAACH,IAAD,CAA3C,CACA,GAAMY,CAAAA,OAAO,CAAGL,OAAO,CAACK,OAAR,EAAmBR,iBAAiB,CAACJ,IAAD,CAApD,CACA,GAAMa,CAAAA,OAAO,CAAGN,OAAO,CAACM,OAAR,EAAmBR,iBAAiB,CAACL,IAAD,CAApD,CAA4D;AAC5D;AACA;AAEA,QAASc,CAAAA,eAAT,CAAyBzC,UAAzB,CAAqC,CACnC,GAAM0C,CAAAA,YAAY,CAAG1D,gBAAgB,CAACgB,UAAD,CAAae,IAAI,CAACpB,IAAL,CAAUC,OAAvB,CAAhB,EAAmDuC,iBAAnD,CAAuEpB,IAAI,CAACpB,IAAL,CAAUC,OAAjF,CAA2FF,KAAK,CAACC,IAAN,CAAWC,OAA3H,CAEA,GAAI+C,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,GAAMC,CAAAA,QAAQ,CAAG9D,gBAAgB,CAACgB,UAAD,CAAa0C,YAAb,CAAjC,CAEA,GAAII,QAAQ,CAAG,CAAf,CAAkB,CAChBC,OAAO,CAACV,KAAR,CAAc,sCAA+BS,QAA/B,mBAAiDJ,YAAjD,gBAAoE1C,UAApE,EAAkF,0EAAlF,CAA8J,gFAA9J,EAAgPgD,IAAhP,CAAqP,IAArP,CAAd,EACD,CACF,CAED,MAAON,CAAAA,YAAP,CACD,CAED,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAMf,IALJC,CAAAA,KAKI,MALJA,KAKI,CAJJC,IAII,MAJJA,IAII,qBAHJC,SAGI,CAHJA,SAGI,yBAHQ,GAGR,qCAFJC,UAEI,CAFJA,UAEI,0BAFS,GAET,qCADJC,SACI,CADJA,SACI,yBADQ,GACR,gBACJJ,KAAK,CAAGzE,QAAQ,CAAC,EAAD,CAAKyE,KAAL,CAAhB,CAEA,GAAI,CAACA,KAAK,CAACzB,IAAP,EAAeyB,KAAK,CAACE,SAAD,CAAxB,CAAqC,CACnCF,KAAK,CAACzB,IAAN,CAAayB,KAAK,CAACE,SAAD,CAAlB,CACD,CAED,GAAI,CAACF,KAAK,CAAC1B,cAAN,CAAqB,MAArB,CAAL,CAAmC,CACjC,KAAM,IAAI+B,CAAAA,KAAJ,CAAUZ,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,yBAAyDM,IAAI,aAAQA,IAAR,MAAkB,EAA/E,iHACsCC,SADtC,gBACgExE,sBAAsB,CAAC,EAAD,CAAKuE,IAAI,aAAQA,IAAR,MAAkB,EAA3B,CAA+BC,SAA/B,CADhG,CAAN,CAED,CAED,GAAI,MAAOF,CAAAA,KAAK,CAACzB,IAAb,GAAsB,QAA1B,CAAoC,CAClC,KAAM,IAAI8B,CAAAA,KAAJ,CAAUZ,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,yBAAyDM,IAAI,aAAQA,IAAR,MAAkB,EAA/E,gGACqBK,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACzB,IAArB,CADrB,kSAab7C,sBAAsB,CAAC,EAAD,CAAKuE,IAAI,aAAQA,IAAR,MAAkB,EAA3B,CAA+BK,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACzB,IAArB,CAA/B,CAbnB,CAAN,CAcD,CAEDR,cAAc,CAACiC,KAAD,CAAQ,OAAR,CAAiBG,UAAjB,CAA6BhC,WAA7B,CAAd,CACAJ,cAAc,CAACiC,KAAD,CAAQ,MAAR,CAAgBI,SAAhB,CAA2BjC,WAA3B,CAAd,CAEA,GAAI,CAAC6B,KAAK,CAACR,YAAX,CAAyB,CACvBQ,KAAK,CAACR,YAAN,CAAqBD,eAAe,CAACS,KAAK,CAACzB,IAAP,CAApC,CACD,CAED,MAAOyB,CAAAA,KAAP,CACD,CA3CD,CA6CA,GAAMQ,CAAAA,KAAK,CAAG,CACZ3C,IAAI,CAAJA,IADY,CAEZrB,KAAK,CAALA,KAFY,CAAd,CAKA,GAAIiD,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,GAAI,CAACa,KAAK,CAAC/B,IAAD,CAAV,CAAkB,CAChBoB,OAAO,CAACV,KAAR,kCAAyCV,IAAzC,yBACD,CACF,CAED,GAAMgC,CAAAA,aAAa,CAAG7E,SAAS,CAACL,QAAQ,CAAC,CACvC;AACAS,MAAM,CAAET,QAAQ,CAAC,EAAD,CAAKS,MAAL,CAFuB,CAGvC;AACA;AACAyC,IAAI,CAAJA,IALuC,CAMvC;AACA/B,OAAO,CAAEqD,YAAY,CAAC,CACpBC,KAAK,CAAEtD,OADa,CAEpBuD,IAAI,CAAE,SAFc,CAAD,CAPkB,CAWvC;AACAtD,SAAS,CAAEoD,YAAY,CAAC,CACtBC,KAAK,CAAErD,SADe,CAEtBsD,IAAI,CAAE,WAFgB,CAGtBC,SAAS,CAAE,MAHW,CAItBC,UAAU,CAAE,MAJU,CAKtBC,SAAS,CAAE,MALW,CAAD,CAZgB,CAmBvC;AACAjB,KAAK,CAAEY,YAAY,CAAC,CAClBC,KAAK,CAAEb,KADW,CAElBc,IAAI,CAAE,OAFY,CAAD,CApBoB,CAwBvC;AACAX,OAAO,CAAES,YAAY,CAAC,CACpBC,KAAK,CAAEV,OADa,CAEpBW,IAAI,CAAE,SAFc,CAAD,CAzBkB,CA6BvC;AACAb,IAAI,CAAEW,YAAY,CAAC,CACjBC,KAAK,CAAEZ,IADU,CAEjBa,IAAI,CAAE,MAFW,CAAD,CA9BqB,CAkCvC;AACAZ,OAAO,CAAEU,YAAY,CAAC,CACpBC,KAAK,CAAEX,OADa,CAEpBY,IAAI,CAAE,SAFc,CAAD,CAnCkB,CAuCvC;AACAhE,IAAI,CAAJA,IAxCuC,CAyCvC;AACA;AACAgD,iBAAiB,CAAjBA,iBA3CuC,CA4CvC;AACAM,eAAe,CAAfA,eA7CuC,CA8CvC;AACAQ,YAAY,CAAZA,YA/CuC,CAgDvC;AACA;AACA;AACA5B,WAAW,CAAXA,WAnDuC,CAAD,CAoDrCqC,KAAK,CAAC/B,IAAD,CApDgC,CAAT,CAoDdS,KApDc,CAA/B,CAqDA,MAAOuB,CAAAA,aAAP,CACD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nimport { deepmerge } from '@mui/utils';\nimport { darken, getContrastRatio, lighten } from '@mui/system';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport purple from '../colors/purple';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport lightBlue from '../colors/lightBlue';\nimport green from '../colors/green';\nexport const light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport const dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: blue[200],\n      light: blue[50],\n      dark: blue[400]\n    };\n  }\n\n  return {\n    main: blue[700],\n    light: blue[400],\n    dark: blue[800]\n  };\n}\n\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: purple[200],\n      light: purple[50],\n      dark: purple[400]\n    };\n  }\n\n  return {\n    main: purple[500],\n    light: purple[300],\n    dark: purple[700]\n  };\n}\n\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: red[500],\n      light: red[300],\n      dark: red[700]\n    };\n  }\n\n  return {\n    main: red[700],\n    light: red[400],\n    dark: red[800]\n  };\n}\n\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: lightBlue[400],\n      light: lightBlue[300],\n      dark: lightBlue[700]\n    };\n  }\n\n  return {\n    main: lightBlue[700],\n    light: lightBlue[500],\n    dark: lightBlue[900]\n  };\n}\n\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: green[400],\n      light: green[300],\n      dark: green[700]\n    };\n  }\n\n  return {\n    main: green[800],\n    light: green[500],\n    dark: green[900]\n  };\n}\n\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: orange[400],\n      light: orange[300],\n      dark: orange[700]\n    };\n  }\n\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: orange[500],\n    dark: orange[900]\n  };\n}\n\nexport default function createPalette(palette) {\n  const {\n    mode = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = _objectWithoutPropertiesLoose(palette, _excluded);\n\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = _extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : _formatMuiErrorMessage(11, name ? ` (${name})` : '', mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : _formatMuiErrorMessage(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const modes = {\n    dark,\n    light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n\n  const paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: _extends({}, common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}"]},"metadata":{},"sourceType":"module"}