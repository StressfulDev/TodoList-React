{"ast":null,"code":"import _defineProperty from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import _extends from\"@babel/runtime/helpers/esm/extends\";var _excluded=[\"children\",\"className\",\"color\",\"disabled\",\"exclusive\",\"fullWidth\",\"onChange\",\"orientation\",\"size\",\"value\"];import*as React from'react';import{isFragment}from'react-is';import clsx from'clsx';import{unstable_composeClasses as composeClasses}from'@mui/base';import styled from'../styles/styled';import useThemeProps from'../styles/useThemeProps';import capitalize from'../utils/capitalize';import isValueSelected from'./isValueSelected';import toggleButtonGroupClasses,{getToggleButtonGroupUtilityClass}from'./toggleButtonGroupClasses';import{jsx as _jsx}from\"react/jsx-runtime\";var useUtilityClasses=function useUtilityClasses(ownerState){var classes=ownerState.classes,orientation=ownerState.orientation,fullWidth=ownerState.fullWidth,disabled=ownerState.disabled;var slots={root:['root',orientation==='vertical'&&'vertical',fullWidth&&'fullWidth'],grouped:['grouped',\"grouped\".concat(capitalize(orientation)),disabled&&'disabled']};return composeClasses(slots,getToggleButtonGroupUtilityClass,classes);};var ToggleButtonGroupRoot=styled('div',{name:'MuiToggleButtonGroup',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[_defineProperty({},\"& .\".concat(toggleButtonGroupClasses.grouped),styles.grouped),_defineProperty({},\"& .\".concat(toggleButtonGroupClasses.grouped),styles[\"grouped\".concat(capitalize(ownerState.orientation))]),styles.root,ownerState.orientation==='vertical'&&styles.vertical,ownerState.fullWidth&&styles.fullWidth];}})(function(_ref3){var ownerState=_ref3.ownerState,theme=_ref3.theme;return _extends({display:'inline-flex',borderRadius:(theme.vars||theme).shape.borderRadius},ownerState.orientation==='vertical'&&{flexDirection:'column'},ownerState.fullWidth&&{width:'100%'},_defineProperty({},\"& .\".concat(toggleButtonGroupClasses.grouped),_extends({},ownerState.orientation==='horizontal'?_defineProperty({'&:not(:first-of-type)':{marginLeft:-1,borderLeft:'1px solid transparent',borderTopLeftRadius:0,borderBottomLeftRadius:0},'&:not(:last-of-type)':{borderTopRightRadius:0,borderBottomRightRadius:0}},\"&.\".concat(toggleButtonGroupClasses.selected,\" + .\").concat(toggleButtonGroupClasses.grouped,\".\").concat(toggleButtonGroupClasses.selected),{borderLeft:0,marginLeft:0}):_defineProperty({'&:not(:first-of-type)':{marginTop:-1,borderTop:'1px solid transparent',borderTopLeftRadius:0,borderTopRightRadius:0},'&:not(:last-of-type)':{borderBottomLeftRadius:0,borderBottomRightRadius:0}},\"&.\".concat(toggleButtonGroupClasses.selected,\" + .\").concat(toggleButtonGroupClasses.grouped,\".\").concat(toggleButtonGroupClasses.selected),{borderTop:0,marginTop:0}))));});var ToggleButtonGroup=/*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiToggleButtonGroup'});var children=props.children,className=props.className,_props$color=props.color,color=_props$color===void 0?'standard':_props$color,_props$disabled=props.disabled,disabled=_props$disabled===void 0?false:_props$disabled,_props$exclusive=props.exclusive,exclusive=_props$exclusive===void 0?false:_props$exclusive,_props$fullWidth=props.fullWidth,fullWidth=_props$fullWidth===void 0?false:_props$fullWidth,onChange=props.onChange,_props$orientation=props.orientation,orientation=_props$orientation===void 0?'horizontal':_props$orientation,_props$size=props.size,size=_props$size===void 0?'medium':_props$size,value=props.value,other=_objectWithoutPropertiesLoose(props,_excluded);var ownerState=_extends({},props,{disabled:disabled,fullWidth:fullWidth,orientation:orientation,size:size});var classes=useUtilityClasses(ownerState);var handleChange=function handleChange(event,buttonValue){if(!onChange){return;}var index=value&&value.indexOf(buttonValue);var newValue;if(value&&index>=0){newValue=value.slice();newValue.splice(index,1);}else{newValue=value?value.concat(buttonValue):[buttonValue];}onChange(event,newValue);};var handleExclusiveChange=function handleExclusiveChange(event,buttonValue){if(!onChange){return;}onChange(event,value===buttonValue?null:buttonValue);};return/*#__PURE__*/_jsx(ToggleButtonGroupRoot,_extends({role:\"group\",className:clsx(classes.root,className),ref:ref,ownerState:ownerState},other,{children:React.Children.map(children,function(child){if(!/*#__PURE__*/React.isValidElement(child)){return null;}if(process.env.NODE_ENV!=='production'){if(isFragment(child)){console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\",'Consider providing an array instead.'].join('\\n'));}}return/*#__PURE__*/React.cloneElement(child,{className:clsx(classes.grouped,child.props.className),onChange:exclusive?handleExclusiveChange:handleChange,selected:child.props.selected===undefined?isValueSelected(child.props.value,value):child.props.selected,size:child.props.size||size,fullWidth:fullWidth,color:child.props.color||color,disabled:child.props.disabled||disabled});})}));});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default ToggleButtonGroup;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","isFragment","clsx","unstable_composeClasses","composeClasses","styled","useThemeProps","capitalize","isValueSelected","toggleButtonGroupClasses","getToggleButtonGroupUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","orientation","fullWidth","disabled","slots","root","grouped","ToggleButtonGroupRoot","name","slot","overridesResolver","props","styles","vertical","theme","display","borderRadius","vars","shape","flexDirection","width","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","selected","marginTop","borderTop","ToggleButtonGroup","forwardRef","inProps","ref","children","className","color","exclusive","onChange","size","value","other","handleChange","event","buttonValue","index","indexOf","newValue","slice","splice","concat","handleExclusiveChange","role","Children","map","child","isValidElement","process","env","NODE_ENV","console","error","join","cloneElement","undefined"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;"]},"metadata":{},"sourceType":"module"}