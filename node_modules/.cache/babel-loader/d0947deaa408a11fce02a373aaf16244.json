{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodoList/TodoList.jsx\";\nimport Todo from \"./Todo/Todo\";\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  let {\n    toDoList,\n    handleFilter,\n    completeTodo\n  } = _ref;\n  let theme = createTheme({\n    typography: {\n      body1: {\n        maxWidth: '1200px',\n        margin: 'auto',\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em'\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  let todos = toDoList.map((todo, index) => {\n    return /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      index: index,\n      handleFilter: handleFilter,\n      completeTodo: completeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoWrap\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"body1\",\n        gutterBottom: true,\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btn',\n        onClick: handleFilter,\n        children: \"Clear completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodoList/TodoList.jsx"],"names":["Todo","createTheme","responsiveFontSizes","ThemeProvider","Typography","TodoList","toDoList","handleFilter","completeTodo","theme","typography","body1","maxWidth","margin","width","fontWeight","fontSize","todos","map","todo","index"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAAQC,WAAR,EAAqBC,mBAArB,EAA0CC,aAA1C,QAA8D,eAA9D;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,QAAQ,GAAG,QAA4C;AAAA,MAA3C;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,GAA2C;AAEvD,MAAIC,KAAK,GAAGR,WAAW,CAAC;AACtBS,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,QADL;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,KAAK,EAAE,KAHF;AAILC,QAAAA,UAAU,EAAE,GAJP;AAKLC,QAAAA,QAAQ,EAAE;AALL;AADG;AADU,GAAD,CAAvB;AAWAP,EAAAA,KAAK,GAAGP,mBAAmB,CAACO,KAAD,CAA3B;AAEA,MAAIQ,KAAK,GAAGX,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,wBACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,KAAK,EAAEC,KAAzB;AAAgC,MAAA,YAAY,EAAEb,YAA9C;AAA4D,MAAA,YAAY,EAAEC;AAA1E;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD,GAJW,CAAZ;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEC,KAAtB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,SAAS,EAAC,OAAtC;AAA8C,QAAA,YAAY,MAA1D;AAAA,kBACGQ;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAE,KAAnB;AAA0B,QAAA,OAAO,EAAEV,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD,CA/BL;;KAAMF,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import Todo from \"./Todo/Todo\";\nimport {createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\n\nconst TodoList = ({toDoList, handleFilter, completeTodo}) => {\n\n      let theme = createTheme({\n        typography: {\n          body1: {\n            maxWidth: '1200px',\n            margin: 'auto',\n            width: '70%',\n            fontWeight: 500,\n            fontSize: '1.1em',\n          },\n        }\n      })\n      theme = responsiveFontSizes(theme);\n\n      let todos = toDoList.map((todo, index) => {\n        return (\n            <Todo todo={todo} index={index} handleFilter={handleFilter} completeTodo={completeTodo}/>\n        );\n      })\n\n      return (\n          <div className='todoWrap'>\n            <ThemeProvider theme={theme}>\n              <Typography variant=\"body1\" component=\"body1\" gutterBottom>\n                {todos}\n              </Typography>\n              <button className={'btn'} onClick={handleFilter}>Clear completed</button>\n            </ThemeProvider>\n          </div>\n      );\n    }\n;\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}