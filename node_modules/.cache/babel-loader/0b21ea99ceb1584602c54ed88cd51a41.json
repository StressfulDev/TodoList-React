{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\",\n    _s = $RefreshSig$();\n\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport ActiveItem from \"./FilteredItem/ActiveItem\";\nimport CompletedItem from \"./FilteredItem/CompletedItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = _ref => {\n  _s();\n\n  let {\n    toDoList,\n    clearCompleted,\n    handleEditState,\n    completeTask,\n    toggleComplete,\n    removeTask\n  } = _ref;\n  const [active, setActive] = useState('none');\n  const [completed, setCompleted] = useState('none');\n  const [all, setAll] = useState('block');\n  let toDoItems = toDoList.map((todo, index) => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      index: index,\n      complete: todo.complete,\n      completeTask: completeTask,\n      toggleComplete: toggleComplete,\n      removeTask: removeTask,\n      handleEditState: handleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  });\n  let activeList = toDoList.filter(task => task.complete === false).map((active, index) => {\n    return /*#__PURE__*/_jsxDEV(ActiveItem, {\n      active: active,\n      index: index,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      handleEditState: handleEditState\n    }, active.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  });\n  let completedList = toDoList.filter(task => task.complete === true).map((completed, index) => {\n    return /*#__PURE__*/_jsxDEV(CompletedItem, {\n      completed: completed,\n      index: index,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      handleEditState: handleEditState\n    }, completed.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  });\n\n  const activeState = () => {\n    setActive('block');\n    setCompleted('none');\n    setAll('none');\n  };\n\n  const completedState = () => {\n    setActive('none');\n    setCompleted('block');\n    setAll('none');\n  };\n\n  const allState = () => {\n    setActive('none');\n    setCompleted('none');\n    setAll('block');\n  };\n\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em'\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        display: all,\n        className: 'hideActive',\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: toDoItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        display: active,\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: activeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        display: completed,\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: completedList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: allState,\n        children: [\"All \", toDoItems.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: activeState,\n        children: [\"Active \", activeList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: completedState,\n        children: [\"Completed \", completedList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: clearCompleted,\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodosList, \"JCKZffMC7g0Rq+QVu/SufK35i7s=\");\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","createTheme","responsiveFontSizes","ThemeProvider","Typography","useState","ActiveItem","CompletedItem","TodosList","toDoList","clearCompleted","handleEditState","completeTask","toggleComplete","removeTask","active","setActive","completed","setCompleted","all","setAll","toDoItems","map","todo","index","complete","id","activeList","filter","task","completedList","activeState","completedState","allState","theme","typography","body1","width","fontWeight","fontSize","length"],"mappings":"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","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport {useState} from \"react\";\nimport ActiveItem from \"./FilteredItem/ActiveItem\";\nimport CompletedItem from \"./FilteredItem/CompletedItem\";\n\nconst TodosList = ({toDoList, clearCompleted, handleEditState, completeTask, toggleComplete, removeTask}) => {\n\n  const [active, setActive] = useState('none');\n  const [completed, setCompleted] = useState('none');\n  const [all, setAll] = useState('block');\n\n  let toDoItems = toDoList.map((todo, index) => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  index={index}\n                  complete={todo.complete}\n                  completeTask={completeTask}\n                  toggleComplete={toggleComplete}\n                  removeTask={removeTask}\n                  handleEditState={handleEditState}\n        />\n    );\n  })\n\n  let activeList = toDoList.filter(task => task.complete === false).map((active, index) => {\n    return (\n        <ActiveItem key={active.id}\n                    active={active}\n                    index={index}\n                    completeTask={completeTask}\n                    removeTask={removeTask}\n                    handleEditState={handleEditState}\n        />\n    );\n  })\n\n  let completedList = toDoList.filter(task => task.complete === true).map((completed, index) => {\n    return (\n        <CompletedItem key={completed.id}\n                       completed={completed}\n                       index={index}\n                       completeTask={completeTask}\n                       removeTask={removeTask}\n                       handleEditState={handleEditState}\n        />\n    );\n  })\n\n  const activeState = () => {\n    setActive('block');\n    setCompleted('none')\n    setAll('none')\n  }\n\n  const completedState = () => {\n    setActive('none');\n    setCompleted('block')\n    setAll('none')\n  }\n\n  const allState = () => {\n    setActive('none');\n    setCompleted('none')\n    setAll('block')\n  }\n\n\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em',\n      },\n    }\n  })\n  theme = responsiveFontSizes(theme);\n\n  return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Typography display={all} className={'hideActive'} variant=\"h6\" component=\"h6\" gutterBottom>\n            {toDoItems}\n          </Typography>\n          <Typography display={active} variant=\"h6\" component=\"h6\" gutterBottom>\n            {activeList}\n          </Typography>\n          <Typography display={completed} variant=\"h6\" component=\"h6\" gutterBottom>\n            {completedList}\n          </Typography>\n          <button className={'btnClear'} onClick={allState}>\n            All {toDoItems.length}\n          </button>\n          <button className={'btnClear'} onClick={activeState}>\n            Active {activeList.length}\n          </button>\n          <button className={'btnClear'} onClick={completedState}>\n            Completed {completedList.length}\n          </button>\n          <button className={'btnClear'} onClick={clearCompleted}>\n            Clear Completed\n          </button>\n        </ThemeProvider>\n      </div>\n  );\n};\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}