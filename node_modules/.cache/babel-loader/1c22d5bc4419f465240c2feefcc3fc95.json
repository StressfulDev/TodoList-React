{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";/* eslint-disable @typescript-eslint/naming-convention */import{unstable_createCssVarsProvider as createCssVarsProvider}from'@mui/system';import experimental_extendTheme from'./experimental_extendTheme';import createTypography from'./createTypography';var defaultTheme=experimental_extendTheme();var _createCssVarsProvide=createCssVarsProvider({theme:defaultTheme,defaultColorScheme:{light:'light',dark:'dark'},prefix:'md',resolveTheme:function resolveTheme(theme){var newTheme=_extends({},theme,{typography:createTypography(theme.palette,theme.typography)});return newTheme;},shouldSkipGeneratingVar:function shouldSkipGeneratingVar(keys){return!!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/);}}),Experimental_CssVarsProvider=_createCssVarsProvide.CssVarsProvider,useColorScheme=_createCssVarsProvide.useColorScheme,getInitColorSchemeScript=_createCssVarsProvide.getInitColorSchemeScript;export{useColorScheme,getInitColorSchemeScript,Experimental_CssVarsProvider};","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/styles/CssVarsProvider.js"],"names":["_extends","unstable_createCssVarsProvider","createCssVarsProvider","experimental_extendTheme","createTypography","defaultTheme","theme","defaultColorScheme","light","dark","prefix","resolveTheme","newTheme","typography","palette","shouldSkipGeneratingVar","keys","match","Experimental_CssVarsProvider","CssVarsProvider","useColorScheme","getInitColorSchemeScript"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,oCAArB,CAEA,yDACA,OAASC,8BAA8B,GAAIC,CAAAA,qBAA3C,KAAwE,aAAxE,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,GAAMC,CAAAA,YAAY,CAAGF,wBAAwB,EAA7C,CACA,0BAIID,qBAAqB,CAAC,CACxBI,KAAK,CAAED,YADiB,CAExBE,kBAAkB,CAAE,CAClBC,KAAK,CAAE,OADW,CAElBC,IAAI,CAAE,MAFY,CAFI,CAMxBC,MAAM,CAAE,IANgB,CAOxBC,YAAY,CAAE,sBAAAL,KAAK,CAAI,CACrB,GAAMM,CAAAA,QAAQ,CAAGZ,QAAQ,CAAC,EAAD,CAAKM,KAAL,CAAY,CACnCO,UAAU,CAAET,gBAAgB,CAACE,KAAK,CAACQ,OAAP,CAAgBR,KAAK,CAACO,UAAtB,CADO,CAAZ,CAAzB,CAIA,MAAOD,CAAAA,QAAP,CACD,CAbuB,CAcxBG,uBAAuB,CAAE,iCAAAC,IAAI,QAAI,CAAC,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAAR,CAAc,uDAAd,CAAN,EAdL,CAAD,CAJzB,CACmBC,4BADnB,uBACEC,eADF,CAEEC,cAFF,uBAEEA,cAFF,CAGEC,wBAHF,uBAGEA,wBAHF,CAoBA,OAASD,cAAT,CAAyBC,wBAAzB,CAAmDH,4BAAnD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider: Experimental_CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  theme: defaultTheme,\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  prefix: 'md',\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    return newTheme;\n  },\n  shouldSkipGeneratingVar: keys => !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/)\n});\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };"]},"metadata":{},"sourceType":"module"}