{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodoItem/TodoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport Checkbox from '@mui/material/Checkbox';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { createTheme, Input, ThemeProvider } from '@mui/material';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    todo,\n    completeState,\n    handleEditState,\n    completeTask,\n    removeTask,\n    saveEditTask\n  } = _ref;\n  const [userInput, setUserInput] = useState(todo.task);\n  const [editId, setEditId] = useState(todo.id);\n\n  const editTodo = id => {\n    setEditId(id);\n    saveEditTask(editId);\n  };\n\n  const handleChange = e => {\n    setUserInput(e.currentTarget.value);\n  };\n\n  const strikeCompleted = completeState ? \"todo strikeTask\" : \"todo\";\n  const deleteCompleted = completeState ? \"primary\" : \"default\";\n  const toggleShowInput = todo.edit ? \"showInput\" : \"hideInput\";\n  const toggleHideText = todo.edit ? \"hideText\" : \"showText\";\n  const hideEditButton = todo.edit ? \"hideEditButton\" : \"showEditButton\";\n  const hideSaveButton = todo.edit ? \"showSaveButton\" : \"hideSaveButton\";\n  const disableCheckbox = !!todo.edit;\n  const theme = createTheme({\n    components: {\n      MuiInput: {\n        styleOverrides: {\n          root: {\n            width: '150%'\n          }\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: todo.id,\n    className: strikeCompleted,\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: completeState,\n      disabled: disableCheckbox,\n      color: \"success\",\n      onClick: () => completeTask(todo.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: hideEditButton,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"delete\",\n        onClick: () => handleEditState(todo.id),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: hideSaveButton,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"save\",\n        onClick: () => editTodo(todo.id),\n        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: toggleHideText,\n      children: todo.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: toggleShowInput,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: userInput,\n          type: \"text\",\n          size: \"small\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'btnWrap',\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => removeTask(todo.id),\n          \"aria-label\": \"delete\",\n          color: deleteCompleted,\n          disabled: disableCheckbox,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodoItem, \"a964DWCvI9MvnIIozS67ktAjbaA=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodoItem/TodoItem.jsx"],"names":["Checkbox","Stack","IconButton","DeleteIcon","EditIcon","DoneIcon","createTheme","Input","ThemeProvider","useState","TodoItem","todo","completeState","handleEditState","completeTask","removeTask","saveEditTask","userInput","setUserInput","task","editId","setEditId","id","editTodo","handleChange","e","currentTarget","value","strikeCompleted","deleteCompleted","toggleShowInput","edit","toggleHideText","hideEditButton","hideSaveButton","disableCheckbox","theme","components","MuiInput","styleOverrides","root","width"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,WAAR,EAAqBC,KAArB,EAA4BC,aAA5B,QAAgD,eAAhD;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,QAAQ,GAAG,QAAoF;AAAA;;AAAA,MAAnF;AAACC,IAAAA,IAAD;AAAOC,IAAAA,aAAP;AAAsBC,IAAAA,eAAtB;AAAuCC,IAAAA,YAAvC;AAAqDC,IAAAA,UAArD;AAAiEC,IAAAA;AAAjE,GAAmF;AAEnG,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACE,IAAI,CAACQ,IAAN,CAA1C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACE,IAAI,CAACW,EAAN,CAApC;;AAEA,QAAMC,QAAQ,GAAID,EAAD,IAAQ;AACvBD,IAAAA,SAAS,CAACC,EAAD,CAAT;AACAN,IAAAA,YAAY,CAACI,MAAD,CAAZ;AACD,GAHD;;AAMA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACxBP,IAAAA,YAAY,CAACO,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAZ;AACD,GAFD;;AAKA,QAAMC,eAAe,GAAGhB,aAAa,GAAG,iBAAH,GAAuB,MAA5D;AACA,QAAMiB,eAAe,GAAGjB,aAAa,GAAG,SAAH,GAAe,SAApD;AACA,QAAMkB,eAAe,GAAGnB,IAAI,CAACoB,IAAL,GAAY,WAAZ,GAA0B,WAAlD;AACA,QAAMC,cAAc,GAAGrB,IAAI,CAACoB,IAAL,GAAY,UAAZ,GAAyB,UAAhD;AACA,QAAME,cAAc,GAAGtB,IAAI,CAACoB,IAAL,GAAY,gBAAZ,GAA+B,gBAAtD;AACA,QAAMG,cAAc,GAAGvB,IAAI,CAACoB,IAAL,GAAY,gBAAZ,GAA+B,gBAAtD;AACA,QAAMI,eAAe,GAAG,CAAC,CAACxB,IAAI,CAACoB,IAA/B;AAEA,QAAMK,KAAK,GAAG9B,WAAW,CAAC;AACxB+B,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,cAAc,EAAE;AACdC,UAAAA,IAAI,EAAE;AACJC,YAAAA,KAAK,EAAE;AADH;AADQ;AADR;AADA;AADY,GAAD,CAAzB;AAYA,sBACI;AAAK,IAAA,EAAE,EAAE9B,IAAI,CAACW,EAAd;AAAkB,IAAA,SAAS,EAAEM,eAA7B;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEhB,aAAnB;AACU,MAAA,QAAQ,EAAEuB,eADpB;AAEU,MAAA,KAAK,EAAC,SAFhB;AAGU,MAAA,OAAO,EAAE,MAAMrB,YAAY,CAACH,IAAI,CAACW,EAAN;AAHrC;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAEW,cAAhB;AAAA,6BACE,QAAC,UAAD;AAAY,sBAAW,QAAvB;AACY,QAAA,OAAO,EAAE,MAAMpB,eAAe,CAACF,IAAI,CAACW,EAAN,CAD1C;AAAA,+BAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAK,MAAA,SAAS,EAAEY,cAAhB;AAAA,6BACE,QAAC,UAAD;AAAY,sBAAW,MAAvB;AACY,QAAA,OAAO,EAAE,MAAMX,QAAQ,CAACZ,IAAI,CAACW,EAAN,CADnC;AAAA,+BAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF,eAoBE;AAAG,MAAA,SAAS,EAAEU,cAAd;AAAA,gBACGrB,IAAI,CAACQ;AADR;AAAA;AAAA;AAAA;AAAA,YApBF,eAuBE;AAAK,MAAA,SAAS,EAAEW,eAAhB;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEM,KAAtB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEnB,SAAd;AACO,UAAA,IAAI,EAAC,MADZ;AAEO,UAAA,IAAI,EAAC,OAFZ;AAGO,UAAA,QAAQ,EAAEO;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF,eAgCE;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AACO,QAAA,OAAO,EAAE,CADhB;AAAA,+BAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMT,UAAU,CAACJ,IAAI,CAACW,EAAN,CAArC;AACY,wBAAW,QADvB;AAEY,UAAA,KAAK,EAAEO,eAFnB;AAGY,UAAA,QAAQ,EAAEM,eAHtB;AAAA,iCAKE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CD,CAnFD;;GAAMzB,Q;;KAAAA,Q;AAqFN,eAAeA,QAAf","sourcesContent":["import Checkbox from '@mui/material/Checkbox';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DoneIcon from '@mui/icons-material/Done';\nimport {createTheme, Input, ThemeProvider} from '@mui/material';\nimport {useState} from \"react\";\n\nconst TodoItem = ({todo, completeState, handleEditState, completeTask, removeTask, saveEditTask}) => {\n\n  const [userInput, setUserInput] = useState(todo.task);\n  const [editId, setEditId] = useState(todo.id);\n\n  const editTodo = (id) => {\n    setEditId(id)\n    saveEditTask(editId)\n  }\n\n\n  const handleChange = e => {\n    setUserInput(e.currentTarget.value)\n  }\n\n\n  const strikeCompleted = completeState ? \"todo strikeTask\" : \"todo\";\n  const deleteCompleted = completeState ? \"primary\" : \"default\";\n  const toggleShowInput = todo.edit ? \"showInput\" : \"hideInput\";\n  const toggleHideText = todo.edit ? \"hideText\" : \"showText\";\n  const hideEditButton = todo.edit ? \"hideEditButton\" : \"showEditButton\";\n  const hideSaveButton = todo.edit ? \"showSaveButton\" : \"hideSaveButton\";\n  const disableCheckbox = !!todo.edit\n\n  const theme = createTheme({\n    components: {\n      MuiInput: {\n        styleOverrides: {\n          root: {\n            width: '150%',\n          },\n        },\n      },\n    },\n  });\n\n  return (\n      <div id={todo.id} className={strikeCompleted}>\n        <Checkbox checked={completeState}\n                  disabled={disableCheckbox}\n                  color=\"success\"\n                  onClick={() => completeTask(todo.id)\n                  }/>\n        <div className={hideEditButton}>\n          <IconButton aria-label=\"delete\"\n                      onClick={() => handleEditState(todo.id)\n                      }>\n            <EditIcon/>\n          </IconButton>\n        </div>\n        <div className={hideSaveButton}>\n          <IconButton aria-label=\"save\"\n                      onClick={() => editTodo(todo.id)}\n          >\n            <DoneIcon/>\n          </IconButton>\n        </div>\n        <p className={toggleHideText}>\n          {todo.task}\n        </p>\n        <div className={toggleShowInput}>\n          <ThemeProvider theme={theme}>\n            <Input value={userInput}\n                   type=\"text\"\n                   size='small'\n                   onChange={handleChange}\n            />\n          </ThemeProvider>\n        </div>\n        <div className={'btnWrap'}>\n          <Stack direction=\"row\"\n                 spacing={1}>\n            <IconButton onClick={() => removeTask(todo.id)}\n                        aria-label=\"delete\"\n                        color={deleteCompleted}\n                        disabled={disableCheckbox}\n            >\n              <DeleteIcon/>\n            </IconButton>\n          </Stack>\n        </div>\n      </div>\n  );\n};\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}