{"ast":null,"code":"import _slicedToArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"BackdropProps\"],_excluded2=[\"anchor\",\"disableBackdropTransition\",\"disableDiscovery\",\"disableSwipeToOpen\",\"hideBackdrop\",\"hysteresis\",\"minFlingVelocity\",\"ModalProps\",\"onClose\",\"onOpen\",\"open\",\"PaperProps\",\"SwipeAreaProps\",\"swipeAreaWidth\",\"transitionDuration\",\"variant\"];import*as React from'react';import{elementTypeAcceptingRef}from'@mui/utils';import{useThemeProps}from'@mui/system';import{NoSsr}from'@mui/base';import Drawer,{getAnchor,isHorizontal}from'../Drawer/Drawer';import ownerDocument from'../utils/ownerDocument';import ownerWindow from'../utils/ownerWindow';import useEventCallback from'../utils/useEventCallback';import useEnhancedEffect from'../utils/useEnhancedEffect';import useTheme from'../styles/useTheme';import{getTransitionProps}from'../transitions/utils';import SwipeArea from'./SwipeArea';// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UNCERTAINTY_THRESHOLD=3;// px\n// This is the part of the drawer displayed on touch start.\nvar DRAG_STARTED_SIGNAL=20;// px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nvar claimedSwipeInstance=null;// Exported for test purposes.\nexport function reset(){claimedSwipeInstance=null;}function calculateCurrentX(anchor,touches,doc){return anchor==='right'?doc.body.offsetWidth-touches[0].pageX:touches[0].pageX;}function calculateCurrentY(anchor,touches,containerWindow){return anchor==='bottom'?containerWindow.innerHeight-touches[0].clientY:touches[0].clientY;}function getMaxTranslate(horizontalSwipe,paperInstance){return horizontalSwipe?paperInstance.clientWidth:paperInstance.clientHeight;}function getTranslate(currentTranslate,startLocation,open,maxTranslate){return Math.min(Math.max(open?startLocation-currentTranslate:maxTranslate+startLocation-currentTranslate,0),maxTranslate);}/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */function getDomTreeShapes(element,rootNode){// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\nvar domTreeShapes=[];while(element&&element!==rootNode.parentElement){var style=ownerWindow(rootNode).getComputedStyle(element);if(// Ignore the scroll children if the element is absolute positioned.\nstyle.getPropertyValue('position')==='absolute'||// Ignore the scroll children if the element has an overflowX hidden\nstyle.getPropertyValue('overflow-x')==='hidden'){// noop\n}else if(element.clientWidth>0&&element.scrollWidth>element.clientWidth||element.clientHeight>0&&element.scrollHeight>element.clientHeight){// Ignore the nodes that have no width.\n// Keep elements with a scroll\ndomTreeShapes.push(element);}element=element.parentElement;}return domTreeShapes;}/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */function computeHasNativeHandler(_ref){var domTreeShapes=_ref.domTreeShapes,start=_ref.start,current=_ref.current,anchor=_ref.anchor;// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\nvar axisProperties={scrollPosition:{x:'scrollLeft',y:'scrollTop'},scrollLength:{x:'scrollWidth',y:'scrollHeight'},clientLength:{x:'clientWidth',y:'clientHeight'}};return domTreeShapes.some(function(shape){// Determine if we are going backward or forward.\nvar goingForward=current>=start;if(anchor==='top'||anchor==='left'){goingForward=!goingForward;}var axis=anchor==='left'||anchor==='right'?'x':'y';var scrollPosition=Math.round(shape[axisProperties.scrollPosition[axis]]);var areNotAtStart=scrollPosition>0;var areNotAtEnd=scrollPosition+shape[axisProperties.clientLength[axis]]<shape[axisProperties.scrollLength[axis]];if(goingForward&&areNotAtEnd||!goingForward&&areNotAtStart){return true;}return false;});}var iOS=typeof navigator!=='undefined'&&/iPad|iPhone|iPod/.test(navigator.userAgent);var SwipeableDrawer=/*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps,ref){var props=useThemeProps({name:'MuiSwipeableDrawer',props:inProps});var theme=useTheme();var transitionDurationDefault={enter:theme.transitions.duration.enteringScreen,exit:theme.transitions.duration.leavingScreen};var _props$anchor=props.anchor,anchor=_props$anchor===void 0?'left':_props$anchor,_props$disableBackdro=props.disableBackdropTransition,disableBackdropTransition=_props$disableBackdro===void 0?false:_props$disableBackdro,_props$disableDiscove=props.disableDiscovery,disableDiscovery=_props$disableDiscove===void 0?false:_props$disableDiscove,_props$disableSwipeTo=props.disableSwipeToOpen,disableSwipeToOpen=_props$disableSwipeTo===void 0?iOS:_props$disableSwipeTo,hideBackdrop=props.hideBackdrop,_props$hysteresis=props.hysteresis,hysteresis=_props$hysteresis===void 0?0.52:_props$hysteresis,_props$minFlingVeloci=props.minFlingVelocity,minFlingVelocity=_props$minFlingVeloci===void 0?450:_props$minFlingVeloci,_props$ModalProps=props.ModalProps;_props$ModalProps=_props$ModalProps===void 0?{}:_props$ModalProps;var BackdropProps=_props$ModalProps.BackdropProps,onClose=props.onClose,onOpen=props.onOpen,open=props.open,_props$PaperProps=props.PaperProps,PaperProps=_props$PaperProps===void 0?{}:_props$PaperProps,SwipeAreaProps=props.SwipeAreaProps,_props$swipeAreaWidth=props.swipeAreaWidth,swipeAreaWidth=_props$swipeAreaWidth===void 0?20:_props$swipeAreaWidth,_props$transitionDura=props.transitionDuration,transitionDuration=_props$transitionDura===void 0?transitionDurationDefault:_props$transitionDura,_props$variant=props.variant,variant=_props$variant===void 0?'temporary':_props$variant,ModalPropsProp=_objectWithoutPropertiesLoose(props.ModalProps,_excluded),other=_objectWithoutPropertiesLoose(props,_excluded2);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),maybeSwiping=_React$useState2[0],setMaybeSwiping=_React$useState2[1];var swipeInstance=React.useRef({isSwiping:null});var swipeAreaRef=React.useRef();var backdropRef=React.useRef();var paperRef=React.useRef();var touchDetected=React.useRef(false);// Ref for transition duration based on / to match swipe speed\nvar calculatedDurationRef=React.useRef();// Use a ref so the open value used is always up to date inside useCallback.\nuseEnhancedEffect(function(){calculatedDurationRef.current=null;},[open]);var setPosition=React.useCallback(function(translate){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$mode=options.mode,mode=_options$mode===void 0?null:_options$mode,_options$changeTransi=options.changeTransition,changeTransition=_options$changeTransi===void 0?true:_options$changeTransi;var anchorRtl=getAnchor(theme,anchor);var rtlTranslateMultiplier=['right','bottom'].indexOf(anchorRtl)!==-1?1:-1;var horizontalSwipe=isHorizontal(anchor);var transform=horizontalSwipe?\"translate(\".concat(rtlTranslateMultiplier*translate,\"px, 0)\"):\"translate(0, \".concat(rtlTranslateMultiplier*translate,\"px)\");var drawerStyle=paperRef.current.style;drawerStyle.webkitTransform=transform;drawerStyle.transform=transform;var transition='';if(mode){transition=theme.transitions.create('all',getTransitionProps({easing:undefined,style:undefined,timeout:transitionDuration},{mode:mode}));}if(changeTransition){drawerStyle.webkitTransition=transition;drawerStyle.transition=transition;}if(!disableBackdropTransition&&!hideBackdrop){var backdropStyle=backdropRef.current.style;backdropStyle.opacity=1-translate/getMaxTranslate(horizontalSwipe,paperRef.current);if(changeTransition){backdropStyle.webkitTransition=transition;backdropStyle.transition=transition;}}},[anchor,disableBackdropTransition,hideBackdrop,theme,transitionDuration]);var handleBodyTouchEnd=useEventCallback(function(nativeEvent){if(!touchDetected.current){return;}claimedSwipeInstance=null;touchDetected.current=false;setMaybeSwiping(false);// The swipe wasn't started.\nif(!swipeInstance.current.isSwiping){swipeInstance.current.isSwiping=null;return;}swipeInstance.current.isSwiping=null;var anchorRtl=getAnchor(theme,anchor);var horizontal=isHorizontal(anchor);var current;if(horizontal){current=calculateCurrentX(anchorRtl,nativeEvent.changedTouches,ownerDocument(nativeEvent.currentTarget));}else{current=calculateCurrentY(anchorRtl,nativeEvent.changedTouches,ownerWindow(nativeEvent.currentTarget));}var startLocation=horizontal?swipeInstance.current.startX:swipeInstance.current.startY;var maxTranslate=getMaxTranslate(horizontal,paperRef.current);var currentTranslate=getTranslate(current,startLocation,open,maxTranslate);var translateRatio=currentTranslate/maxTranslate;if(Math.abs(swipeInstance.current.velocity)>minFlingVelocity){// Calculate transition duration to match swipe speed\ncalculatedDurationRef.current=Math.abs((maxTranslate-currentTranslate)/swipeInstance.current.velocity)*1000;}if(open){if(swipeInstance.current.velocity>minFlingVelocity||translateRatio>hysteresis){onClose();}else{// Reset the position, the swipe was aborted.\nsetPosition(0,{mode:'exit'});}return;}if(swipeInstance.current.velocity<-minFlingVelocity||1-translateRatio>hysteresis){onOpen();}else{// Reset the position, the swipe was aborted.\nsetPosition(getMaxTranslate(horizontal,paperRef.current),{mode:'enter'});}});var handleBodyTouchMove=useEventCallback(function(nativeEvent){// the ref may be null when a parent component updates while swiping\nif(!paperRef.current||!touchDetected.current){return;}// We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\nif(claimedSwipeInstance!==null&&claimedSwipeInstance!==swipeInstance.current){return;}var anchorRtl=getAnchor(theme,anchor);var horizontalSwipe=isHorizontal(anchor);var currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,ownerDocument(nativeEvent.currentTarget));var currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,ownerWindow(nativeEvent.currentTarget));if(open&&paperRef.current.contains(nativeEvent.target)&&claimedSwipeInstance===null){var domTreeShapes=getDomTreeShapes(nativeEvent.target,paperRef.current);var hasNativeHandler=computeHasNativeHandler({domTreeShapes:domTreeShapes,start:horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY,current:horizontalSwipe?currentX:currentY,anchor:anchor});if(hasNativeHandler){claimedSwipeInstance=true;return;}claimedSwipeInstance=swipeInstance.current;}// We don't know yet.\nif(swipeInstance.current.isSwiping==null){var dx=Math.abs(currentX-swipeInstance.current.startX);var dy=Math.abs(currentY-swipeInstance.current.startY);var definitelySwiping=horizontalSwipe?dx>dy&&dx>UNCERTAINTY_THRESHOLD:dy>dx&&dy>UNCERTAINTY_THRESHOLD;if(definitelySwiping&&nativeEvent.cancelable){nativeEvent.preventDefault();}if(definitelySwiping===true||(horizontalSwipe?dy>UNCERTAINTY_THRESHOLD:dx>UNCERTAINTY_THRESHOLD)){swipeInstance.current.isSwiping=definitelySwiping;if(!definitelySwiping){handleBodyTouchEnd(nativeEvent);return;}// Shift the starting point.\nswipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;// Compensate for the part of the drawer displayed on touch start.\nif(!disableDiscovery&&!open){if(horizontalSwipe){swipeInstance.current.startX-=DRAG_STARTED_SIGNAL;}else{swipeInstance.current.startY-=DRAG_STARTED_SIGNAL;}}}}if(!swipeInstance.current.isSwiping){return;}var maxTranslate=getMaxTranslate(horizontalSwipe,paperRef.current);var startLocation=horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY;if(open&&!swipeInstance.current.paperHit){startLocation=Math.min(startLocation,maxTranslate);}var translate=getTranslate(horizontalSwipe?currentX:currentY,startLocation,open,maxTranslate);if(open){if(!swipeInstance.current.paperHit){var paperHit=horizontalSwipe?currentX<maxTranslate:currentY<maxTranslate;if(paperHit){swipeInstance.current.paperHit=true;swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;}else{return;}}else if(translate===0){swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;}}if(swipeInstance.current.lastTranslate===null){swipeInstance.current.lastTranslate=translate;swipeInstance.current.lastTime=performance.now()+1;}var velocity=(translate-swipeInstance.current.lastTranslate)/(performance.now()-swipeInstance.current.lastTime)*1e3;// Low Pass filter.\nswipeInstance.current.velocity=swipeInstance.current.velocity*0.4+velocity*0.6;swipeInstance.current.lastTranslate=translate;swipeInstance.current.lastTime=performance.now();// We are swiping, let's prevent the scroll event on iOS.\nif(nativeEvent.cancelable){nativeEvent.preventDefault();}setPosition(translate);});var handleBodyTouchStart=useEventCallback(function(nativeEvent){// We are not supposed to handle this touch move.\n// Example of use case: ignore the event if there is a Slider.\nif(nativeEvent.defaultPrevented){return;}// We can only have one node at the time claiming ownership for handling the swipe.\nif(nativeEvent.defaultMuiPrevented){return;}// At least one element clogs the drawer interaction zone.\nif(open&&(hideBackdrop||!backdropRef.current.contains(nativeEvent.target))&&!paperRef.current.contains(nativeEvent.target)){return;}var anchorRtl=getAnchor(theme,anchor);var horizontalSwipe=isHorizontal(anchor);var currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,ownerDocument(nativeEvent.currentTarget));var currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,ownerWindow(nativeEvent.currentTarget));if(!open){if(disableSwipeToOpen||nativeEvent.target!==swipeAreaRef.current){return;}if(horizontalSwipe){if(currentX>swipeAreaWidth){return;}}else if(currentY>swipeAreaWidth){return;}}nativeEvent.defaultMuiPrevented=true;claimedSwipeInstance=null;swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;setMaybeSwiping(true);if(!open&&paperRef.current){// The ref may be null when a parent component updates while swiping.\nsetPosition(getMaxTranslate(horizontalSwipe,paperRef.current)+(disableDiscovery?15:-DRAG_STARTED_SIGNAL),{changeTransition:false});}swipeInstance.current.velocity=0;swipeInstance.current.lastTime=null;swipeInstance.current.lastTranslate=null;swipeInstance.current.paperHit=false;touchDetected.current=true;});React.useEffect(function(){if(variant==='temporary'){var doc=ownerDocument(paperRef.current);doc.addEventListener('touchstart',handleBodyTouchStart);// A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n// It only needs to prevent scrolling on the drawer's content when open.\n// When closed, the overlay prevents scrolling.\ndoc.addEventListener('touchmove',handleBodyTouchMove,{passive:!open});doc.addEventListener('touchend',handleBodyTouchEnd);return function(){doc.removeEventListener('touchstart',handleBodyTouchStart);doc.removeEventListener('touchmove',handleBodyTouchMove,{passive:!open});doc.removeEventListener('touchend',handleBodyTouchEnd);};}return undefined;},[variant,open,handleBodyTouchStart,handleBodyTouchMove,handleBodyTouchEnd]);React.useEffect(function(){return function(){// We need to release the lock.\nif(claimedSwipeInstance===swipeInstance.current){claimedSwipeInstance=null;}};},[]);React.useEffect(function(){if(!open){setMaybeSwiping(false);}},[open]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Drawer,_extends({open:variant==='temporary'&&maybeSwiping?true:open,variant:variant,ModalProps:_extends({BackdropProps:_extends({},BackdropProps,{ref:backdropRef})},ModalPropsProp),hideBackdrop:hideBackdrop,PaperProps:_extends({},PaperProps,{style:_extends({pointerEvents:variant==='temporary'&&!open?'none':''},PaperProps.style),ref:paperRef}),anchor:anchor,transitionDuration:calculatedDurationRef.current||transitionDuration,onClose:onClose,ref:ref},other)),!disableSwipeToOpen&&variant==='temporary'&&/*#__PURE__*/_jsx(NoSsr,{children:/*#__PURE__*/_jsx(SwipeArea,_extends({anchor:anchor,ref:swipeAreaRef,width:swipeAreaWidth},SwipeAreaProps))})]});});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default SwipeableDrawer;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","elementTypeAcceptingRef","useThemeProps","NoSsr","Drawer","getAnchor","isHorizontal","ownerDocument","ownerWindow","useEventCallback","useEnhancedEffect","useTheme","getTransitionProps","SwipeArea","jsx","_jsx","jsxs","_jsxs","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","reset","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","useState","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","mode","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","drawerStyle","webkitTransform","transition","create","easing","undefined","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","useEffect","addEventListener","passive","removeEventListener","Fragment","children","pointerEvents","width","process","env","NODE_ENV"],"mappings":"mIAAA,MAAOA,CAAAA,QAAP,KAAqB,oCAArB,CACA,MAAOC,CAAAA,6BAAP,KAA0C,yDAA1C,CACA,GAAMC,CAAAA,SAAS,CAAG,CAAC,eAAD,CAAlB,CACMC,UAAU,CAAG,CAAC,QAAD,CAAW,2BAAX,CAAwC,kBAAxC,CAA4D,oBAA5D,CAAkF,cAAlF,CAAkG,YAAlG,CAAgH,kBAAhH,CAAoI,YAApI,CAAkJ,SAAlJ,CAA6J,QAA7J,CAAuK,MAAvK,CAA+K,YAA/K,CAA6L,gBAA7L,CAA+M,gBAA/M,CAAiO,oBAAjO,CAAuP,SAAvP,CADnB,CAEA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAASC,uBAAT,KAAwC,YAAxC,CACA,OAASC,aAAT,KAA8B,aAA9B,CACA,OAASC,KAAT,KAAsB,WAAtB,CACA,MAAOC,CAAAA,MAAP,EAAiBC,SAAjB,CAA4BC,YAA5B,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4BAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,CACA,OAASC,kBAAT,KAAmC,sBAAnC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAAqC;AACrC;AAEA,OAASC,GAAG,GAAIC,CAAAA,IAAhB,KAA4B,mBAA5B,CACA,OAASC,IAAI,GAAIC,CAAAA,KAAjB,KAA8B,mBAA9B,CACA,GAAMC,CAAAA,qBAAqB,CAAG,CAA9B,CAAiC;AACjC;AAEA,GAAMC,CAAAA,mBAAmB,CAAG,EAA5B,CAAgC;AAChC;AACA;AACA;AAEA,GAAIC,CAAAA,oBAAoB,CAAG,IAA3B,CAAiC;AAEjC,MAAO,SAASC,CAAAA,KAAT,EAAiB,CACtBD,oBAAoB,CAAG,IAAvB,CACD,CAED,QAASE,CAAAA,iBAAT,CAA2BC,MAA3B,CAAmCC,OAAnC,CAA4CC,GAA5C,CAAiD,CAC/C,MAAOF,CAAAA,MAAM,GAAK,OAAX,CAAqBE,GAAG,CAACC,IAAJ,CAASC,WAAT,CAAuBH,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAvD,CAA+DJ,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAjF,CACD,CAED,QAASC,CAAAA,iBAAT,CAA2BN,MAA3B,CAAmCC,OAAnC,CAA4CM,eAA5C,CAA6D,CAC3D,MAAOP,CAAAA,MAAM,GAAK,QAAX,CAAsBO,eAAe,CAACC,WAAhB,CAA8BP,OAAO,CAAC,CAAD,CAAP,CAAWQ,OAA/D,CAAyER,OAAO,CAAC,CAAD,CAAP,CAAWQ,OAA3F,CACD,CAED,QAASC,CAAAA,eAAT,CAAyBC,eAAzB,CAA0CC,aAA1C,CAAyD,CACvD,MAAOD,CAAAA,eAAe,CAAGC,aAAa,CAACC,WAAjB,CAA+BD,aAAa,CAACE,YAAnE,CACD,CAED,QAASC,CAAAA,YAAT,CAAsBC,gBAAtB,CAAwCC,aAAxC,CAAuDC,IAAvD,CAA6DC,YAA7D,CAA2E,CACzE,MAAOC,CAAAA,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,IAAI,CAAGD,aAAa,CAAGD,gBAAnB,CAAsCG,YAAY,CAAGF,aAAf,CAA+BD,gBAAlF,CAAoG,CAApG,CAAT,CAAiHG,YAAjH,CAAP,CACD,CACD;AACA;AACA;AACA,GAGA,QAASI,CAAAA,gBAAT,CAA0BC,OAA1B,CAAmCC,QAAnC,CAA6C,CAC3C;AACA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CAEA,MAAOF,OAAO,EAAIA,OAAO,GAAKC,QAAQ,CAACE,aAAvC,CAAsD,CACpD,GAAMC,CAAAA,KAAK,CAAG3C,WAAW,CAACwC,QAAD,CAAX,CAAsBI,gBAAtB,CAAuCL,OAAvC,CAAd,CAEA,GAAK;AACLI,KAAK,CAACE,gBAAN,CAAuB,UAAvB,IAAuC,UAAvC,EAAqD;AACrDF,KAAK,CAACE,gBAAN,CAAuB,YAAvB,IAAyC,QAFzC,CAEmD,CAAC;AACnD,CAHD,IAGO,IAAIN,OAAO,CAACX,WAAR,CAAsB,CAAtB,EAA2BW,OAAO,CAACO,WAAR,CAAsBP,OAAO,CAACX,WAAzD,EAAwEW,OAAO,CAACV,YAAR,CAAuB,CAAvB,EAA4BU,OAAO,CAACQ,YAAR,CAAuBR,OAAO,CAACV,YAAvI,CAAqJ,CAC1J;AACA;AACAY,aAAa,CAACO,IAAd,CAAmBT,OAAnB,EACD,CAEDA,OAAO,CAAGA,OAAO,CAACG,aAAlB,CACD,CAED,MAAOD,CAAAA,aAAP,CACD,CACD;AACA;AACA;AACA,GAGA,QAASQ,CAAAA,uBAAT,MAKG,IAJDR,CAAAA,aAIC,MAJDA,aAIC,CAHDS,KAGC,MAHDA,KAGC,CAFDC,OAEC,MAFDA,OAEC,CADDpC,MACC,MADDA,MACC,CACD;AACA,GAAMqC,CAAAA,cAAc,CAAG,CACrBC,cAAc,CAAE,CACdC,CAAC,CAAE,YADW,CAEdC,CAAC,CAAE,WAFW,CADK,CAKrBC,YAAY,CAAE,CACZF,CAAC,CAAE,aADS,CAEZC,CAAC,CAAE,cAFS,CALO,CASrBE,YAAY,CAAE,CACZH,CAAC,CAAE,aADS,CAEZC,CAAC,CAAE,cAFS,CATO,CAAvB,CAcA,MAAOd,CAAAA,aAAa,CAACiB,IAAd,CAAmB,SAAAC,KAAK,CAAI,CACjC;AACA,GAAIC,CAAAA,YAAY,CAAGT,OAAO,EAAID,KAA9B,CAEA,GAAInC,MAAM,GAAK,KAAX,EAAoBA,MAAM,GAAK,MAAnC,CAA2C,CACzC6C,YAAY,CAAG,CAACA,YAAhB,CACD,CAED,GAAMC,CAAAA,IAAI,CAAG9C,MAAM,GAAK,MAAX,EAAqBA,MAAM,GAAK,OAAhC,CAA0C,GAA1C,CAAgD,GAA7D,CACA,GAAMsC,CAAAA,cAAc,CAAGlB,IAAI,CAAC2B,KAAL,CAAWH,KAAK,CAACP,cAAc,CAACC,cAAf,CAA8BQ,IAA9B,CAAD,CAAhB,CAAvB,CACA,GAAME,CAAAA,aAAa,CAAGV,cAAc,CAAG,CAAvC,CACA,GAAMW,CAAAA,WAAW,CAAGX,cAAc,CAAGM,KAAK,CAACP,cAAc,CAACK,YAAf,CAA4BI,IAA5B,CAAD,CAAtB,CAA4DF,KAAK,CAACP,cAAc,CAACI,YAAf,CAA4BK,IAA5B,CAAD,CAArF,CAEA,GAAID,YAAY,EAAII,WAAhB,EAA+B,CAACJ,YAAD,EAAiBG,aAApD,CAAmE,CACjE,MAAO,KAAP,CACD,CAED,MAAO,MAAP,CACD,CAlBM,CAAP,CAmBD,CAED,GAAME,CAAAA,GAAG,CAAG,MAAOC,CAAAA,SAAP,GAAqB,WAArB,EAAoC,mBAAmBC,IAAnB,CAAwBD,SAAS,CAACE,SAAlC,CAAhD,CACA,GAAMC,CAAAA,eAAe,CAAG,aAAa7E,KAAK,CAAC8E,UAAN,CAAiB,QAASD,CAAAA,eAAT,CAAyBE,OAAzB,CAAkCC,GAAlC,CAAuC,CAC3F,GAAMC,CAAAA,KAAK,CAAG/E,aAAa,CAAC,CAC1BgF,IAAI,CAAE,oBADoB,CAE1BD,KAAK,CAAEF,OAFmB,CAAD,CAA3B,CAIA,GAAMI,CAAAA,KAAK,CAAGxE,QAAQ,EAAtB,CACA,GAAMyE,CAAAA,yBAAyB,CAAG,CAChCC,KAAK,CAAEF,KAAK,CAACG,WAAN,CAAkBC,QAAlB,CAA2BC,cADF,CAEhCC,IAAI,CAAEN,KAAK,CAACG,WAAN,CAAkBC,QAAlB,CAA2BG,aAFD,CAAlC,CAKA,kBAmBIT,KAnBJ,CACE1D,MADF,CACEA,MADF,wBACW,MADX,qCAmBI0D,KAnBJ,CAEEU,yBAFF,CAEEA,yBAFF,gCAE8B,KAF9B,6CAmBIV,KAnBJ,CAGEW,gBAHF,CAGEA,gBAHF,gCAGqB,KAHrB,6CAmBIX,KAnBJ,CAIEY,kBAJF,CAIEA,kBAJF,gCAIuBpB,GAJvB,uBAKEqB,YALF,CAmBIb,KAnBJ,CAKEa,YALF,mBAmBIb,KAnBJ,CAMEc,UANF,CAMEA,UANF,4BAMe,IANf,yCAmBId,KAnBJ,CAOEe,gBAPF,CAOEA,gBAPF,gCAOqB,GAPrB,yCAmBIf,KAnBJ,CAQEgB,UARF,8CAUM,EAVN,sBASIC,CAAAA,aATJ,mBASIA,aATJ,CAWEC,OAXF,CAmBIlB,KAnBJ,CAWEkB,OAXF,CAYEC,MAZF,CAmBInB,KAnBJ,CAYEmB,MAZF,CAaE3D,IAbF,CAmBIwC,KAnBJ,CAaExC,IAbF,mBAmBIwC,KAnBJ,CAcEoB,UAdF,CAcEA,UAdF,4BAce,EAdf,mBAeEC,cAfF,CAmBIrB,KAnBJ,CAeEqB,cAfF,uBAmBIrB,KAnBJ,CAgBEsB,cAhBF,CAgBEA,cAhBF,gCAgBmB,EAhBnB,6CAmBItB,KAnBJ,CAiBEuB,kBAjBF,CAiBEA,kBAjBF,gCAiBuBpB,yBAjBvB,sCAmBIH,KAnBJ,CAkBEwB,OAlBF,CAkBEA,OAlBF,yBAkBY,WAlBZ,gBAoBMC,cApBN,CAoBuB7G,6BAA6B,CAACoF,KAAK,CAACgB,UAAP,CAAmBnG,SAAnB,CApBpD,CAqBM6G,KArBN,CAqBc9G,6BAA6B,CAACoF,KAAD,CAAQlF,UAAR,CArB3C,CAuBA,oBAAwCC,KAAK,CAAC4G,QAAN,CAAe,KAAf,CAAxC,oDAAOC,YAAP,qBAAqBC,eAArB,qBACA,GAAMC,CAAAA,aAAa,CAAG/G,KAAK,CAACgH,MAAN,CAAa,CACjCC,SAAS,CAAE,IADsB,CAAb,CAAtB,CAGA,GAAMC,CAAAA,YAAY,CAAGlH,KAAK,CAACgH,MAAN,EAArB,CACA,GAAMG,CAAAA,WAAW,CAAGnH,KAAK,CAACgH,MAAN,EAApB,CACA,GAAMI,CAAAA,QAAQ,CAAGpH,KAAK,CAACgH,MAAN,EAAjB,CACA,GAAMK,CAAAA,aAAa,CAAGrH,KAAK,CAACgH,MAAN,CAAa,KAAb,CAAtB,CAA2C;AAE3C,GAAMM,CAAAA,qBAAqB,CAAGtH,KAAK,CAACgH,MAAN,EAA9B,CAA8C;AAE9CtG,iBAAiB,CAAC,UAAM,CACtB4G,qBAAqB,CAAC3D,OAAtB,CAAgC,IAAhC,CACD,CAFgB,CAEd,CAAClB,IAAD,CAFc,CAAjB,CAGA,GAAM8E,CAAAA,WAAW,CAAGvH,KAAK,CAACwH,WAAN,CAAkB,SAACC,SAAD,CAA6B,IAAjBC,CAAAA,OAAiB,2DAAP,EAAO,CACjE,kBAGIA,OAHJ,CACEC,IADF,CACEA,IADF,wBACS,IADT,qCAGID,OAHJ,CAEEE,gBAFF,CAEEA,gBAFF,gCAEqB,IAFrB,uBAIA,GAAMC,CAAAA,SAAS,CAAGxH,SAAS,CAAC8E,KAAD,CAAQ5D,MAAR,CAA3B,CACA,GAAMuG,CAAAA,sBAAsB,CAAG,CAAC,OAAD,CAAU,QAAV,EAAoBC,OAApB,CAA4BF,SAA5B,IAA2C,CAAC,CAA5C,CAAgD,CAAhD,CAAoD,CAAC,CAApF,CACA,GAAM3F,CAAAA,eAAe,CAAG5B,YAAY,CAACiB,MAAD,CAApC,CACA,GAAMyG,CAAAA,SAAS,CAAG9F,eAAe,qBAAgB4F,sBAAsB,CAAGL,SAAzC,kCAA6EK,sBAAsB,CAAGL,SAAtG,OAAjC,CACA,GAAMQ,CAAAA,WAAW,CAAGb,QAAQ,CAACzD,OAAT,CAAiBR,KAArC,CACA8E,WAAW,CAACC,eAAZ,CAA8BF,SAA9B,CACAC,WAAW,CAACD,SAAZ,CAAwBA,SAAxB,CACA,GAAIG,CAAAA,UAAU,CAAG,EAAjB,CAEA,GAAIR,IAAJ,CAAU,CACRQ,UAAU,CAAGhD,KAAK,CAACG,WAAN,CAAkB8C,MAAlB,CAAyB,KAAzB,CAAgCxH,kBAAkB,CAAC,CAC9DyH,MAAM,CAAEC,SADsD,CAE9DnF,KAAK,CAAEmF,SAFuD,CAG9DC,OAAO,CAAE/B,kBAHqD,CAAD,CAI5D,CACDmB,IAAI,CAAJA,IADC,CAJ4D,CAAlD,CAAb,CAOD,CAED,GAAIC,gBAAJ,CAAsB,CACpBK,WAAW,CAACO,gBAAZ,CAA+BL,UAA/B,CACAF,WAAW,CAACE,UAAZ,CAAyBA,UAAzB,CACD,CAED,GAAI,CAACxC,yBAAD,EAA8B,CAACG,YAAnC,CAAiD,CAC/C,GAAM2C,CAAAA,aAAa,CAAGtB,WAAW,CAACxD,OAAZ,CAAoBR,KAA1C,CACAsF,aAAa,CAACC,OAAd,CAAwB,EAAIjB,SAAS,CAAGxF,eAAe,CAACC,eAAD,CAAkBkF,QAAQ,CAACzD,OAA3B,CAAvD,CAEA,GAAIiE,gBAAJ,CAAsB,CACpBa,aAAa,CAACD,gBAAd,CAAiCL,UAAjC,CACAM,aAAa,CAACN,UAAd,CAA2BA,UAA3B,CACD,CACF,CACF,CAtCmB,CAsCjB,CAAC5G,MAAD,CAASoE,yBAAT,CAAoCG,YAApC,CAAkDX,KAAlD,CAAyDqB,kBAAzD,CAtCiB,CAApB,CAuCA,GAAMmC,CAAAA,kBAAkB,CAAGlI,gBAAgB,CAAC,SAAAmI,WAAW,CAAI,CACzD,GAAI,CAACvB,aAAa,CAAC1D,OAAnB,CAA4B,CAC1B,OACD,CAEDvC,oBAAoB,CAAG,IAAvB,CACAiG,aAAa,CAAC1D,OAAd,CAAwB,KAAxB,CACAmD,eAAe,CAAC,KAAD,CAAf,CAAwB;AAExB,GAAI,CAACC,aAAa,CAACpD,OAAd,CAAsBsD,SAA3B,CAAsC,CACpCF,aAAa,CAACpD,OAAd,CAAsBsD,SAAtB,CAAkC,IAAlC,CACA,OACD,CAEDF,aAAa,CAACpD,OAAd,CAAsBsD,SAAtB,CAAkC,IAAlC,CACA,GAAMY,CAAAA,SAAS,CAAGxH,SAAS,CAAC8E,KAAD,CAAQ5D,MAAR,CAA3B,CACA,GAAMsH,CAAAA,UAAU,CAAGvI,YAAY,CAACiB,MAAD,CAA/B,CACA,GAAIoC,CAAAA,OAAJ,CAEA,GAAIkF,UAAJ,CAAgB,CACdlF,OAAO,CAAGrC,iBAAiB,CAACuG,SAAD,CAAYe,WAAW,CAACE,cAAxB,CAAwCvI,aAAa,CAACqI,WAAW,CAACG,aAAb,CAArD,CAA3B,CACD,CAFD,IAEO,CACLpF,OAAO,CAAG9B,iBAAiB,CAACgG,SAAD,CAAYe,WAAW,CAACE,cAAxB,CAAwCtI,WAAW,CAACoI,WAAW,CAACG,aAAb,CAAnD,CAA3B,CACD,CAED,GAAMvG,CAAAA,aAAa,CAAGqG,UAAU,CAAG9B,aAAa,CAACpD,OAAd,CAAsBqF,MAAzB,CAAkCjC,aAAa,CAACpD,OAAd,CAAsBsF,MAAxF,CACA,GAAMvG,CAAAA,YAAY,CAAGT,eAAe,CAAC4G,UAAD,CAAazB,QAAQ,CAACzD,OAAtB,CAApC,CACA,GAAMpB,CAAAA,gBAAgB,CAAGD,YAAY,CAACqB,OAAD,CAAUnB,aAAV,CAAyBC,IAAzB,CAA+BC,YAA/B,CAArC,CACA,GAAMwG,CAAAA,cAAc,CAAG3G,gBAAgB,CAAGG,YAA1C,CAEA,GAAIC,IAAI,CAACwG,GAAL,CAASpC,aAAa,CAACpD,OAAd,CAAsByF,QAA/B,EAA2CpD,gBAA/C,CAAiE,CAC/D;AACAsB,qBAAqB,CAAC3D,OAAtB,CAAgChB,IAAI,CAACwG,GAAL,CAAS,CAACzG,YAAY,CAAGH,gBAAhB,EAAoCwE,aAAa,CAACpD,OAAd,CAAsByF,QAAnE,EAA+E,IAA/G,CACD,CAED,GAAI3G,IAAJ,CAAU,CACR,GAAIsE,aAAa,CAACpD,OAAd,CAAsByF,QAAtB,CAAiCpD,gBAAjC,EAAqDkD,cAAc,CAAGnD,UAA1E,CAAsF,CACpFI,OAAO,GACR,CAFD,IAEO,CACL;AACAoB,WAAW,CAAC,CAAD,CAAI,CACbI,IAAI,CAAE,MADO,CAAJ,CAAX,CAGD,CAED,OACD,CAED,GAAIZ,aAAa,CAACpD,OAAd,CAAsByF,QAAtB,CAAiC,CAACpD,gBAAlC,EAAsD,EAAIkD,cAAJ,CAAqBnD,UAA/E,CAA2F,CACzFK,MAAM,GACP,CAFD,IAEO,CACL;AACAmB,WAAW,CAACtF,eAAe,CAAC4G,UAAD,CAAazB,QAAQ,CAACzD,OAAtB,CAAhB,CAAgD,CACzDgE,IAAI,CAAE,OADmD,CAAhD,CAAX,CAGD,CACF,CAxD0C,CAA3C,CAyDA,GAAM0B,CAAAA,mBAAmB,CAAG5I,gBAAgB,CAAC,SAAAmI,WAAW,CAAI,CAC1D;AACA,GAAI,CAACxB,QAAQ,CAACzD,OAAV,EAAqB,CAAC0D,aAAa,CAAC1D,OAAxC,CAAiD,CAC/C,OACD,CAAC;AAGF,GAAIvC,oBAAoB,GAAK,IAAzB,EAAiCA,oBAAoB,GAAK2F,aAAa,CAACpD,OAA5E,CAAqF,CACnF,OACD,CAED,GAAMkE,CAAAA,SAAS,CAAGxH,SAAS,CAAC8E,KAAD,CAAQ5D,MAAR,CAA3B,CACA,GAAMW,CAAAA,eAAe,CAAG5B,YAAY,CAACiB,MAAD,CAApC,CACA,GAAM+H,CAAAA,QAAQ,CAAGhI,iBAAiB,CAACuG,SAAD,CAAYe,WAAW,CAACpH,OAAxB,CAAiCjB,aAAa,CAACqI,WAAW,CAACG,aAAb,CAA9C,CAAlC,CACA,GAAMQ,CAAAA,QAAQ,CAAG1H,iBAAiB,CAACgG,SAAD,CAAYe,WAAW,CAACpH,OAAxB,CAAiChB,WAAW,CAACoI,WAAW,CAACG,aAAb,CAA5C,CAAlC,CAEA,GAAItG,IAAI,EAAI2E,QAAQ,CAACzD,OAAT,CAAiB6F,QAAjB,CAA0BZ,WAAW,CAACa,MAAtC,CAAR,EAAyDrI,oBAAoB,GAAK,IAAtF,CAA4F,CAC1F,GAAM6B,CAAAA,aAAa,CAAGH,gBAAgB,CAAC8F,WAAW,CAACa,MAAb,CAAqBrC,QAAQ,CAACzD,OAA9B,CAAtC,CACA,GAAM+F,CAAAA,gBAAgB,CAAGjG,uBAAuB,CAAC,CAC/CR,aAAa,CAAbA,aAD+C,CAE/CS,KAAK,CAAExB,eAAe,CAAG6E,aAAa,CAACpD,OAAd,CAAsBqF,MAAzB,CAAkCjC,aAAa,CAACpD,OAAd,CAAsBsF,MAF/B,CAG/CtF,OAAO,CAAEzB,eAAe,CAAGoH,QAAH,CAAcC,QAHS,CAI/ChI,MAAM,CAANA,MAJ+C,CAAD,CAAhD,CAOA,GAAImI,gBAAJ,CAAsB,CACpBtI,oBAAoB,CAAG,IAAvB,CACA,OACD,CAEDA,oBAAoB,CAAG2F,aAAa,CAACpD,OAArC,CACD,CAAC;AAGF,GAAIoD,aAAa,CAACpD,OAAd,CAAsBsD,SAAtB,EAAmC,IAAvC,CAA6C,CAC3C,GAAM0C,CAAAA,EAAE,CAAGhH,IAAI,CAACwG,GAAL,CAASG,QAAQ,CAAGvC,aAAa,CAACpD,OAAd,CAAsBqF,MAA1C,CAAX,CACA,GAAMY,CAAAA,EAAE,CAAGjH,IAAI,CAACwG,GAAL,CAASI,QAAQ,CAAGxC,aAAa,CAACpD,OAAd,CAAsBsF,MAA1C,CAAX,CACA,GAAMY,CAAAA,iBAAiB,CAAG3H,eAAe,CAAGyH,EAAE,CAAGC,EAAL,EAAWD,EAAE,CAAGzI,qBAAnB,CAA2C0I,EAAE,CAAGD,EAAL,EAAWC,EAAE,CAAG1I,qBAApG,CAEA,GAAI2I,iBAAiB,EAAIjB,WAAW,CAACkB,UAArC,CAAiD,CAC/ClB,WAAW,CAACmB,cAAZ,GACD,CAED,GAAIF,iBAAiB,GAAK,IAAtB,GAA+B3H,eAAe,CAAG0H,EAAE,CAAG1I,qBAAR,CAAgCyI,EAAE,CAAGzI,qBAAnF,CAAJ,CAA+G,CAC7G6F,aAAa,CAACpD,OAAd,CAAsBsD,SAAtB,CAAkC4C,iBAAlC,CAEA,GAAI,CAACA,iBAAL,CAAwB,CACtBlB,kBAAkB,CAACC,WAAD,CAAlB,CACA,OACD,CAAC;AAGF7B,aAAa,CAACpD,OAAd,CAAsBqF,MAAtB,CAA+BM,QAA/B,CACAvC,aAAa,CAACpD,OAAd,CAAsBsF,MAAtB,CAA+BM,QAA/B,CAAyC;AAEzC,GAAI,CAAC3D,gBAAD,EAAqB,CAACnD,IAA1B,CAAgC,CAC9B,GAAIP,eAAJ,CAAqB,CACnB6E,aAAa,CAACpD,OAAd,CAAsBqF,MAAtB,EAAgC7H,mBAAhC,CACD,CAFD,IAEO,CACL4F,aAAa,CAACpD,OAAd,CAAsBsF,MAAtB,EAAgC9H,mBAAhC,CACD,CACF,CACF,CACF,CAED,GAAI,CAAC4F,aAAa,CAACpD,OAAd,CAAsBsD,SAA3B,CAAsC,CACpC,OACD,CAED,GAAMvE,CAAAA,YAAY,CAAGT,eAAe,CAACC,eAAD,CAAkBkF,QAAQ,CAACzD,OAA3B,CAApC,CACA,GAAInB,CAAAA,aAAa,CAAGN,eAAe,CAAG6E,aAAa,CAACpD,OAAd,CAAsBqF,MAAzB,CAAkCjC,aAAa,CAACpD,OAAd,CAAsBsF,MAA3F,CAEA,GAAIxG,IAAI,EAAI,CAACsE,aAAa,CAACpD,OAAd,CAAsBqG,QAAnC,CAA6C,CAC3CxH,aAAa,CAAGG,IAAI,CAACC,GAAL,CAASJ,aAAT,CAAwBE,YAAxB,CAAhB,CACD,CAED,GAAM+E,CAAAA,SAAS,CAAGnF,YAAY,CAACJ,eAAe,CAAGoH,QAAH,CAAcC,QAA9B,CAAwC/G,aAAxC,CAAuDC,IAAvD,CAA6DC,YAA7D,CAA9B,CAEA,GAAID,IAAJ,CAAU,CACR,GAAI,CAACsE,aAAa,CAACpD,OAAd,CAAsBqG,QAA3B,CAAqC,CACnC,GAAMA,CAAAA,QAAQ,CAAG9H,eAAe,CAAGoH,QAAQ,CAAG5G,YAAd,CAA6B6G,QAAQ,CAAG7G,YAAxE,CAEA,GAAIsH,QAAJ,CAAc,CACZjD,aAAa,CAACpD,OAAd,CAAsBqG,QAAtB,CAAiC,IAAjC,CACAjD,aAAa,CAACpD,OAAd,CAAsBqF,MAAtB,CAA+BM,QAA/B,CACAvC,aAAa,CAACpD,OAAd,CAAsBsF,MAAtB,CAA+BM,QAA/B,CACD,CAJD,IAIO,CACL,OACD,CACF,CAVD,IAUO,IAAI9B,SAAS,GAAK,CAAlB,CAAqB,CAC1BV,aAAa,CAACpD,OAAd,CAAsBqF,MAAtB,CAA+BM,QAA/B,CACAvC,aAAa,CAACpD,OAAd,CAAsBsF,MAAtB,CAA+BM,QAA/B,CACD,CACF,CAED,GAAIxC,aAAa,CAACpD,OAAd,CAAsBsG,aAAtB,GAAwC,IAA5C,CAAkD,CAChDlD,aAAa,CAACpD,OAAd,CAAsBsG,aAAtB,CAAsCxC,SAAtC,CACAV,aAAa,CAACpD,OAAd,CAAsBuG,QAAtB,CAAiCC,WAAW,CAACC,GAAZ,GAAoB,CAArD,CACD,CAED,GAAMhB,CAAAA,QAAQ,CAAG,CAAC3B,SAAS,CAAGV,aAAa,CAACpD,OAAd,CAAsBsG,aAAnC,GAAqDE,WAAW,CAACC,GAAZ,GAAoBrD,aAAa,CAACpD,OAAd,CAAsBuG,QAA/F,EAA2G,GAA5H,CAAiI;AAEjInD,aAAa,CAACpD,OAAd,CAAsByF,QAAtB,CAAiCrC,aAAa,CAACpD,OAAd,CAAsByF,QAAtB,CAAiC,GAAjC,CAAuCA,QAAQ,CAAG,GAAnF,CACArC,aAAa,CAACpD,OAAd,CAAsBsG,aAAtB,CAAsCxC,SAAtC,CACAV,aAAa,CAACpD,OAAd,CAAsBuG,QAAtB,CAAiCC,WAAW,CAACC,GAAZ,EAAjC,CAAoD;AAEpD,GAAIxB,WAAW,CAACkB,UAAhB,CAA4B,CAC1BlB,WAAW,CAACmB,cAAZ,GACD,CAEDxC,WAAW,CAACE,SAAD,CAAX,CACD,CA/G2C,CAA5C,CAgHA,GAAM4C,CAAAA,oBAAoB,CAAG5J,gBAAgB,CAAC,SAAAmI,WAAW,CAAI,CAC3D;AACA;AACA,GAAIA,WAAW,CAAC0B,gBAAhB,CAAkC,CAChC,OACD,CAAC;AAGF,GAAI1B,WAAW,CAAC2B,mBAAhB,CAAqC,CACnC,OACD,CAAC;AAGF,GAAI9H,IAAI,GAAKqD,YAAY,EAAI,CAACqB,WAAW,CAACxD,OAAZ,CAAoB6F,QAApB,CAA6BZ,WAAW,CAACa,MAAzC,CAAtB,CAAJ,EAA+E,CAACrC,QAAQ,CAACzD,OAAT,CAAiB6F,QAAjB,CAA0BZ,WAAW,CAACa,MAAtC,CAApF,CAAmI,CACjI,OACD,CAED,GAAM5B,CAAAA,SAAS,CAAGxH,SAAS,CAAC8E,KAAD,CAAQ5D,MAAR,CAA3B,CACA,GAAMW,CAAAA,eAAe,CAAG5B,YAAY,CAACiB,MAAD,CAApC,CACA,GAAM+H,CAAAA,QAAQ,CAAGhI,iBAAiB,CAACuG,SAAD,CAAYe,WAAW,CAACpH,OAAxB,CAAiCjB,aAAa,CAACqI,WAAW,CAACG,aAAb,CAA9C,CAAlC,CACA,GAAMQ,CAAAA,QAAQ,CAAG1H,iBAAiB,CAACgG,SAAD,CAAYe,WAAW,CAACpH,OAAxB,CAAiChB,WAAW,CAACoI,WAAW,CAACG,aAAb,CAA5C,CAAlC,CAEA,GAAI,CAACtG,IAAL,CAAW,CACT,GAAIoD,kBAAkB,EAAI+C,WAAW,CAACa,MAAZ,GAAuBvC,YAAY,CAACvD,OAA9D,CAAuE,CACrE,OACD,CAED,GAAIzB,eAAJ,CAAqB,CACnB,GAAIoH,QAAQ,CAAG/C,cAAf,CAA+B,CAC7B,OACD,CACF,CAJD,IAIO,IAAIgD,QAAQ,CAAGhD,cAAf,CAA+B,CACpC,OACD,CACF,CAEDqC,WAAW,CAAC2B,mBAAZ,CAAkC,IAAlC,CACAnJ,oBAAoB,CAAG,IAAvB,CACA2F,aAAa,CAACpD,OAAd,CAAsBqF,MAAtB,CAA+BM,QAA/B,CACAvC,aAAa,CAACpD,OAAd,CAAsBsF,MAAtB,CAA+BM,QAA/B,CACAzC,eAAe,CAAC,IAAD,CAAf,CAEA,GAAI,CAACrE,IAAD,EAAS2E,QAAQ,CAACzD,OAAtB,CAA+B,CAC7B;AACA4D,WAAW,CAACtF,eAAe,CAACC,eAAD,CAAkBkF,QAAQ,CAACzD,OAA3B,CAAf,EAAsDiC,gBAAgB,CAAG,EAAH,CAAQ,CAACzE,mBAA/E,CAAD,CAAsG,CAC/GyG,gBAAgB,CAAE,KAD6F,CAAtG,CAAX,CAGD,CAEDb,aAAa,CAACpD,OAAd,CAAsByF,QAAtB,CAAiC,CAAjC,CACArC,aAAa,CAACpD,OAAd,CAAsBuG,QAAtB,CAAiC,IAAjC,CACAnD,aAAa,CAACpD,OAAd,CAAsBsG,aAAtB,CAAsC,IAAtC,CACAlD,aAAa,CAACpD,OAAd,CAAsBqG,QAAtB,CAAiC,KAAjC,CACA3C,aAAa,CAAC1D,OAAd,CAAwB,IAAxB,CACD,CAtD4C,CAA7C,CAuDA3D,KAAK,CAACwK,SAAN,CAAgB,UAAM,CACpB,GAAI/D,OAAO,GAAK,WAAhB,CAA6B,CAC3B,GAAMhF,CAAAA,GAAG,CAAGlB,aAAa,CAAC6G,QAAQ,CAACzD,OAAV,CAAzB,CACAlC,GAAG,CAACgJ,gBAAJ,CAAqB,YAArB,CAAmCJ,oBAAnC,EAA0D;AAC1D;AACA;AAEA5I,GAAG,CAACgJ,gBAAJ,CAAqB,WAArB,CAAkCpB,mBAAlC,CAAuD,CACrDqB,OAAO,CAAE,CAACjI,IAD2C,CAAvD,EAGAhB,GAAG,CAACgJ,gBAAJ,CAAqB,UAArB,CAAiC9B,kBAAjC,EACA,MAAO,WAAM,CACXlH,GAAG,CAACkJ,mBAAJ,CAAwB,YAAxB,CAAsCN,oBAAtC,EACA5I,GAAG,CAACkJ,mBAAJ,CAAwB,WAAxB,CAAqCtB,mBAArC,CAA0D,CACxDqB,OAAO,CAAE,CAACjI,IAD8C,CAA1D,EAGAhB,GAAG,CAACkJ,mBAAJ,CAAwB,UAAxB,CAAoChC,kBAApC,EACD,CAND,CAOD,CAED,MAAOL,CAAAA,SAAP,CACD,CArBD,CAqBG,CAAC7B,OAAD,CAAUhE,IAAV,CAAgB4H,oBAAhB,CAAsChB,mBAAtC,CAA2DV,kBAA3D,CArBH,EAsBA3I,KAAK,CAACwK,SAAN,CAAgB,iBAAM,WAAM,CAC1B;AACA,GAAIpJ,oBAAoB,GAAK2F,aAAa,CAACpD,OAA3C,CAAoD,CAClDvC,oBAAoB,CAAG,IAAvB,CACD,CACF,CALe,EAAhB,CAKG,EALH,EAMApB,KAAK,CAACwK,SAAN,CAAgB,UAAM,CACpB,GAAI,CAAC/H,IAAL,CAAW,CACTqE,eAAe,CAAC,KAAD,CAAf,CACD,CACF,CAJD,CAIG,CAACrE,IAAD,CAJH,EAKA,MAAO,aAAaxB,KAAK,CAACjB,KAAK,CAAC4K,QAAP,CAAiB,CACxCC,QAAQ,CAAE,CAAC,aAAa9J,IAAI,CAACX,MAAD,CAASR,QAAQ,CAAC,CAC5C6C,IAAI,CAAEgE,OAAO,GAAK,WAAZ,EAA2BI,YAA3B,CAA0C,IAA1C,CAAiDpE,IADX,CAE5CgE,OAAO,CAAEA,OAFmC,CAG5CR,UAAU,CAAErG,QAAQ,CAAC,CACnBsG,aAAa,CAAEtG,QAAQ,CAAC,EAAD,CAAKsG,aAAL,CAAoB,CACzClB,GAAG,CAAEmC,WADoC,CAApB,CADJ,CAAD,CAIjBT,cAJiB,CAHwB,CAQ5CZ,YAAY,CAAEA,YAR8B,CAS5CO,UAAU,CAAEzG,QAAQ,CAAC,EAAD,CAAKyG,UAAL,CAAiB,CACnClD,KAAK,CAAEvD,QAAQ,CAAC,CACdkL,aAAa,CAAErE,OAAO,GAAK,WAAZ,EAA2B,CAAChE,IAA5B,CAAmC,MAAnC,CAA4C,EAD7C,CAAD,CAEZ4D,UAAU,CAAClD,KAFC,CADoB,CAInC6B,GAAG,CAAEoC,QAJ8B,CAAjB,CATwB,CAe5C7F,MAAM,CAAEA,MAfoC,CAgB5CiF,kBAAkB,CAAEc,qBAAqB,CAAC3D,OAAtB,EAAiC6C,kBAhBT,CAiB5CL,OAAO,CAAEA,OAjBmC,CAkB5CnB,GAAG,CAAEA,GAlBuC,CAAD,CAmB1C2B,KAnB0C,CAAjB,CAAlB,CAmBE,CAACd,kBAAD,EAAuBY,OAAO,GAAK,WAAnC,EAAkD,aAAa1F,IAAI,CAACZ,KAAD,CAAQ,CACrF0K,QAAQ,CAAE,aAAa9J,IAAI,CAACF,SAAD,CAAYjB,QAAQ,CAAC,CAC9C2B,MAAM,CAAEA,MADsC,CAE9CyD,GAAG,CAAEkC,YAFyC,CAG9C6D,KAAK,CAAExE,cAHuC,CAAD,CAI5CD,cAJ4C,CAApB,CAD0D,CAAR,CAnBrE,CAD8B,CAAjB,CAAzB,CA4BD,CApXoC,CAArC,CAqXA0E,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,QAiII,IAAK,EAjIT,CAkIA,cAAerG,CAAAA,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nexport function reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"]},"metadata":{},"sourceType":"module"}