{"ast":null,"code":"/** @license MUI v5.7.0\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */import emStyled from'@emotion/styled';export default function styled(tag,options){var stylesFactory=emStyled(tag,options);if(process.env.NODE_ENV!=='production'){return function(){var component=typeof tag==='string'?\"\\\"\".concat(tag,\"\\\"\"):'component';for(var _len=arguments.length,styles=new Array(_len),_key=0;_key<_len;_key++){styles[_key]=arguments[_key];}if(styles.length===0){console.error([\"MUI: Seems like you called `styled(\".concat(component,\")()` without a `style` argument.\"),'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));}else if(styles.some(function(style){return style===undefined;})){console.error(\"MUI: the styled(\".concat(component,\")(...args) API requires all its args to be defined.\"));}return stylesFactory.apply(void 0,styles);};}return stylesFactory;}export{ThemeContext,keyframes,css}from'@emotion/react';export{default as StyledEngineProvider}from'./StyledEngineProvider';export{default as GlobalStyles}from'./GlobalStyles';","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/styled-engine/index.js"],"names":["emStyled","styled","tag","options","stylesFactory","process","env","NODE_ENV","component","styles","length","console","error","join","some","style","undefined","ThemeContext","keyframes","css","default","StyledEngineProvider","GlobalStyles"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,QAAP,KAAqB,iBAArB,CACA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,GAAhB,CAAqBC,OAArB,CAA8B,CAC3C,GAAMC,CAAAA,aAAa,CAAGJ,QAAQ,CAACE,GAAD,CAAMC,OAAN,CAA9B,CAEA,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,MAAO,WAAe,CACpB,GAAMC,CAAAA,SAAS,CAAG,MAAON,CAAAA,GAAP,GAAe,QAAf,aAA8BA,GAA9B,OAAuC,WAAzD,CADoB,8BAAXO,MAAW,0CAAXA,MAAW,wBAGpB,GAAIA,MAAM,CAACC,MAAP,GAAkB,CAAtB,CAAyB,CACvBC,OAAO,CAACC,KAAR,CAAc,8CAAwCJ,SAAxC,qCAAwF,8EAAxF,EAAwKK,IAAxK,CAA6K,IAA7K,CAAd,EACD,CAFD,IAEO,IAAIJ,MAAM,CAACK,IAAP,CAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,GAAKC,SAAd,EAAjB,CAAJ,CAA+C,CACpDL,OAAO,CAACC,KAAR,2BAAiCJ,SAAjC,yDACD,CAED,MAAOJ,CAAAA,aAAa,MAAb,QAAiBK,MAAjB,CAAP,CACD,CAVD,CAWD,CAED,MAAOL,CAAAA,aAAP,CACD,CACD,OAASa,YAAT,CAAuBC,SAAvB,CAAkCC,GAAlC,KAA6C,gBAA7C,CACA,OAASC,OAAO,GAAIC,CAAAA,oBAApB,KAAgD,wBAAhD,CACA,OAASD,OAAO,GAAIE,CAAAA,YAApB,KAAwC,gBAAxC","sourcesContent":["/** @license MUI v5.7.0\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport emStyled from '@emotion/styled';\nexport default function styled(tag, options) {\n  const stylesFactory = emStyled(tag, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n\n      if (styles.length === 0) {\n        console.error([`MUI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n\n      return stylesFactory(...styles);\n    };\n  }\n\n  return stylesFactory;\n}\nexport { ThemeContext, keyframes, css } from '@emotion/react';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';"]},"metadata":{},"sourceType":"module"}