{"ast":null,"code":"import _defineProperty from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import{formatMuiErrorMessage as _formatMuiErrorMessage}from\"@mui/utils\";var _excluded=[\"colorSchemes\",\"components\"];import*as React from'react';import PropTypes from'prop-types';import{deepmerge,unstable_useEnhancedEffect as useEnhancedEffect}from'@mui/utils';import{GlobalStyles}from'@mui/styled-engine';import cssVarsParser from'./cssVarsParser';import ThemeProvider from'../ThemeProvider';import getInitColorSchemeScript,{DEFAULT_ATTRIBUTE,DEFAULT_COLOR_SCHEME_STORAGE_KEY,DEFAULT_MODE_STORAGE_KEY}from'./getInitColorSchemeScript';import useCurrentColorScheme from'./useCurrentColorScheme';import createGetCssVar from'./createGetCssVar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var DISABLE_CSS_TRANSITION='*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';export default function createCssVarsProvider(options){var _options$theme=options.theme,defaultTheme=_options$theme===void 0?{}:_options$theme,_options$defaultMode=options.defaultMode,desisgnSystemMode=_options$defaultMode===void 0?'light':_options$defaultMode,designSystemColorScheme=options.defaultColorScheme,_options$disableTrans=options.disableTransitionOnChange,designSystemTransitionOnChange=_options$disableTrans===void 0?false:_options$disableTrans,_options$enableColorS=options.enableColorScheme,designSystemEnableColorScheme=_options$enableColorS===void 0?true:_options$enableColorS,_options$prefix=options.prefix,designSystemPrefix=_options$prefix===void 0?'':_options$prefix,shouldSkipGeneratingVar=options.shouldSkipGeneratingVar,resolveTheme=options.resolveTheme;if(!defaultTheme.colorSchemes||typeof designSystemColorScheme==='string'&&!defaultTheme.colorSchemes[designSystemColorScheme]||typeof designSystemColorScheme==='object'&&!defaultTheme.colorSchemes[designSystemColorScheme==null?void 0:designSystemColorScheme.light]||typeof designSystemColorScheme==='object'&&!defaultTheme.colorSchemes[designSystemColorScheme==null?void 0:designSystemColorScheme.dark]){console.error(\"MUI: `\".concat(designSystemColorScheme,\"` does not exist in `theme.colorSchemes`.\"));}var ColorSchemeContext=/*#__PURE__*/React.createContext(undefined);var useColorScheme=function useColorScheme(){var value=React.useContext(ColorSchemeContext);if(!value){throw new Error(process.env.NODE_ENV!==\"production\"?\"MUI: `useColorScheme` must be called under <CssVarsProvider />\":_formatMuiErrorMessage(19));}return value;};function CssVarsProvider(_ref){var children=_ref.children,_ref$theme=_ref.theme,themeProp=_ref$theme===void 0?defaultTheme:_ref$theme,_ref$prefix=_ref.prefix,prefix=_ref$prefix===void 0?designSystemPrefix:_ref$prefix,_ref$modeStorageKey=_ref.modeStorageKey,modeStorageKey=_ref$modeStorageKey===void 0?DEFAULT_MODE_STORAGE_KEY:_ref$modeStorageKey,_ref$colorSchemeStora=_ref.colorSchemeStorageKey,colorSchemeStorageKey=_ref$colorSchemeStora===void 0?DEFAULT_COLOR_SCHEME_STORAGE_KEY:_ref$colorSchemeStora,_ref$attribute=_ref.attribute,attribute=_ref$attribute===void 0?DEFAULT_ATTRIBUTE:_ref$attribute,_ref$defaultMode=_ref.defaultMode,defaultMode=_ref$defaultMode===void 0?desisgnSystemMode:_ref$defaultMode,_ref$defaultColorSche=_ref.defaultColorScheme,defaultColorScheme=_ref$defaultColorSche===void 0?designSystemColorScheme:_ref$defaultColorSche,_ref$disableTransitio=_ref.disableTransitionOnChange,disableTransitionOnChange=_ref$disableTransitio===void 0?designSystemTransitionOnChange:_ref$disableTransitio,_ref$enableColorSchem=_ref.enableColorScheme,enableColorScheme=_ref$enableColorSchem===void 0?designSystemEnableColorScheme:_ref$enableColorSchem,_ref$storageWindow=_ref.storageWindow,storageWindow=_ref$storageWindow===void 0?typeof window==='undefined'?undefined:window:_ref$storageWindow,_ref$documentNode=_ref.documentNode,documentNode=_ref$documentNode===void 0?typeof document==='undefined'?undefined:document:_ref$documentNode,_ref$colorSchemeNode=_ref.colorSchemeNode,colorSchemeNode=_ref$colorSchemeNode===void 0?typeof document==='undefined'?undefined:document.documentElement:_ref$colorSchemeNode,_ref$colorSchemeSelec=_ref.colorSchemeSelector,colorSchemeSelector=_ref$colorSchemeSelec===void 0?':root':_ref$colorSchemeSelec;var hasMounted=React.useRef(false);var _themeProp$colorSchem=themeProp.colorSchemes,colorSchemes=_themeProp$colorSchem===void 0?{}:_themeProp$colorSchem,_themeProp$components=themeProp.components,components=_themeProp$components===void 0?{}:_themeProp$components,restThemeProp=_objectWithoutPropertiesLoose(themeProp,_excluded);var allColorSchemes=Object.keys(colorSchemes);var defaultLightColorScheme=typeof defaultColorScheme==='string'?defaultColorScheme:defaultColorScheme.light;var defaultDarkColorScheme=typeof defaultColorScheme==='string'?defaultColorScheme:defaultColorScheme.dark;var _useCurrentColorSchem=useCurrentColorScheme({supportedColorSchemes:allColorSchemes,defaultLightColorScheme:defaultLightColorScheme,defaultDarkColorScheme:defaultDarkColorScheme,modeStorageKey:modeStorageKey,colorSchemeStorageKey:colorSchemeStorageKey,defaultMode:defaultMode,storageWindow:storageWindow}),mode=_useCurrentColorSchem.mode,setMode=_useCurrentColorSchem.setMode,systemMode=_useCurrentColorSchem.systemMode,lightColorScheme=_useCurrentColorSchem.lightColorScheme,darkColorScheme=_useCurrentColorSchem.darkColorScheme,colorScheme=_useCurrentColorSchem.colorScheme,setColorScheme=_useCurrentColorSchem.setColorScheme;var resolvedColorScheme=function(){if(!colorScheme){// This scope occurs on the server\nif(defaultMode==='dark'){return defaultDarkColorScheme;}// use light color scheme, if default mode is 'light' | 'auto'\nreturn defaultLightColorScheme;}return colorScheme;}();var theme=restThemeProp;var _cssVarsParser=cssVarsParser(theme,{prefix:prefix,basePrefix:designSystemPrefix,shouldSkipGeneratingVar:shouldSkipGeneratingVar}),rootCss=_cssVarsParser.css,rootVars=_cssVarsParser.vars,parsedTheme=_cssVarsParser.parsedTheme;theme=_extends({},parsedTheme,{components:components,colorSchemes:colorSchemes,prefix:prefix,vars:rootVars,getCssVar:createGetCssVar(prefix)});var styleSheet={};Object.entries(colorSchemes).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],scheme=_ref3[1];var _cssVarsParser2=cssVarsParser(scheme,{prefix:prefix,basePrefix:designSystemPrefix,shouldSkipGeneratingVar:shouldSkipGeneratingVar}),css=_cssVarsParser2.css,vars=_cssVarsParser2.vars,parsedScheme=_cssVarsParser2.parsedTheme;theme.vars=deepmerge(theme.vars,vars);if(key===resolvedColorScheme){theme=_extends({},theme,parsedScheme);if(theme.palette){// assign runtime mode & colorScheme\ntheme.palette.mode=mode;theme.palette.colorScheme=resolvedColorScheme;}}var resolvedDefaultColorScheme=function(){if(typeof defaultColorScheme==='string'){return defaultColorScheme;}if(defaultMode==='dark'){return defaultColorScheme.dark;}return defaultColorScheme.light;}();if(key===resolvedDefaultColorScheme){styleSheet[colorSchemeSelector]=css;}else{styleSheet[\"\".concat(colorSchemeSelector===':root'?'':colorSchemeSelector,\"[\").concat(attribute,\"=\\\"\").concat(key,\"\\\"]\")]=css;}});React.useEffect(function(){if(colorScheme&&colorSchemeNode){// attaches attribute to <html> because the css variables are attached to :root (html)\ncolorSchemeNode.setAttribute(attribute,colorScheme);}},[colorScheme,attribute,colorSchemeNode]);useEnhancedEffect(function(){if(!mode||!enableColorScheme||!colorSchemeNode){return undefined;}var priorColorScheme=colorSchemeNode.style.getPropertyValue('color-scheme');// `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\nif(mode==='system'){colorSchemeNode.style.setProperty('color-scheme',systemMode);}else{colorSchemeNode.style.setProperty('color-scheme',mode);}return function(){colorSchemeNode.style.setProperty('color-scheme',priorColorScheme);};},[mode,systemMode,enableColorScheme,colorSchemeNode]);React.useEffect(function(){var timer;if(disableTransitionOnChange&&hasMounted.current&&documentNode){// credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\nvar css=documentNode.createElement('style');css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));documentNode.head.appendChild(css);// Force browser repaint\n(function(){return window.getComputedStyle(documentNode.body);})();timer=setTimeout(function(){documentNode.head.removeChild(css);},1);}return function(){clearTimeout(timer);};},[colorScheme,disableTransitionOnChange,documentNode]);React.useEffect(function(){hasMounted.current=true;return function(){hasMounted.current=false;};},[]);return/*#__PURE__*/_jsxs(ColorSchemeContext.Provider,{value:{mode:mode,setMode:setMode,lightColorScheme:lightColorScheme,darkColorScheme:darkColorScheme,colorScheme:colorScheme,setColorScheme:setColorScheme,allColorSchemes:allColorSchemes},children:[/*#__PURE__*/_jsx(GlobalStyles,{styles:_defineProperty({},colorSchemeSelector,rootCss)}),/*#__PURE__*/_jsx(GlobalStyles,{styles:styleSheet}),/*#__PURE__*/_jsx(ThemeProvider,{theme:resolveTheme?resolveTheme(theme):theme,children:children})]});}process.env.NODE_ENV!==\"production\"?CssVarsProvider.propTypes={/**\n     * The body attribute name to attach colorScheme.\n     */attribute:PropTypes.string,/**\n     * The component tree.\n     */children:PropTypes.node,/**\n     * The node used to attach the color-scheme attribute\n     */colorSchemeNode:PropTypes.any,/**\n     * The CSS selector for attaching the generated custom properties\n     */colorSchemeSelector:PropTypes.string,/**\n     * localStorage key used to store `colorScheme`\n     */colorSchemeStorageKey:PropTypes.string,/**\n     * The initial color scheme used.\n     */defaultColorScheme:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),/**\n     * The initial mode used.\n     */defaultMode:PropTypes.string,/**\n     * Disable CSS transitions when switching between modes or color schemes\n     */disableTransitionOnChange:PropTypes.bool,/**\n     * The document to attach the attribute to\n     */documentNode:PropTypes.any,/**\n     * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI\n     */enableColorScheme:PropTypes.bool,/**\n     * The key in the local storage used to store current color scheme.\n     */modeStorageKey:PropTypes.string,/**\n     * CSS variable prefix.\n     */prefix:PropTypes.string,/**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */storageWindow:PropTypes.any,/**\n     * The calculated theme object that will be passed through context.\n     */theme:PropTypes.object}:void 0;return{CssVarsProvider:CssVarsProvider,useColorScheme:useColorScheme,getInitColorSchemeScript:getInitColorSchemeScript};}","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js"],"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_excluded","React","PropTypes","deepmerge","unstable_useEnhancedEffect","useEnhancedEffect","GlobalStyles","cssVarsParser","ThemeProvider","getInitColorSchemeScript","DEFAULT_ATTRIBUTE","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_MODE_STORAGE_KEY","useCurrentColorScheme","createGetCssVar","jsx","_jsx","jsxs","_jsxs","DISABLE_CSS_TRANSITION","createCssVarsProvider","options","theme","defaultTheme","defaultMode","desisgnSystemMode","designSystemColorScheme","defaultColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","enableColorScheme","designSystemEnableColorScheme","prefix","designSystemPrefix","shouldSkipGeneratingVar","resolveTheme","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","useColorScheme","value","useContext","Error","process","env","NODE_ENV","CssVarsProvider","children","themeProp","modeStorageKey","colorSchemeStorageKey","attribute","storageWindow","window","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","hasMounted","useRef","components","restThemeProp","allColorSchemes","Object","keys","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","mode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","setColorScheme","resolvedColorScheme","basePrefix","rootCss","css","rootVars","vars","parsedTheme","getCssVar","styleSheet","entries","forEach","key","scheme","parsedScheme","palette","resolvedDefaultColorScheme","useEffect","setAttribute","priorColorScheme","style","getPropertyValue","setProperty","timer","current","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","Provider","styles","propTypes","string","node","any","oneOfType","object","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"colorSchemes\", \"components\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { deepmerge, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport cssVarsParser from './cssVarsParser';\nimport ThemeProvider from '../ThemeProvider';\nimport getInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport createGetCssVar from './createGetCssVar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    theme: defaultTheme = {},\n    defaultMode: desisgnSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    enableColorScheme: designSystemEnableColorScheme = true,\n    prefix: designSystemPrefix = '',\n    shouldSkipGeneratingVar,\n    resolveTheme\n  } = options;\n\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : _formatMuiErrorMessage(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider({\n    children,\n    theme: themeProp = defaultTheme,\n    prefix = designSystemPrefix,\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE,\n    defaultMode = desisgnSystemMode,\n    defaultColorScheme = designSystemColorScheme,\n    disableTransitionOnChange = designSystemTransitionOnChange,\n    enableColorScheme = designSystemEnableColorScheme,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    documentNode = typeof document === 'undefined' ? undefined : document,\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n    colorSchemeSelector = ':root'\n  }) {\n    const hasMounted = React.useRef(false);\n\n    const {\n      colorSchemes = {},\n      components = {}\n    } = themeProp,\n          restThemeProp = _objectWithoutPropertiesLoose(themeProp, _excluded);\n\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n\n    const resolvedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })();\n\n    let theme = restThemeProp;\n    const {\n      css: rootCss,\n      vars: rootVars,\n      parsedTheme\n    } = cssVarsParser(theme, {\n      prefix,\n      basePrefix: designSystemPrefix,\n      shouldSkipGeneratingVar\n    });\n    theme = _extends({}, parsedTheme, {\n      components,\n      colorSchemes,\n      prefix,\n      vars: rootVars,\n      getCssVar: createGetCssVar(prefix)\n    });\n    const styleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars,\n        parsedTheme: parsedScheme\n      } = cssVarsParser(scheme, {\n        prefix,\n        basePrefix: designSystemPrefix,\n        shouldSkipGeneratingVar\n      });\n      theme.vars = deepmerge(theme.vars, vars);\n\n      if (key === resolvedColorScheme) {\n        theme = _extends({}, theme, parsedScheme);\n\n        if (theme.palette) {\n          // assign runtime mode & colorScheme\n          theme.palette.mode = mode;\n          theme.palette.colorScheme = resolvedColorScheme;\n        }\n      }\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        styleSheet[colorSchemeSelector] = css;\n      } else {\n        styleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n    useEnhancedEffect(() => {\n      if (!mode || !enableColorScheme || !colorSchemeNode) {\n        return undefined;\n      }\n\n      const priorColorScheme = colorSchemeNode.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        colorSchemeNode.style.setProperty('color-scheme', systemMode);\n      } else {\n        colorSchemeNode.style.setProperty('color-scheme', mode);\n      }\n\n      return () => {\n        colorSchemeNode.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode, enableColorScheme, colorSchemeNode]);\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(documentNode.body))();\n\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/_jsxs(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/_jsx(GlobalStyles, {\n        styles: {\n          [colorSchemeSelector]: rootCss\n        }\n      }), /*#__PURE__*/_jsx(GlobalStyles, {\n        styles: styleSheet\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: PropTypes.string,\n\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: PropTypes.string,\n\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: PropTypes.string,\n\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: PropTypes.bool,\n\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: PropTypes.any,\n\n    /**\n     * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI\n     */\n    enableColorScheme: PropTypes.bool,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n\n    /**\n     * CSS variable prefix.\n     */\n    prefix: PropTypes.string,\n\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"]},"metadata":{},"sourceType":"module"}