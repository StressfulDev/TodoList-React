{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\",\n    _s = $RefreshSig$();\n\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { Box, Button } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = props => {\n  _s();\n\n  console.log('Todo list rendered');\n  const {\n    todoList,\n    clearCompleted,\n    toggleEditState,\n    completeTask,\n    completeAllTasks,\n    removeTask,\n    saveEditTask\n  } = props;\n  const [displayAllTodos, setDisplayAllTodos] = useState(true);\n  const [displayCurrentTodos, setDisplayCurrentTodos] = useState(false);\n  const [displayCompletedTodos, setDisplayCompletedTodos] = useState(false);\n  const [focusAllButton, setFocusAllButton] = useState(false);\n  const [focusCurrentButton, setFocusCurrentButton] = useState(false);\n  const [focusCompletedButton, setFocusCompletedButton] = useState(false);\n\n  const showAllTodos = () => {\n    setDisplayAllTodos(true);\n    setDisplayCompletedTodos(false);\n    setDisplayCurrentTodos(false);\n    setFocusAllButton(true);\n    setFocusCompletedButton(false);\n    setFocusCurrentButton(false);\n  };\n\n  const showCurrentTodos = () => {\n    setDisplayAllTodos(false);\n    setDisplayCompletedTodos(false);\n    setDisplayCurrentTodos(true);\n    setFocusAllButton(false);\n    setFocusCompletedButton(false);\n    setFocusCurrentButton(true);\n  };\n\n  const showCompletedTodos = () => {\n    setDisplayAllTodos(false);\n    setDisplayCompletedTodos(true);\n    setDisplayCurrentTodos(false);\n    setFocusAllButton(false);\n    setFocusCompletedButton(true);\n    setFocusCurrentButton(false);\n  };\n\n  const todoItem = todoList.map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  });\n  const completedItems = todoList.filter(task => task.complete === true).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  });\n  const currentItems = todoList.filter(task => task.complete === false).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this);\n  });\n  const disableDeleteButton = !completedItems.length;\n  const disableCompleteButton = !todoItem.length;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '70vh',\n        overflowY: 'scroll'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        display: displayAllTodos ? 'block' : 'none',\n        children: todoItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        display: displayCompletedTodos ? 'block' : 'none',\n        children: completedItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        display: displayCurrentTodos ? 'block' : 'none',\n        children: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: 'flex-start',\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: completeAllTasks,\n        \"aria-label\": \"mark-all-completed\",\n        color: 'success',\n        size: 'medium',\n        disabled: disableCompleteButton,\n        children: /*#__PURE__*/_jsxDEV(LibraryAddCheckIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: focusAllButton ? 'contained' : 'outlined',\n        size: 'large',\n        onClick: showAllTodos,\n        children: [\"All \", todoList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: focusCurrentButton ? 'contained' : 'outlined',\n        color: 'info',\n        size: 'large',\n        onClick: showCurrentTodos,\n        children: [\"Current \", currentItems.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: focusCompletedButton ? 'contained' : 'outlined',\n        color: \"success\",\n        size: 'large',\n        onClick: showCompletedTodos,\n        children: [\"Completed \", completedItems.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: clearCompleted,\n        \"aria-label\": \"delete-all-completed\",\n        color: 'error',\n        size: 'medium',\n        disabled: disableDeleteButton,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodosList, \"wtDeYd8XQ5a/ubDiKp02A1td4wU=\");\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","Box","Button","Typography","Stack","DeleteIcon","IconButton","LibraryAddCheckIcon","useState","TodosList","props","console","log","todoList","clearCompleted","toggleEditState","completeTask","completeAllTasks","removeTask","saveEditTask","displayAllTodos","setDisplayAllTodos","displayCurrentTodos","setDisplayCurrentTodos","displayCompletedTodos","setDisplayCompletedTodos","focusAllButton","setFocusAllButton","focusCurrentButton","setFocusCurrentButton","focusCompletedButton","setFocusCompletedButton","showAllTodos","showCurrentTodos","showCompletedTodos","todoItem","map","todo","complete","id","completedItems","filter","task","currentItems","disableDeleteButton","length","disableCompleteButton","height","overflowY"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAAQC,GAAR,EAAaC,MAAb,QAA0B,eAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA;AAPI,MAQFT,KARJ;AAUA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACc,mBAAD,EAAsBC,sBAAtB,IAAgDf,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACgB,qBAAD,EAAwBC,wBAAxB,IAAoDjB,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACoB,kBAAD,EAAqBC,qBAArB,IAA8CrB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACsB,oBAAD,EAAuBC,uBAAvB,IAAkDvB,QAAQ,CAAC,KAAD,CAAhE;;AAEA,QAAMwB,YAAY,GAAG,MAAM;AACzBX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAI,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAF,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AAEAI,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAI,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GARD;;AAUA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BZ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAI,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAF,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AAEAI,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAI,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAF,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GARD;;AAUA,QAAMK,kBAAkB,GAAG,MAAM;AAC/Bb,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAI,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACAF,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AAEAI,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAI,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GARD;;AAUA,QAAMM,QAAQ,GAAGtB,QAAQ,CAACuB,GAAT,CAAaC,IAAI,IAAI;AACpC,wBACI,QAAC,QAAD;AACU,MAAA,IAAI,EAAEA,IADhB;AAEU,MAAA,aAAa,EAAEA,IAAI,CAACC,QAF9B;AAGU,MAAA,YAAY,EAAEtB,YAHxB;AAIU,MAAA,UAAU,EAAEE,UAJtB;AAKU,MAAA,YAAY,EAAEC,YALxB;AAMU,MAAA,eAAe,EAAEJ;AAN3B,OAAesB,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUD,GAXgB,CAAjB;AAYA,QAAMC,cAAc,GAAG3B,QAAQ,CAAC4B,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACJ,QAAL,KAAkB,IAA1C,EAAgDF,GAAhD,CAAoDC,IAAI,IAAI;AACjF,wBACI,QAAC,QAAD;AACU,MAAA,IAAI,EAAEA,IADhB;AAEU,MAAA,aAAa,EAAEA,IAAI,CAACC,QAF9B;AAGU,MAAA,YAAY,EAAEtB,YAHxB;AAIU,MAAA,UAAU,EAAEE,UAJtB;AAKU,MAAA,YAAY,EAAEC,YALxB;AAMU,MAAA,eAAe,EAAEJ;AAN3B,OAAesB,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUD,GAXsB,CAAvB;AAYA,QAAMI,YAAY,GAAG9B,QAAQ,CAAC4B,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACJ,QAAL,KAAkB,KAA1C,EAAiDF,GAAjD,CAAqDC,IAAI,IAAI;AAChF,wBACI,QAAC,QAAD;AACU,MAAA,IAAI,EAAEA,IADhB;AAEU,MAAA,aAAa,EAAEA,IAAI,CAACC,QAF9B;AAGU,MAAA,YAAY,EAAEtB,YAHxB;AAIU,MAAA,UAAU,EAAEE,UAJtB;AAKU,MAAA,YAAY,EAAEC,YALxB;AAMU,MAAA,eAAe,EAAEJ;AAN3B,OAAesB,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUD,GAXoB,CAArB;AAaA,QAAMK,mBAAmB,GAAG,CAACJ,cAAc,CAACK,MAA5C;AACA,QAAMC,qBAAqB,GAAG,CAACX,QAAQ,CAACU,MAAxC;AAEA,sBACI,QAAC,GAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AACPE,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,SAAS,EAAE;AAFJ,OAAT;AAAA,8BAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AACY,QAAA,SAAS,EAAC,IADtB;AAEY,QAAA,YAAY,MAFxB;AAGY,QAAA,OAAO,EAAE5B,eAAe,GAAG,OAAH,GAAa,MAHjD;AAAA,kBAKGe;AALH;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AACY,QAAA,SAAS,EAAC,IADtB;AAEY,QAAA,YAAY,MAFxB;AAGY,QAAA,OAAO,EAAEX,qBAAqB,GAAG,OAAH,GAAa,MAHvD;AAAA,kBAKGgB;AALH;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AACY,QAAA,SAAS,EAAC,IADtB;AAEY,QAAA,YAAY,MAFxB;AAGY,QAAA,OAAO,EAAElB,mBAAmB,GAAG,OAAH,GAAa,MAHrD;AAAA,kBAKGqB;AALH;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2BE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,KAAlB;AACO,MAAA,cAAc,EAAE,QADvB;AAEO,MAAA,UAAU,EAAE,YAFnB;AAGO,MAAA,OAAO,EAAE,CAHhB;AAAA,8BAKE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE1B,gBAArB;AACY,sBAAW,oBADvB;AAEY,QAAA,KAAK,EAAE,SAFnB;AAGY,QAAA,IAAI,EAAE,QAHlB;AAIY,QAAA,QAAQ,EAAE6B,qBAJtB;AAAA,+BAME,QAAC,mBAAD;AAAqB,UAAA,QAAQ,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cALF,eAaE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEpB,cAAc,GAAG,WAAH,GAAiB,UAAhD;AACQ,QAAA,IAAI,EAAE,OADd;AAEQ,QAAA,OAAO,EAAEM,YAFjB;AAAA,2BAIOnB,QAAQ,CAACgC,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAmBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEjB,kBAAkB,GAAG,WAAH,GAAiB,UAApD;AACQ,QAAA,KAAK,EAAE,MADf;AAEQ,QAAA,IAAI,EAAE,OAFd;AAGQ,QAAA,OAAO,EAAEK,gBAHjB;AAAA,+BAKWU,YAAY,CAACE,MALxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA0BE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEf,oBAAoB,GAAG,WAAH,GAAiB,UAAtD;AACQ,QAAA,KAAK,EAAC,SADd;AAEQ,QAAA,IAAI,EAAE,OAFd;AAGQ,QAAA,OAAO,EAAEI,kBAHjB;AAAA,iCAKaM,cAAc,CAACK,MAL5B;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eAiCE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE/B,cAArB;AACY,sBAAW,sBADvB;AAEY,QAAA,KAAK,EAAE,OAFnB;AAGY,QAAA,IAAI,EAAE,QAHlB;AAIY,QAAA,QAAQ,EAAE8B,mBAJtB;AAAA,+BAME,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwED,CAnKD;;GAAMnC,S;;KAAAA,S;AAqKN,eAAeA,SAAf","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {Box, Button} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\nimport {useState} from \"react\";\n\nconst TodosList = (props) => {\n\n  console.log('Todo list rendered')\n\n  const {\n    todoList,\n    clearCompleted,\n    toggleEditState,\n    completeTask,\n    completeAllTasks,\n    removeTask,\n    saveEditTask\n  } = props\n\n  const [displayAllTodos, setDisplayAllTodos] = useState(true);\n  const [displayCurrentTodos, setDisplayCurrentTodos] = useState(false);\n  const [displayCompletedTodos, setDisplayCompletedTodos] = useState(false);\n  const [focusAllButton, setFocusAllButton] = useState(false);\n  const [focusCurrentButton, setFocusCurrentButton] = useState(false);\n  const [focusCompletedButton, setFocusCompletedButton] = useState(false);\n\n  const showAllTodos = () => {\n    setDisplayAllTodos(true);\n    setDisplayCompletedTodos(false);\n    setDisplayCurrentTodos(false);\n\n    setFocusAllButton(true)\n    setFocusCompletedButton(false)\n    setFocusCurrentButton(false)\n  }\n\n  const showCurrentTodos = () => {\n    setDisplayAllTodos(false);\n    setDisplayCompletedTodos(false);\n    setDisplayCurrentTodos(true);\n\n    setFocusAllButton(false)\n    setFocusCompletedButton(false)\n    setFocusCurrentButton(true)\n  }\n\n  const showCompletedTodos = () => {\n    setDisplayAllTodos(false);\n    setDisplayCompletedTodos(true);\n    setDisplayCurrentTodos(false);\n\n    setFocusAllButton(false)\n    setFocusCompletedButton(true)\n    setFocusCurrentButton(false)\n  }\n\n  const todoItem = todoList.map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  const completedItems = todoList.filter(task => task.complete === true).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  const currentItems = todoList.filter(task => task.complete === false).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n\n  const disableDeleteButton = !completedItems.length;\n  const disableCompleteButton = !todoItem.length\n\n  return (\n      <Box>\n        <Box sx={{\n          height: '70vh',\n          overflowY: 'scroll'\n        }}>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayAllTodos ? 'block' : 'none'}\n          >\n            {todoItem}\n          </Typography>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayCompletedTodos ? 'block' : 'none'}\n          >\n            {completedItems}\n          </Typography>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayCurrentTodos ? 'block' : 'none'}\n          >\n            {currentItems}\n          </Typography>\n        </Box>\n        <Stack direction={\"row\"}\n               justifyContent={\"center\"}\n               alignItems={'flex-start'}\n               spacing={3}\n        >\n          <IconButton onClick={completeAllTasks}\n                      aria-label=\"mark-all-completed\"\n                      color={'success'}\n                      size={'medium'}\n                      disabled={disableCompleteButton}\n          >\n            <LibraryAddCheckIcon fontSize=\"inherit\"/>\n          </IconButton>\n          <Button variant={focusAllButton ? 'contained' : 'outlined'}\n                  size={'large'}\n                  onClick={showAllTodos}\n          >\n            All {todoList.length}\n          </Button>\n          <Button variant={focusCurrentButton ? 'contained' : 'outlined'}\n                  color={'info'}\n                  size={'large'}\n                  onClick={showCurrentTodos}\n          >\n            Current {currentItems.length}\n          </Button>\n          <Button variant={focusCompletedButton ? 'contained' : 'outlined'}\n                  color=\"success\"\n                  size={'large'}\n                  onClick={showCompletedTodos}\n          >\n            Completed {completedItems.length}\n          </Button>\n          <IconButton onClick={clearCompleted}\n                      aria-label=\"delete-all-completed\"\n                      color={'error'}\n                      size={'medium'}\n                      disabled={disableDeleteButton}\n          >\n            <DeleteIcon fontSize=\"inherit\"/>\n          </IconButton>\n        </Stack>\n      </Box>\n  );\n};\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}