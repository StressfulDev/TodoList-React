{"ast":null,"code":"import _slicedToArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from'react';import{getThemeProps,useThemeWithoutDefault as useTheme}from'@mui/system';import useEnhancedEffect from'../utils/useEnhancedEffect';/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */function useMediaQueryOld(query,defaultMatches,matchMedia,ssrMatchMedia,noSsr){var supportMatchMedia=typeof window!=='undefined'&&typeof window.matchMedia!=='undefined';var _React$useState=React.useState(function(){if(noSsr&&supportMatchMedia){return matchMedia(query).matches;}if(ssrMatchMedia){return ssrMatchMedia(query).matches;}// Once the component is mounted, we rely on the\n// event listeners to return the correct matches value.\n// Once the component is mounted, we rely on the\n// event listeners to return the correct matches value.\nreturn defaultMatches;}),_React$useState2=_slicedToArray(_React$useState,2),match=_React$useState2[0],setMatch=_React$useState2[1];useEnhancedEffect(function(){var active=true;if(!supportMatchMedia){return undefined;}var queryList=matchMedia(query);var updateMatch=function updateMatch(){// Workaround Safari wrong implementation of matchMedia\n// TODO can we remove it?\n// https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\nif(active){setMatch(queryList.matches);}};updateMatch();// TODO: Use `addEventListener` once support for Safari < 14 is dropped\nqueryList.addListener(updateMatch);return function(){active=false;queryList.removeListener(updateMatch);};},[query,matchMedia,supportMatchMedia]);return match;}// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nvar maybeReactUseSyncExternalStore=React['useSyncExternalStore'+''];function useMediaQueryNew(query,defaultMatches,matchMedia,ssrMatchMedia){var getDefaultSnapshot=React.useCallback(function(){return defaultMatches;},[defaultMatches]);var getServerSnapshot=React.useMemo(function(){if(ssrMatchMedia!==null){var _ssrMatchMedia=ssrMatchMedia(query),matches=_ssrMatchMedia.matches;return function(){return matches;};}return getDefaultSnapshot;},[getDefaultSnapshot,query,ssrMatchMedia]);var _React$useMemo=React.useMemo(function(){if(matchMedia===null){return[getDefaultSnapshot,function(){return function(){};}];}var mediaQueryList=matchMedia(query);return[function(){return mediaQueryList.matches;},function(notify){// TODO: Use `addEventListener` once support for Safari < 14 is dropped\nmediaQueryList.addListener(notify);return function(){mediaQueryList.removeListener(notify);};}];},[getDefaultSnapshot,matchMedia,query]),_React$useMemo2=_slicedToArray(_React$useMemo,2),getSnapshot=_React$useMemo2[0],subscribe=_React$useMemo2[1];var match=maybeReactUseSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);return match;}export default function useMediaQuery(queryInput){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var theme=useTheme();// Wait for jsdom to support the match media feature.\n// All the browsers MUI support have this built-in.\n// This defensive check is here for simplicity.\n// Most of the time, the match media logic isn't central to people tests.\nvar supportMatchMedia=typeof window!=='undefined'&&typeof window.matchMedia!=='undefined';var _getThemeProps=getThemeProps({name:'MuiUseMediaQuery',props:options,theme:theme}),_getThemeProps$defaul=_getThemeProps.defaultMatches,defaultMatches=_getThemeProps$defaul===void 0?false:_getThemeProps$defaul,_getThemeProps$matchM=_getThemeProps.matchMedia,matchMedia=_getThemeProps$matchM===void 0?supportMatchMedia?window.matchMedia:null:_getThemeProps$matchM,_getThemeProps$ssrMat=_getThemeProps.ssrMatchMedia,ssrMatchMedia=_getThemeProps$ssrMat===void 0?null:_getThemeProps$ssrMat,noSsr=_getThemeProps.noSsr;if(process.env.NODE_ENV!=='production'){if(typeof queryInput==='function'&&theme===null){console.error(['MUI: The `query` argument provided is invalid.','You are providing a function without a theme in the context.','One of the parent elements needs to use a ThemeProvider.'].join('\\n'));}}var query=typeof queryInput==='function'?queryInput(theme):queryInput;query=query.replace(/^@media( ?)/m,'');// TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\nvar useMediaQueryImplementation=maybeReactUseSyncExternalStore!==undefined?useMediaQueryNew:useMediaQueryOld;var match=useMediaQueryImplementation(query,defaultMatches,matchMedia,ssrMatchMedia,noSsr);if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line react-hooks/rules-of-hooks\nReact.useDebugValue({query:query,match:match});}return match;}","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/useMediaQuery/useMediaQuery.js"],"names":["React","getThemeProps","useThemeWithoutDefault","useTheme","useEnhancedEffect","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","window","useState","matches","match","setMatch","active","undefined","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","mediaQueryList","notify","getSnapshot","subscribe","useMediaQuery","queryInput","options","theme","name","props","process","env","NODE_ENV","console","error","join","replace","useMediaQueryImplementation","useDebugValue"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}"]},"metadata":{},"sourceType":"module"}