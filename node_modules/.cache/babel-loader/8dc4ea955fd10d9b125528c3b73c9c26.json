{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"onEntering\"],_excluded2=[\"autoFocus\",\"children\",\"disableAutoFocusItem\",\"MenuListProps\",\"onClose\",\"open\",\"PaperProps\",\"PopoverClasses\",\"transitionDuration\",\"TransitionProps\",\"variant\"];import*as React from'react';import{isFragment}from'react-is';import clsx from'clsx';import{unstable_composeClasses as composeClasses}from'@mui/base';import{HTMLElementType}from'@mui/utils';import MenuList from'../MenuList';import Paper from'../Paper';import Popover from'../Popover';import styled,{rootShouldForwardProp}from'../styles/styled';import useTheme from'../styles/useTheme';import useThemeProps from'../styles/useThemeProps';import{getMenuUtilityClass}from'./menuClasses';import{jsx as _jsx}from\"react/jsx-runtime\";var RTL_ORIGIN={vertical:'top',horizontal:'right'};var LTR_ORIGIN={vertical:'top',horizontal:'left'};var useUtilityClasses=function useUtilityClasses(ownerState){var classes=ownerState.classes;var slots={root:['root'],paper:['paper'],list:['list']};return composeClasses(slots,getMenuUtilityClass,classes);};var MenuRoot=styled(Popover,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiMenu',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})({});var MenuPaper=styled(Paper,{name:'MuiMenu',slot:'Paper',overridesResolver:function overridesResolver(props,styles){return styles.paper;}})({// specZ: The maximum height of a simple menu should be one or more rows less than the view\n// height. This ensures a tapable area outside of the simple menu with which to dismiss\n// the menu.\nmaxHeight:'calc(100% - 96px)',// Add iOS momentum scrolling for iOS < 13.0\nWebkitOverflowScrolling:'touch'});var MenuMenuList=styled(MenuList,{name:'MuiMenu',slot:'List',overridesResolver:function overridesResolver(props,styles){return styles.list;}})({// We disable the focus ring for mouse, touch and keyboard users.\noutline:0});var Menu=/*#__PURE__*/React.forwardRef(function Menu(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiMenu'});var _props$autoFocus=props.autoFocus,autoFocus=_props$autoFocus===void 0?true:_props$autoFocus,children=props.children,_props$disableAutoFoc=props.disableAutoFocusItem,disableAutoFocusItem=_props$disableAutoFoc===void 0?false:_props$disableAutoFoc,_props$MenuListProps=props.MenuListProps,MenuListProps=_props$MenuListProps===void 0?{}:_props$MenuListProps,onClose=props.onClose,open=props.open,_props$PaperProps=props.PaperProps,PaperProps=_props$PaperProps===void 0?{}:_props$PaperProps,PopoverClasses=props.PopoverClasses,_props$transitionDura=props.transitionDuration,transitionDuration=_props$transitionDura===void 0?'auto':_props$transitionDura,_props$TransitionProp=props.TransitionProps;_props$TransitionProp=_props$TransitionProp===void 0?{}:_props$TransitionProp;var onEntering=_props$TransitionProp.onEntering,_props$variant=props.variant,variant=_props$variant===void 0?'selectedMenu':_props$variant,TransitionProps=_objectWithoutPropertiesLoose(props.TransitionProps,_excluded),other=_objectWithoutPropertiesLoose(props,_excluded2);var theme=useTheme();var isRtl=theme.direction==='rtl';var ownerState=_extends({},props,{autoFocus:autoFocus,disableAutoFocusItem:disableAutoFocusItem,MenuListProps:MenuListProps,onEntering:onEntering,PaperProps:PaperProps,transitionDuration:transitionDuration,TransitionProps:TransitionProps,variant:variant});var classes=useUtilityClasses(ownerState);var autoFocusItem=autoFocus&&!disableAutoFocusItem&&open;var menuListActionsRef=React.useRef(null);var handleEntering=function handleEntering(element,isAppearing){if(menuListActionsRef.current){menuListActionsRef.current.adjustStyleForScrollbar(element,theme);}if(onEntering){onEntering(element,isAppearing);}};var handleListKeyDown=function handleListKeyDown(event){if(event.key==='Tab'){event.preventDefault();if(onClose){onClose(event,'tabKeyDown');}}};/**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */var activeItemIndex=-1;// since we inject focus related props into children we have to do a lookahead\n// to check if there is a `selected` item. We're looking for the last `selected`\n// item and use the first valid item as a fallback\nReact.Children.map(children,function(child,index){if(!/*#__PURE__*/React.isValidElement(child)){return;}if(process.env.NODE_ENV!=='production'){if(isFragment(child)){console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\",'Consider providing an array instead.'].join('\\n'));}}if(!child.props.disabled){if(variant==='selectedMenu'&&child.props.selected){activeItemIndex=index;}else if(activeItemIndex===-1){activeItemIndex=index;}}});return/*#__PURE__*/_jsx(MenuRoot,_extends({classes:PopoverClasses,onClose:onClose,anchorOrigin:{vertical:'bottom',horizontal:isRtl?'right':'left'},transformOrigin:isRtl?RTL_ORIGIN:LTR_ORIGIN,PaperProps:_extends({component:MenuPaper},PaperProps,{classes:_extends({},PaperProps.classes,{root:classes.paper})}),className:classes.root,open:open,ref:ref,transitionDuration:transitionDuration,TransitionProps:_extends({onEntering:handleEntering},TransitionProps),ownerState:ownerState},other,{children:/*#__PURE__*/_jsx(MenuMenuList,_extends({onKeyDown:handleListKeyDown,actions:menuListActionsRef,autoFocus:autoFocus&&(activeItemIndex===-1||disableAutoFocusItem),autoFocusItem:autoFocusItem,variant:variant},MenuListProps,{className:clsx(classes.list,MenuListProps.className),children:children}))}));});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default Menu;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/Menu/Menu.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","isFragment","clsx","unstable_composeClasses","composeClasses","HTMLElementType","MenuList","Paper","Popover","styled","rootShouldForwardProp","useTheme","useThemeProps","getMenuUtilityClass","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","autoFocus","children","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","variant","other","theme","isRtl","direction","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","anchorOrigin","transformOrigin","component","className","onKeyDown","actions"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onEntering\"],\n      _excluded2 = [\"autoFocus\", \"children\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { HTMLElementType } from '@mui/utils';\nimport MenuList from '../MenuList';\nimport Paper from '../Paper';\nimport Popover from '../Popover';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\n\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst MenuPaper = styled(Paper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tapable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n\n  const {\n    autoFocus = true,\n    children,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering\n    } = {},\n    variant = 'selectedMenu'\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _extends({\n    classes: PopoverClasses,\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({\n      component: MenuPaper\n    }, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    className: classes.root,\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(MenuMenuList, _extends({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"]},"metadata":{},"sourceType":"module"}