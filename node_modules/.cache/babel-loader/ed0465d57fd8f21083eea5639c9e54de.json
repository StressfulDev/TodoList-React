{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useId } from \"react-id-generator\";\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/TodosForm/TodoForm\";\nimport TodosList from \"./components/TodosList/TodosList\";\nimport { Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = {\n  root: {\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    textAlign: 'center'\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todoList\");\n\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n  const [uniqId] = useId();\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    setTodoList(todoList);\n  }, [todoList]);\n\n  const editTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const saveEditTask = (id, userInput) => {\n    const newTodo = [...todoList].map(task => {\n      if (task.id === id) {\n        task.edit = !task.edit;\n        task.task = userInput;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const clearCompleted = () => {\n    let filtered = todoList.filter(task => {\n      return !task.complete;\n    });\n    setTodoList(filtered);\n  };\n\n  const completeTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.complete = !task.complete;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const completeAllTasks = () => {\n    const newTodo = [...todoList].map(task => {\n      if (task.complete === false) {\n        task.complete = true;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const addTask = userInput => {\n    const newTodo = [...todoList, {\n      id: todoList.length + 1,\n      task: userInput,\n      complete: false,\n      checked: false,\n      edit: false\n    }];\n    setTodoList(newTodo);\n  };\n\n  const removeTask = id => {\n    const newTodo = [...todoList].filter(task => task.id !== id);\n    setTodoList(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n      todoList: todoList,\n      toggleEditState: editTask,\n      completeTask: completeTask,\n      completeAllTasks: completeAllTasks,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      clearCompleted: clearCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"15IT0jEOP7azwsUL0FdQ5Dz20XI=\", false, function () {\n  return [useId];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/App.js"],"names":["useEffect","useState","useId","Header","TodoForm","TodosList","Box","classes","root","paddingTop","paddingBottom","textAlign","App","todoList","setTodoList","savedTodos","localStorage","getItem","JSON","parse","uniqId","setItem","stringify","editTask","id","newTodo","filter","task","edit","saveEditTask","userInput","map","clearCompleted","filtered","complete","completeTask","completeAllTasks","addTask","length","checked","removeTask"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport {useId} from \"react-id-generator\";\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/TodosForm/TodoForm\";\nimport TodosList from \"./components/TodosList/TodosList\";\nimport {Box} from \"@mui/material\";\n\nconst classes = {\n  root: {\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    textAlign: 'center'\n  }\n}\n\nconst App = () => {\n\n  const [todoList, setTodoList] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todoList\");\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n\n  const [uniqId] = useId();\n\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    setTodoList(todoList);\n  }, [todoList]);\n\n  const editTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const saveEditTask = (id, userInput) => {\n    const newTodo = [...todoList].map(task => {\n      if (task.id === id) {\n        task.edit = !task.edit\n        task.task = userInput;\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const clearCompleted = () => {\n    let filtered = todoList.filter(task => {\n      return !task.complete;\n    });\n    setTodoList(filtered);\n  };\n\n  const completeTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.complete = !task.complete;\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const completeAllTasks = () => {\n    const newTodo = [...todoList].map(task => {\n      if (task.complete === false) {\n        task.complete = true\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const addTask = (userInput) => {\n    const newTodo = [...todoList, {\n      id: todoList.length + 1,\n      task: userInput,\n      complete: false,\n      checked: false,\n      edit: false\n    }];\n    setTodoList(newTodo);\n  }\n\n  const removeTask = id => {\n    const newTodo = [...todoList].filter(task => task.id !== id);\n    setTodoList(newTodo);\n  }\n\n  return (\n      <Box sx={classes.root}>\n        <Header/>\n        <TodoForm addTask={addTask}/>\n        <TodosList todoList={todoList}\n                   toggleEditState={editTask}\n                   completeTask={completeTask}\n                   completeAllTasks={completeAllTasks}\n                   removeTask={removeTask}\n                   saveEditTask={saveEditTask}\n                   clearCompleted={clearCompleted}\n        />\n      </Box>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}