{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\";\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { Button, createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = _ref => {\n  let {\n    toDoList,\n    clearCompleted,\n    toggleEditState,\n    completeTask,\n    removeTask,\n    saveEditTask\n  } = _ref;\n  let todoItems = toDoList.map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  });\n  let completedItems = toDoList.filter(task => task.complete === true).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  });\n  let activeItems = toDoList.filter(task => task.complete === false).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  });\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em'\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: todoItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: 'center',\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          children: [\"All \", todoItems.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          children: [\"Active \", activeItems.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"success\",\n          children: [\"Completed \", completedItems.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: clearCompleted,\n          \"aria-label\": \"delete\",\n          color: 'primary',\n          size: 'large',\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","Button","createTheme","responsiveFontSizes","ThemeProvider","Typography","Stack","DeleteIcon","IconButton","TodosList","toDoList","clearCompleted","toggleEditState","completeTask","removeTask","saveEditTask","todoItems","map","todo","complete","id","completedItems","filter","task","activeItems","theme","typography","body1","width","fontWeight","fontSize","length"],"mappings":"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","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {Button, createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\n\n\nconst TodosList = ({toDoList, clearCompleted, toggleEditState, completeTask, removeTask, saveEditTask}) => {\n\n  let todoItems = toDoList.map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  let completedItems = toDoList.filter(task => task.complete === true).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  let activeItems = toDoList.filter(task => task.complete === false).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n\n\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em',\n      },\n    }\n  })\n  theme = responsiveFontSizes(theme);\n\n  return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Typography variant=\"h6\" component=\"h6\" gutterBottom>\n            {todoItems}\n          </Typography>\n          <Stack direction={\"row\"}\n                 justifyContent={\"center\"}\n                 alignItems={'center'}\n                 spacing={2}\n          >\n            <Button variant=\"text\">\n              All {todoItems.length}\n            </Button>\n            <Button variant=\"text\">\n              Active {activeItems.length}\n            </Button>\n            <Button variant=\"text\"\n                    color=\"success\">\n              Completed {completedItems.length}\n            </Button>\n            <IconButton onClick={clearCompleted}\n                        aria-label=\"delete\"\n                        color={'primary'}\n                        size={'large'}>\n              <DeleteIcon fontSize=\"inherit\"/>\n            </IconButton>\n          </Stack>\n        </ThemeProvider>\n      </div>\n  );\n};\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}