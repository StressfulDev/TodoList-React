{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import*as React from'react';import useThemeProps from'../styles/useThemeProps';import GlobalStyles from'../GlobalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var html=function html(theme,enableColorScheme){return _extends({WebkitFontSmoothing:'antialiased',// Antialiasing.\nMozOsxFontSmoothing:'grayscale',// Antialiasing.\n// Change from `box-sizing: content-box` so that `width`\n// is not affected by `padding` or `border`.\nboxSizing:'border-box',// Fix font resize problem in iOS\nWebkitTextSizeAdjust:'100%'},enableColorScheme&&{colorScheme:theme.palette.mode});};export var body=function body(theme){return _extends({color:(theme.vars||theme).palette.text.primary},theme.typography.body1,{backgroundColor:(theme.vars||theme).palette.background.default,'@media print':{// Save printer ink.\nbackgroundColor:(theme.vars||theme).palette.common.white}});};var _styles=function styles(theme){var enableColorScheme=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var _theme$components,_theme$components$Mui;var defaultStyles={html:html(theme,enableColorScheme),'*, *::before, *::after':{boxSizing:'inherit'},'strong, b':{fontWeight:theme.typography.fontWeightBold},body:_extends({margin:0},body(theme),{// Add support for document.body.requestFullScreen().\n// Other elements, if background transparent, are not supported.\n'&::backdrop':{backgroundColor:(theme.vars||theme).palette.background.default}})};var themeOverrides=(_theme$components=theme.components)==null?void 0:(_theme$components$Mui=_theme$components.MuiCssBaseline)==null?void 0:_theme$components$Mui.styleOverrides;if(themeOverrides){defaultStyles=[defaultStyles,themeOverrides];}return defaultStyles;};/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */export{_styles as styles};function CssBaseline(inProps){var props=useThemeProps({props:inProps,name:'MuiCssBaseline'});var children=props.children,_props$enableColorSch=props.enableColorScheme,enableColorScheme=_props$enableColorSch===void 0?false:_props$enableColorSch;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyles,{styles:function styles(theme){return _styles(theme,enableColorScheme);}}),children]});}process.env.NODE_ENV!==\"production\"?void 0:void 0;export default CssBaseline;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/CssBaseline/CssBaseline.js"],"names":["_extends","React","useThemeProps","GlobalStyles","jsx","_jsx","jsxs","_jsxs","html","theme","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","palette","mode","body","color","vars","text","primary","typography","body1","backgroundColor","background","default","common","white","styles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","CssBaseline","inProps","props","name","children","Fragment","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"]},"metadata":{},"sourceType":"module"}