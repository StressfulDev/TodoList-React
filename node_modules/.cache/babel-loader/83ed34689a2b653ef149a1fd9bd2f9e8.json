{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\";\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = _ref => {\n  let {\n    toDoList,\n    filterUncompleted,\n    handleEditState,\n    completeTask,\n    removeTask\n  } = _ref;\n  let toDoItem = toDoList.map((todo, index) => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      index: index,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      handleEditState: handleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  });\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em'\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoWrap\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: toDoItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: filterUncompleted,\n        children: \"Uncompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","createTheme","responsiveFontSizes","ThemeProvider","Typography","TodosList","toDoList","filterUncompleted","handleEditState","completeTask","removeTask","toDoItem","map","todo","index","id","theme","typography","body1","width","fontWeight","fontSize"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAAQC,WAAR,EAAqBC,mBAArB,EAA0CC,aAA1C,QAA8D,eAA9D;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,SAAS,GAAG,QAA8E;AAAA,MAA7E;AAACC,IAAAA,QAAD;AAAWC,IAAAA,iBAAX;AAA8BC,IAAAA,eAA9B;AAA+CC,IAAAA,YAA/C;AAA6DC,IAAAA;AAA7D,GAA6E;AAE1F,MAAIC,QAAQ,GAAGL,QAAQ,CAACM,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,wBACI,QAAC,QAAD;AACU,MAAA,IAAI,EAAED,IADhB;AAEU,MAAA,KAAK,EAAEC,KAFjB;AAGU,MAAA,YAAY,EAAEL,YAHxB;AAIU,MAAA,UAAU,EAAEC,UAJtB;AAKU,MAAA,eAAe,EAAEF;AAL3B,OAAeK,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ;AASD,GAVc,CAAf;AAaA,MAAIC,KAAK,GAAGf,WAAW,CAAC;AACtBgB,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,UAAU,EAAE,GAFP;AAGLC,QAAAA,QAAQ,EAAE;AAHL;AADG;AADU,GAAD,CAAvB;AASAL,EAAAA,KAAK,GAAGd,mBAAmB,CAACc,KAAD,CAA3B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,KAAtB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAwC,QAAA,YAAY,MAApD;AAAA,kBACGL;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAE,UAAnB;AAA+B,QAAA,OAAO,EAAEJ,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD,CAtCL;;KAAMF,S;AAyCN,eAAeA,SAAf","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\n\nconst TodosList = ({toDoList, filterUncompleted, handleEditState, completeTask, removeTask}) => {\n\n      let toDoItem = toDoList.map((todo, index) => {\n        return (\n            <TodoItem key={todo.id}\n                      todo={todo}\n                      index={index}\n                      completeTask={completeTask}\n                      removeTask={removeTask}\n                      handleEditState={handleEditState}\n            />\n        );\n      })\n\n\n      let theme = createTheme({\n        typography: {\n          body1: {\n            width: '70%',\n            fontWeight: 500,\n            fontSize: '1.1em',\n          },\n        }\n      })\n      theme = responsiveFontSizes(theme);\n\n      return (\n          <div className='todoWrap'>\n            <ThemeProvider theme={theme}>\n              <Typography variant=\"h6\" component=\"h6\" gutterBottom>\n                {toDoItem}\n              </Typography>\n              <button className={'btnClear'} onClick={filterUncompleted}>\n                Uncompleted\n              </button>\n            </ThemeProvider>\n          </div>\n      );\n    }\n;\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}