{"ast":null,"code":"import _slicedToArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _defineProperty from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";var _styled;import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"action\",\"centerRipple\",\"children\",\"className\",\"component\",\"disabled\",\"disableRipple\",\"disableTouchRipple\",\"focusRipple\",\"focusVisibleClassName\",\"LinkComponent\",\"onBlur\",\"onClick\",\"onContextMenu\",\"onDragLeave\",\"onFocus\",\"onFocusVisible\",\"onKeyDown\",\"onKeyUp\",\"onMouseDown\",\"onMouseLeave\",\"onMouseUp\",\"onTouchEnd\",\"onTouchMove\",\"onTouchStart\",\"tabIndex\",\"TouchRippleProps\",\"touchRippleRef\",\"type\"];import*as React from'react';import clsx from'clsx';import{elementTypeAcceptingRef,refType}from'@mui/utils';import composeClasses from'@mui/base/composeClasses';import styled from'../styles/styled';import useThemeProps from'../styles/useThemeProps';import useForkRef from'../utils/useForkRef';import useEventCallback from'../utils/useEventCallback';import useIsFocusVisible from'../utils/useIsFocusVisible';import TouchRipple from'./TouchRipple';import buttonBaseClasses,{getButtonBaseUtilityClass}from'./buttonBaseClasses';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useUtilityClasses=function useUtilityClasses(ownerState){var disabled=ownerState.disabled,focusVisible=ownerState.focusVisible,focusVisibleClassName=ownerState.focusVisibleClassName,classes=ownerState.classes;var slots={root:['root',disabled&&'disabled',focusVisible&&'focusVisible']};var composedClasses=composeClasses(slots,getButtonBaseUtilityClass,classes);if(focusVisible&&focusVisibleClassName){composedClasses.root+=\" \".concat(focusVisibleClassName);}return composedClasses;};export var ButtonBaseRoot=styled('button',{name:'MuiButtonBase',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})((_styled={display:'inline-flex',alignItems:'center',justifyContent:'center',position:'relative',boxSizing:'border-box',WebkitTapHighlightColor:'transparent',backgroundColor:'transparent',// Reset default value\n// We disable the focus ring for mouse, touch and keyboard users.\noutline:0,border:0,margin:0,// Remove the margin in Safari\nborderRadius:0,padding:0,// Remove the padding in Firefox\ncursor:'pointer',userSelect:'none',verticalAlign:'middle',MozAppearance:'none',// Reset\nWebkitAppearance:'none',// Reset\ntextDecoration:'none',// So we take precedent over the style of a native <a /> element.\ncolor:'inherit','&::-moz-focus-inner':{borderStyle:'none'// Remove Firefox dotted outline.\n}},_defineProperty(_styled,\"&.\".concat(buttonBaseClasses.disabled),{pointerEvents:'none',// Disable link interactions\ncursor:'default'}),_defineProperty(_styled,'@media print',{colorAdjust:'exact'}),_styled));/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */var ButtonBase=/*#__PURE__*/React.forwardRef(function ButtonBase(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiButtonBase'});var action=props.action,_props$centerRipple=props.centerRipple,centerRipple=_props$centerRipple===void 0?false:_props$centerRipple,children=props.children,className=props.className,_props$component=props.component,component=_props$component===void 0?'button':_props$component,_props$disabled=props.disabled,disabled=_props$disabled===void 0?false:_props$disabled,_props$disableRipple=props.disableRipple,disableRipple=_props$disableRipple===void 0?false:_props$disableRipple,_props$disableTouchRi=props.disableTouchRipple,disableTouchRipple=_props$disableTouchRi===void 0?false:_props$disableTouchRi,_props$focusRipple=props.focusRipple,focusRipple=_props$focusRipple===void 0?false:_props$focusRipple,_props$LinkComponent=props.LinkComponent,LinkComponent=_props$LinkComponent===void 0?'a':_props$LinkComponent,onBlur=props.onBlur,onClick=props.onClick,onContextMenu=props.onContextMenu,onDragLeave=props.onDragLeave,onFocus=props.onFocus,onFocusVisible=props.onFocusVisible,onKeyDown=props.onKeyDown,onKeyUp=props.onKeyUp,onMouseDown=props.onMouseDown,onMouseLeave=props.onMouseLeave,onMouseUp=props.onMouseUp,onTouchEnd=props.onTouchEnd,onTouchMove=props.onTouchMove,onTouchStart=props.onTouchStart,_props$tabIndex=props.tabIndex,tabIndex=_props$tabIndex===void 0?0:_props$tabIndex,TouchRippleProps=props.TouchRippleProps,touchRippleRef=props.touchRippleRef,type=props.type,other=_objectWithoutPropertiesLoose(props,_excluded);var buttonRef=React.useRef(null);var rippleRef=React.useRef(null);var handleRippleRef=useForkRef(rippleRef,touchRippleRef);var _useIsFocusVisible=useIsFocusVisible(),isFocusVisibleRef=_useIsFocusVisible.isFocusVisibleRef,handleFocusVisible=_useIsFocusVisible.onFocus,handleBlurVisible=_useIsFocusVisible.onBlur,focusVisibleRef=_useIsFocusVisible.ref;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),focusVisible=_React$useState2[0],setFocusVisible=_React$useState2[1];if(disabled&&focusVisible){setFocusVisible(false);}React.useImperativeHandle(action,function(){return{focusVisible:function focusVisible(){setFocusVisible(true);buttonRef.current.focus();}};},[]);var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),mountedState=_React$useState4[0],setMountedState=_React$useState4[1];React.useEffect(function(){setMountedState(true);},[]);var enableTouchRipple=mountedState&&!disableRipple&&!disabled;React.useEffect(function(){if(focusVisible&&focusRipple&&!disableRipple&&mountedState){rippleRef.current.pulsate();}},[disableRipple,focusRipple,focusVisible,mountedState]);function useRippleHandler(rippleAction,eventCallback){var skipRippleAction=arguments.length>2&&arguments[2]!==undefined?arguments[2]:disableTouchRipple;return useEventCallback(function(event){if(eventCallback){eventCallback(event);}var ignore=skipRippleAction;if(!ignore&&rippleRef.current){rippleRef.current[rippleAction](event);}return true;});}var handleMouseDown=useRippleHandler('start',onMouseDown);var handleContextMenu=useRippleHandler('stop',onContextMenu);var handleDragLeave=useRippleHandler('stop',onDragLeave);var handleMouseUp=useRippleHandler('stop',onMouseUp);var handleMouseLeave=useRippleHandler('stop',function(event){if(focusVisible){event.preventDefault();}if(onMouseLeave){onMouseLeave(event);}});var handleTouchStart=useRippleHandler('start',onTouchStart);var handleTouchEnd=useRippleHandler('stop',onTouchEnd);var handleTouchMove=useRippleHandler('stop',onTouchMove);var handleBlur=useRippleHandler('stop',function(event){handleBlurVisible(event);if(isFocusVisibleRef.current===false){setFocusVisible(false);}if(onBlur){onBlur(event);}},false);var handleFocus=useEventCallback(function(event){// Fix for https://github.com/facebook/react/issues/7769\nif(!buttonRef.current){buttonRef.current=event.currentTarget;}handleFocusVisible(event);if(isFocusVisibleRef.current===true){setFocusVisible(true);if(onFocusVisible){onFocusVisible(event);}}if(onFocus){onFocus(event);}});var isNonNativeButton=function isNonNativeButton(){var button=buttonRef.current;return component&&component!=='button'&&!(button.tagName==='A'&&button.href);};/**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */var keydownRef=React.useRef(false);var handleKeyDown=useEventCallback(function(event){// Check if key is already down to avoid repeats being counted as multiple activations\nif(focusRipple&&!keydownRef.current&&focusVisible&&rippleRef.current&&event.key===' '){keydownRef.current=true;rippleRef.current.stop(event,function(){rippleRef.current.start(event);});}if(event.target===event.currentTarget&&isNonNativeButton()&&event.key===' '){event.preventDefault();}if(onKeyDown){onKeyDown(event);}// Keyboard accessibility for non interactive elements\nif(event.target===event.currentTarget&&isNonNativeButton()&&event.key==='Enter'&&!disabled){event.preventDefault();if(onClick){onClick(event);}}});var handleKeyUp=useEventCallback(function(event){// calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n// https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\nif(focusRipple&&event.key===' '&&rippleRef.current&&focusVisible&&!event.defaultPrevented){keydownRef.current=false;rippleRef.current.stop(event,function(){rippleRef.current.pulsate(event);});}if(onKeyUp){onKeyUp(event);}// Keyboard accessibility for non interactive elements\nif(onClick&&event.target===event.currentTarget&&isNonNativeButton()&&event.key===' '&&!event.defaultPrevented){onClick(event);}});var ComponentProp=component;if(ComponentProp==='button'&&(other.href||other.to)){ComponentProp=LinkComponent;}var buttonProps={};if(ComponentProp==='button'){buttonProps.type=type===undefined?'button':type;buttonProps.disabled=disabled;}else{if(!other.href&&!other.to){buttonProps.role='button';}if(disabled){buttonProps['aria-disabled']=disabled;}}var handleOwnRef=useForkRef(focusVisibleRef,buttonRef);var handleRef=useForkRef(ref,handleOwnRef);if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line react-hooks/rules-of-hooks\nReact.useEffect(function(){if(enableTouchRipple&&!rippleRef.current){console.error(['MUI: The `component` prop provided to ButtonBase is invalid.','Please make sure the children prop is rendered in this custom component.'].join('\\n'));}},[enableTouchRipple]);}var ownerState=_extends({},props,{centerRipple:centerRipple,component:component,disabled:disabled,disableRipple:disableRipple,disableTouchRipple:disableTouchRipple,focusRipple:focusRipple,tabIndex:tabIndex,focusVisible:focusVisible});var classes=useUtilityClasses(ownerState);return/*#__PURE__*/_jsxs(ButtonBaseRoot,_extends({as:ComponentProp,className:clsx(classes.root,className),ownerState:ownerState,onBlur:handleBlur,onClick:onClick,onContextMenu:handleContextMenu,onFocus:handleFocus,onKeyDown:handleKeyDown,onKeyUp:handleKeyUp,onMouseDown:handleMouseDown,onMouseLeave:handleMouseLeave,onMouseUp:handleMouseUp,onDragLeave:handleDragLeave,onTouchEnd:handleTouchEnd,onTouchMove:handleTouchMove,onTouchStart:handleTouchStart,ref:handleRef,tabIndex:disabled?-1:tabIndex,type:type},buttonProps,other,{children:[children,enableTouchRipple?/*#__PURE__*/ /* TouchRipple is only needed client-side, x2 boost on the server. */_jsx(TouchRipple,_extends({ref:handleRippleRef,center:centerRipple},TouchRippleProps)):null]}));});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default ButtonBase;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","elementTypeAcceptingRef","refType","composeClasses","styled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","buttonBaseClasses","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","disabled","focusVisible","focusVisibleClassName","classes","slots","root","composedClasses","ButtonBaseRoot","name","slot","overridesResolver","props","styles","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","centerRipple","children","className","component","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type","other","buttonRef","useRef","rippleRef","handleRippleRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","useState","setFocusVisible","useImperativeHandle","current","focus","mountedState","setMountedState","useEffect","enableTouchRipple","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","undefined","role","handleOwnRef","handleRef","process","env","NODE_ENV","console","error","join","as","center"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"]},"metadata":{},"sourceType":"module"}