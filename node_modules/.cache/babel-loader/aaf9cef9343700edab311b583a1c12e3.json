{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/ThemeToggle/ThemeContextToggle.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeContext, themes } from '../../theme/themeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeContextToggle(props) {\n  _s();\n\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add('dark-theme');\n        break;\n\n      case themes.dark:\n      default:\n        document.body.classList.remove('dark-theme');\n        break;\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ThemeContextToggle, \"81LJbYGtqjdO775TVdpnETOnTlU=\");\n\n_c = ThemeContextToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextToggle\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/ThemeToggle/ThemeContextToggle.jsx"],"names":["React","useState","useEffect","ThemeContext","themes","ThemeContextToggle","props","theme","setTheme","dark","changeTheme","light","document","body","classList","add","remove","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,YAAR,EAAsBC,MAAtB,QAAmC,0BAAnC;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,MAAM,CAACK,IAAR,CAAlC;;AAEA,WAASC,WAAT,CAAqBH,KAArB,EAA4B;AAC1BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQK,KAAR;AACE,WAAKH,MAAM,CAACO,KAAZ;AACEC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACA;;AACF,WAAKX,MAAM,CAACK,IAAZ;AACA;AACEG,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,YAA/B;AACA;AAPJ;AASD,GAVQ,EAUN,CAACT,KAAD,CAVM,CAAT;AAYA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAEA,KAAR;AAAeG,MAAAA,WAAW,EAAEA;AAA5B,KAA9B;AAAA,cACGJ,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;GAxBuBZ,kB;;KAAAA,kB","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {ThemeContext, themes} from '../../theme/themeContext';\n\nexport default function ThemeContextToggle(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add('dark-theme');\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove('dark-theme');\n        break;\n    }\n  }, [theme]);\n\n  return (\n      <ThemeContext.Provider value={{theme: theme, changeTheme: changeTheme}}>\n        {props.children}\n      </ThemeContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}