{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\",\n    _s = $RefreshSig$();\n\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { Button, createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = _ref => {\n  _s();\n\n  let {\n    todoList,\n    clearCompleted,\n    toggleEditState,\n    completeTask,\n    completeAllTasks,\n    removeTask,\n    saveEditTask\n  } = _ref;\n  const [displayAllTodos, setDisplayAllTodos] = useState('block');\n  const [focusAllButton, setFocusAllButton] = useState(\"outlined\");\n  const [displayCurrentTodos, setDisplayCurrentTodos] = useState('none');\n  const [focusCurrentButton, setFocusCurrentButton] = useState('outlined');\n  const [displayCompletedTodos, setDisplayCompletedTodos] = useState('none');\n  const [focusCompletedButton, setFocusCompletedButton] = useState(\"outlined\");\n\n  const showAllTodos = () => {\n    setDisplayAllTodos('block');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('none');\n    setFocusAllButton('contained');\n    setFocusCompletedButton('outlined');\n    setFocusCurrentButton('outlined');\n  };\n\n  const showCurrentTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('block');\n    setFocusAllButton('outlined');\n    setFocusCompletedButton('outlined');\n    setFocusCurrentButton('contained');\n  };\n\n  const showCompletedTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('block');\n    setDisplayCurrentTodos('none');\n    setFocusAllButton('outlined');\n    setFocusCompletedButton('contained');\n    setFocusCurrentButton('outlined');\n  };\n\n  const todoItem = todoList.map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  });\n  const completedItems = todoList.filter(task => task.complete === true).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  });\n  const currentItems = todoList.filter(task => task.complete === false).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this);\n  });\n  let theme = createTheme({\n    typography: {\n      h6: {}\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  const disableDeleteButton = !completedItems.length;\n  const disableCompleteButton = !todoItem.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      gutterBottom: true,\n      display: displayAllTodos,\n      children: todoItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      gutterBottom: true,\n      display: displayCompletedTodos,\n      children: completedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      gutterBottom: true,\n      display: displayCurrentTodos,\n      children: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: 'flex-start',\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: completeAllTasks,\n        \"aria-label\": \"mark-all\",\n        color: 'success',\n        size: 'medium',\n        disabled: disableCompleteButton,\n        children: /*#__PURE__*/_jsxDEV(LibraryAddCheckIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: focusAllButton,\n        size: 'large',\n        onClick: showAllTodos,\n        children: [\"All \", todoList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: focusCurrentButton,\n        size: 'large',\n        onClick: showCurrentTodos,\n        children: [\"Current \", currentItems.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: focusCompletedButton,\n        color: \"success\",\n        size: 'large',\n        onClick: showCompletedTodos,\n        children: [\"Completed \", completedItems.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: clearCompleted,\n        \"aria-label\": \"delete\",\n        color: 'primary',\n        size: 'medium',\n        disabled: disableDeleteButton,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodosList, \"2LLT2hSuSeoHFkY7QZMu6x9W3xE=\");\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","Button","createTheme","responsiveFontSizes","ThemeProvider","Typography","Stack","DeleteIcon","IconButton","LibraryAddCheckIcon","useState","TodosList","todoList","clearCompleted","toggleEditState","completeTask","completeAllTasks","removeTask","saveEditTask","displayAllTodos","setDisplayAllTodos","focusAllButton","setFocusAllButton","displayCurrentTodos","setDisplayCurrentTodos","focusCurrentButton","setFocusCurrentButton","displayCompletedTodos","setDisplayCompletedTodos","focusCompletedButton","setFocusCompletedButton","showAllTodos","showCurrentTodos","showCompletedTodos","todoItem","map","todo","complete","id","completedItems","filter","task","currentItems","theme","typography","h6","disableDeleteButton","length","disableCompleteButton"],"mappings":"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","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {Button, createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\nimport {useState} from \"react\";\n\n\nconst TodosList = ({\n                     todoList,\n                     clearCompleted,\n                     toggleEditState,\n                     completeTask,\n                     completeAllTasks,\n                     removeTask,\n                     saveEditTask\n                   }) => {\n\n  const [displayAllTodos, setDisplayAllTodos] = useState('block');\n  const [focusAllButton, setFocusAllButton] = useState(\"outlined\");\n  const [displayCurrentTodos, setDisplayCurrentTodos] = useState('none');\n  const [focusCurrentButton, setFocusCurrentButton] = useState('outlined');\n  const [displayCompletedTodos, setDisplayCompletedTodos] = useState('none');\n  const [focusCompletedButton, setFocusCompletedButton] = useState(\"outlined\");\n\n\n  const showAllTodos = () => {\n    setDisplayAllTodos('block');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('none');\n\n    setFocusAllButton('contained')\n    setFocusCompletedButton('outlined')\n    setFocusCurrentButton('outlined')\n  }\n\n  const showCurrentTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('block');\n\n    setFocusAllButton('outlined')\n    setFocusCompletedButton('outlined')\n    setFocusCurrentButton('contained')\n  }\n\n  const showCompletedTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('block');\n    setDisplayCurrentTodos('none');\n\n    setFocusAllButton('outlined')\n    setFocusCompletedButton('contained')\n    setFocusCurrentButton('outlined')\n  }\n\n  const todoItem = todoList.map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  const completedItems = todoList.filter(task => task.complete === true).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  const currentItems = todoList.filter(task => task.complete === false).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n\n  let theme = createTheme({\n    typography: {\n      h6: {\n\n      },\n    }\n  })\n  theme = responsiveFontSizes(theme);\n\n  const disableDeleteButton = !completedItems.length;\n  const disableCompleteButton = !todoItem.length\n\n  return (\n      <div>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayAllTodos}\n          >\n            {todoItem}\n          </Typography>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayCompletedTodos}\n          >\n            {completedItems}\n          </Typography>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayCurrentTodos}\n          >\n            {currentItems}\n          </Typography>\n          <Stack direction={\"row\"}\n                 justifyContent={\"center\"}\n                 alignItems={'flex-start'}\n                 spacing={3}\n          >\n            <IconButton onClick={completeAllTasks}\n                        aria-label=\"mark-all\"\n                        color={'success'}\n                        size={'medium'}\n                        disabled={disableCompleteButton}\n            >\n              <LibraryAddCheckIcon fontSize=\"inherit\"/>\n            </IconButton>\n            <Button variant={focusAllButton}\n                    size={'large'}\n                    onClick={showAllTodos}\n            >\n              All {todoList.length}\n            </Button>\n            <Button variant={focusCurrentButton}\n                    size={'large'}\n                    onClick={showCurrentTodos}\n            >\n              Current {currentItems.length}\n            </Button>\n            <Button variant={focusCompletedButton}\n                    color=\"success\"\n                    size={'large'}\n                    onClick={showCompletedTodos}\n            >\n              Completed {completedItems.length}\n            </Button>\n            <IconButton onClick={clearCompleted}\n                        aria-label=\"delete\"\n                        color={'primary'}\n                        size={'medium'}\n                        disabled={disableDeleteButton}\n            >\n              <DeleteIcon fontSize=\"inherit\"/>\n            </IconButton>\n          </Stack>\n      </div>\n  );\n};\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}