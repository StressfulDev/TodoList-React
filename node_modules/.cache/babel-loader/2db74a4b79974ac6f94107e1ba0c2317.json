{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"fontFamily\",\"fontSize\",\"fontWeightLight\",\"fontWeightRegular\",\"fontWeightMedium\",\"fontWeightBold\",\"htmlFontSize\",\"allVariants\",\"pxToRem\"];import{deepmerge}from'@mui/utils';function round(value){return Math.round(value*1e5)/1e5;}var caseAllCaps={textTransform:'uppercase'};var defaultFontFamily='\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */export default function createTypography(palette,typography){var _ref=typeof typography==='function'?typography(palette):typography,_ref$fontFamily=_ref.fontFamily,fontFamily=_ref$fontFamily===void 0?defaultFontFamily:_ref$fontFamily,_ref$fontSize=_ref.fontSize,fontSize=_ref$fontSize===void 0?14:_ref$fontSize,_ref$fontWeightLight=_ref.fontWeightLight,fontWeightLight=_ref$fontWeightLight===void 0?300:_ref$fontWeightLight,_ref$fontWeightRegula=_ref.fontWeightRegular,fontWeightRegular=_ref$fontWeightRegula===void 0?400:_ref$fontWeightRegula,_ref$fontWeightMedium=_ref.fontWeightMedium,fontWeightMedium=_ref$fontWeightMedium===void 0?500:_ref$fontWeightMedium,_ref$fontWeightBold=_ref.fontWeightBold,fontWeightBold=_ref$fontWeightBold===void 0?700:_ref$fontWeightBold,_ref$htmlFontSize=_ref.htmlFontSize,htmlFontSize=_ref$htmlFontSize===void 0?16:_ref$htmlFontSize,allVariants=_ref.allVariants,pxToRem2=_ref.pxToRem,other=_objectWithoutPropertiesLoose(_ref,_excluded);if(process.env.NODE_ENV!=='production'){if(typeof fontSize!=='number'){console.error('MUI: `fontSize` is required to be a number.');}if(typeof htmlFontSize!=='number'){console.error('MUI: `htmlFontSize` is required to be a number.');}}var coef=fontSize/14;var pxToRem=pxToRem2||function(size){return\"\".concat(size/htmlFontSize*coef,\"rem\");};var buildVariant=function buildVariant(fontWeight,size,lineHeight,letterSpacing,casing){return _extends({fontFamily:fontFamily,fontWeight:fontWeight,fontSize:pxToRem(size),// Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\nlineHeight:lineHeight},fontFamily===defaultFontFamily?{letterSpacing:\"\".concat(round(letterSpacing/size),\"em\")}:{},casing,allVariants);};var variants={h1:buildVariant(fontWeightLight,96,1.167,-1.5),h2:buildVariant(fontWeightLight,60,1.2,-0.5),h3:buildVariant(fontWeightRegular,48,1.167,0),h4:buildVariant(fontWeightRegular,34,1.235,0.25),h5:buildVariant(fontWeightRegular,24,1.334,0),h6:buildVariant(fontWeightMedium,20,1.6,0.15),subtitle1:buildVariant(fontWeightRegular,16,1.75,0.15),subtitle2:buildVariant(fontWeightMedium,14,1.57,0.1),body1:buildVariant(fontWeightRegular,16,1.5,0.15),body2:buildVariant(fontWeightRegular,14,1.43,0.15),button:buildVariant(fontWeightMedium,14,1.75,0.4,caseAllCaps),caption:buildVariant(fontWeightRegular,12,1.66,0.4),overline:buildVariant(fontWeightRegular,12,2.66,1,caseAllCaps)};return deepmerge(_extends({htmlFontSize:htmlFontSize,pxToRem:pxToRem,fontFamily:fontFamily,fontSize:fontSize,fontWeightLight:fontWeightLight,fontWeightRegular:fontWeightRegular,fontWeightMedium:fontWeightMedium,fontWeightBold:fontWeightBold},variants),other,{clone:false// No need to clone deep\n});}","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/styles/createTypography.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","deepmerge","round","value","Math","caseAllCaps","textTransform","defaultFontFamily","createTypography","palette","typography","_ref","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem2","pxToRem","other","process","env","NODE_ENV","console","error","coef","size","buildVariant","fontWeight","lineHeight","letterSpacing","casing","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","clone"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport { deepmerge } from '@mui/utils';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nexport default function createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n        {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14,\n    // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell MUI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16,\n    // Apply the CSS properties to all the variants.\n    allVariants,\n    pxToRem: pxToRem2\n  } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  const coef = fontSize / 14;\n\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return deepmerge(_extends({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}"]},"metadata":{},"sourceType":"module"}