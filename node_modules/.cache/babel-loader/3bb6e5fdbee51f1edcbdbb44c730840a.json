{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\",\n    _s = $RefreshSig$();\n\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { Button, createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = _ref => {\n  _s();\n\n  let {\n    todoList,\n    clearCompleted,\n    toggleEditState,\n    completeTask,\n    completeAllTasks,\n    removeTask,\n    saveEditTask\n  } = _ref;\n  const [displayAllTodos, setDisplayAllTodos] = useState('block');\n  const [focusAllButton, setFocusAllButton] = useState(\"text\");\n  const [displayCompletedTodos, setDisplayCompletedTodos] = useState('none');\n  const [focusCompletedButton, setFocusCompletedButton] = useState(\"text\");\n  const [displayCurrentTodos, setDisplayCurrentTodos] = useState('none');\n\n  const showAllTodos = () => {\n    setDisplayAllTodos('block');\n    setFocusAllButton('contained');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('none');\n  };\n\n  const showCurrentTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('block');\n  };\n\n  const showCompletedTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('block');\n    setFocusCompletedButton('contained');\n    setDisplayCurrentTodos('none');\n  };\n\n  const todoItem = todoList.map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  });\n  const completedItems = todoList.filter(task => task.complete === true).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  });\n  const currentItems = todoList.filter(task => task.complete === false).map(todo => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      completeState: todo.complete,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      toggleEditState: toggleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  });\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em'\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  const disableDeleteButton = !completedItems.length;\n  const disableCompleteButton = !todoItem.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        display: displayAllTodos,\n        children: todoItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        display: displayCompletedTodos,\n        children: completedItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        display: displayCurrentTodos,\n        children: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: 'flex-start',\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: completeAllTasks,\n          \"aria-label\": \"mark-all\",\n          color: 'success',\n          size: 'medium',\n          disabled: disableCompleteButton,\n          children: /*#__PURE__*/_jsxDEV(LibraryAddCheckIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: focusAllButton,\n          size: 'large',\n          onClick: showAllTodos,\n          children: [\"All \", todoList.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          size: 'large',\n          onClick: showCurrentTodos,\n          children: [\"Current \", currentItems.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: focusCompletedButton,\n          color: \"success\",\n          size: 'large',\n          onClick: showCompletedTodos,\n          children: [\"Completed \", completedItems.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: clearCompleted,\n          \"aria-label\": \"delete\",\n          color: 'primary',\n          size: 'medium',\n          disabled: disableDeleteButton,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodosList, \"ggvTHAYCMvOohkcGN4MF3lxq7ac=\");\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","Button","createTheme","responsiveFontSizes","ThemeProvider","Typography","Stack","DeleteIcon","IconButton","LibraryAddCheckIcon","useState","TodosList","todoList","clearCompleted","toggleEditState","completeTask","completeAllTasks","removeTask","saveEditTask","displayAllTodos","setDisplayAllTodos","focusAllButton","setFocusAllButton","displayCompletedTodos","setDisplayCompletedTodos","focusCompletedButton","setFocusCompletedButton","displayCurrentTodos","setDisplayCurrentTodos","showAllTodos","showCurrentTodos","showCompletedTodos","todoItem","map","todo","complete","id","completedItems","filter","task","currentItems","theme","typography","body1","width","fontWeight","fontSize","disableDeleteButton","length","disableCompleteButton"],"mappings":"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","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {Button, createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from \"@mui/material/IconButton\";\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\nimport {useState} from \"react\";\n\n\nconst TodosList = ({\n                     todoList,\n                     clearCompleted,\n                     toggleEditState,\n                     completeTask,\n                     completeAllTasks,\n                     removeTask,\n                     saveEditTask\n                   }) => {\n\n  const [displayAllTodos, setDisplayAllTodos] = useState('block');\n  const [focusAllButton, setFocusAllButton] = useState(\"text\")\n  const [displayCompletedTodos, setDisplayCompletedTodos] = useState('none');\n  const [focusCompletedButton, setFocusCompletedButton] = useState(\"text\")\n  const [displayCurrentTodos, setDisplayCurrentTodos] = useState('none');\n\n  const showAllTodos = () => {\n    setDisplayAllTodos('block');\n    setFocusAllButton('contained')\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('none');\n  }\n\n  const showCurrentTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('none');\n    setDisplayCurrentTodos('block');\n  }\n\n  const showCompletedTodos = () => {\n    setDisplayAllTodos('none');\n    setDisplayCompletedTodos('block');\n    setFocusCompletedButton('contained')\n    setDisplayCurrentTodos('none');\n  }\n\n  const todoItem = todoList.map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  const completedItems = todoList.filter(task => task.complete === true).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n  const currentItems = todoList.filter(task => task.complete === false).map(todo => {\n    return (\n        <TodoItem key={todo.id}\n                  todo={todo}\n                  completeState={todo.complete}\n                  completeTask={completeTask}\n                  removeTask={removeTask}\n                  saveEditTask={saveEditTask}\n                  toggleEditState={toggleEditState}\n        />\n    );\n  })\n\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em',\n      },\n    }\n  })\n  theme = responsiveFontSizes(theme);\n\n  const disableDeleteButton = !completedItems.length;\n  const disableCompleteButton = !todoItem.length\n\n  return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayAllTodos}\n          >\n            {todoItem}\n          </Typography>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayCompletedTodos}\n          >\n            {completedItems}\n          </Typography>\n          <Typography variant=\"h6\"\n                      component=\"h6\"\n                      gutterBottom\n                      display={displayCurrentTodos}\n          >\n            {currentItems}\n          </Typography>\n          <Stack direction={\"row\"}\n                 justifyContent={\"center\"}\n                 alignItems={'flex-start'}\n                 spacing={3}\n          >\n            <IconButton onClick={completeAllTasks}\n                        aria-label=\"mark-all\"\n                        color={'success'}\n                        size={'medium'}\n                        disabled={disableCompleteButton}\n            >\n              <LibraryAddCheckIcon fontSize=\"inherit\"/>\n            </IconButton>\n            <Button variant={focusAllButton}\n                    size={'large'}\n                    onClick={showAllTodos}\n            >\n              All {todoList.length}\n            </Button>\n            <Button variant=\"text\"\n                    size={'large'}\n                    onClick={showCurrentTodos}\n            >\n              Current {currentItems.length}\n            </Button>\n            <Button variant={focusCompletedButton}\n                    color=\"success\"\n                    size={'large'}\n                    onClick={showCompletedTodos}\n            >\n              Completed {completedItems.length}\n            </Button>\n            <IconButton onClick={clearCompleted}\n                        aria-label=\"delete\"\n                        color={'primary'}\n                        size={'medium'}\n                        disabled={disableDeleteButton}\n            >\n              <DeleteIcon fontSize=\"inherit\"/>\n            </IconButton>\n          </Stack>\n        </ThemeProvider>\n      </div>\n  );\n};\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}