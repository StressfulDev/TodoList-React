{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx\",\n    _s = $RefreshSig$();\n\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosList = _ref => {\n  _s();\n\n  let {\n    toDoList,\n    clearCompleted,\n    handleEditState,\n    completeTask,\n    removeTask\n  } = _ref;\n  const [show, setShow] = useState('none');\n  let toDoItem = toDoList.map((todo, index) => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      index: index,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      handleEditState: handleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  let filterComplete = toDoList.filter(task => task.complete === true).map((todo, index) => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      index: index,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      handleEditState: handleEditState\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  });\n\n  const classToggle = () => {\n    if (show === 'none') {\n      setShow('block');\n    }\n\n    if (show === 'block') {\n      setShow('none');\n    }\n  };\n\n  let theme = createTheme({\n    typography: {\n      body1: {\n        width: '70%',\n        fontWeight: 500,\n        fontSize: '1.1em'\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoWrap\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: toDoItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        display: show,\n        variant: \"h6\",\n        component: \"h6\",\n        gutterBottom: true,\n        children: filterComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: clearCompleted,\n        children: \"Clear Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnClear',\n        onClick: () => classToggle,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 11\n  }, this);\n};\n\n_s(TodosList, \"ao9nA39mHUw5P5UZXiqxJZPZ2AM=\");\n\n_c = TodosList;\nexport default TodosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/components/TodosList/TodosList.jsx"],"names":["TodoItem","createTheme","responsiveFontSizes","ThemeProvider","Typography","useState","TodosList","toDoList","clearCompleted","handleEditState","completeTask","removeTask","show","setShow","toDoItem","map","todo","index","id","filterComplete","filter","task","complete","classToggle","theme","typography","body1","width","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import TodoItem from \"./TodoItem/TodoItem\";\nimport {createTheme, responsiveFontSizes, ThemeProvider} from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport {useState} from \"react\";\n\nconst TodosList = ({toDoList, clearCompleted, handleEditState, completeTask, removeTask}) => {\n\n      const [show, setShow] = useState('none')\n\n      let toDoItem = toDoList.map((todo, index) => {\n        return (\n            <TodoItem key={todo.id}\n                      todo={todo}\n                      index={index}\n                      completeTask={completeTask}\n                      removeTask={removeTask}\n                      handleEditState={handleEditState}\n            />\n        );\n      })\n\n      let filterComplete = toDoList.filter(task => task.complete === true).map((todo, index) => {\n        return (\n            <TodoItem key={todo.id}\n                      todo={todo}\n                      index={index}\n                      completeTask={completeTask}\n                      removeTask={removeTask}\n                      handleEditState={handleEditState}\n            />\n        );\n      })\n\n      const classToggle = () => {\n          if (show === 'none') {\n            setShow('block')\n          }\n          if (show === 'block') {\n            setShow('none')\n          }\n      }\n\n\n      let theme = createTheme({\n        typography: {\n          body1: {\n            width: '70%',\n            fontWeight: 500,\n            fontSize: '1.1em',\n          },\n        }\n      })\n      theme = responsiveFontSizes(theme);\n\n      return (\n          <div className='todoWrap'>\n            <ThemeProvider theme={theme}>\n              <Typography variant=\"h6\" component=\"h6\" gutterBottom>\n                {toDoItem}\n              </Typography>\n              <Typography display={show} variant=\"h6\" component=\"h6\" gutterBottom>\n                {filterComplete}\n              </Typography>\n              <button className={'btnClear'} onClick={clearCompleted}>\n                Clear Active\n              </button>\n              <button className={'btnClear'} onClick={() => classToggle}>\n                Active\n              </button>\n            </ThemeProvider>\n          </div>\n      );\n    }\n;\n\nexport default TodosList;"]},"metadata":{},"sourceType":"module"}