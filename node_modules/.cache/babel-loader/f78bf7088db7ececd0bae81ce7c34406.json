{"ast":null,"code":"import _slicedToArray from\"/Users/Sintez/WebstormProjects/todolist-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"actions\",\"children\",\"defaultValue\",\"name\",\"onChange\",\"value\"];import*as React from'react';import FormGroup from'../FormGroup';import useForkRef from'../utils/useForkRef';import useControlled from'../utils/useControlled';import RadioGroupContext from'./RadioGroupContext';import useId from'../utils/useId';import{jsx as _jsx}from\"react/jsx-runtime\";var RadioGroup=/*#__PURE__*/React.forwardRef(function RadioGroup(props,ref){var actions=props.actions,children=props.children,defaultValue=props.defaultValue,nameProp=props.name,onChange=props.onChange,valueProp=props.value,other=_objectWithoutPropertiesLoose(props,_excluded);var rootRef=React.useRef(null);var _useControlled=useControlled({controlled:valueProp,default:defaultValue,name:'RadioGroup'}),_useControlled2=_slicedToArray(_useControlled,2),value=_useControlled2[0],setValueState=_useControlled2[1];React.useImperativeHandle(actions,function(){return{focus:function focus(){var input=rootRef.current.querySelector('input:not(:disabled):checked');if(!input){input=rootRef.current.querySelector('input:not(:disabled)');}if(input){input.focus();}}};},[]);var handleRef=useForkRef(ref,rootRef);var handleChange=function handleChange(event){setValueState(event.target.value);if(onChange){onChange(event,event.target.value);}};var name=useId(nameProp);return/*#__PURE__*/_jsx(RadioGroupContext.Provider,{value:{name:name,onChange:handleChange,value:value},children:/*#__PURE__*/_jsx(FormGroup,_extends({role:\"radiogroup\",ref:handleRef},other,{children:children}))});});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default RadioGroup;","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/node_modules/@mui/material/RadioGroup/RadioGroup.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","FormGroup","useForkRef","useControlled","RadioGroupContext","useId","jsx","_jsx","RadioGroup","forwardRef","props","ref","actions","children","defaultValue","nameProp","name","onChange","valueProp","value","other","rootRef","useRef","controlled","default","setValueState","useImperativeHandle","focus","input","current","querySelector","handleRef","handleChange","event","target","Provider","role","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n\n  const handleChange = event => {\n    setValueState(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  const name = useId(nameProp);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: {\n      name,\n      onChange: handleChange,\n      value\n    },\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"]},"metadata":{},"sourceType":"module"}