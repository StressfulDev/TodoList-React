{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/TodosForm/TodoForm\";\nimport TodosList from \"./components/TodosList/TodosList\";\nimport { Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = {\n  root: {\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    textAlign: 'center'\n  }\n};\n\nconst addTask = (todoList, userInput) => {\n  return [...todoList, {\n    id: todoList.length + 1,\n    task: userInput,\n    complete: false,\n    checked: false,\n    edit: false\n  }];\n};\n\nconst App = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todoList\");\n\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    setTodoList(todoList);\n  }, [todoList]);\n\n  const editTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const saveEditTask = (id, userInput) => {\n    const newTodo = [...todoList].map(task => {\n      if (task.id === id) {\n        task.edit = !task.edit;\n        task.task = userInput;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const clearCompleted = () => {\n    let filtered = todoList.filter(task => {\n      return !task.complete;\n    });\n    setTodoList(filtered);\n  };\n\n  const completeTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.complete = !task.complete;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const completeAllTasks = () => {\n    const newTodo = [...todoList].map(task => {\n      if (task.complete === false) {\n        task.complete = true;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const addTask2 = input => {\n    setTodoList(addTask(todoList, input));\n  };\n\n  const removeTask = id => {\n    const newTodo = [...todoList].filter(task => task.id !== id);\n    setTodoList(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n      todoList: todoList,\n      toggleEditState: editTask,\n      completeTask: completeTask,\n      completeAllTasks: completeAllTasks,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      clearCompleted: clearCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"jQwTMR/4h4iGveLJPZ6YKFrjMXg=\");\n\n_c = App;\nexport { App, addTask };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/App.js"],"names":["useEffect","useState","Header","TodoForm","TodosList","Box","classes","root","paddingTop","paddingBottom","textAlign","addTask","todoList","userInput","id","length","task","complete","checked","edit","App","setTodoList","savedTodos","localStorage","getItem","JSON","parse","setItem","stringify","editTask","newTodo","filter","saveEditTask","map","clearCompleted","filtered","completeTask","completeAllTasks","addTask2","input","removeTask"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/TodosForm/TodoForm\";\nimport TodosList from \"./components/TodosList/TodosList\";\nimport {Box} from \"@mui/material\";\n\nconst classes = {\n  root: {\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    textAlign: 'center'\n  }\n}\n\nconst addTask = (todoList, userInput) => {\n  return [...todoList, {\n    id: todoList.length + 1,\n    task: userInput,\n    complete: false,\n    checked: false,\n    edit: false\n  }];\n}\n\nconst App = () => {\n\n  const [todoList, setTodoList] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todoList\");\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    setTodoList(todoList);\n  }, [todoList]);\n\n  const editTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const saveEditTask = (id, userInput) => {\n    const newTodo = [...todoList].map(task => {\n      if (task.id === id) {\n        task.edit = !task.edit\n        task.task = userInput;\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const clearCompleted = () => {\n    let filtered = todoList.filter(task => {\n      return !task.complete;\n    });\n    setTodoList(filtered);\n  };\n\n  const completeTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.complete = !task.complete;\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const completeAllTasks = () => {\n    const newTodo = [...todoList].map(task => {\n      if (task.complete === false) {\n        task.complete = true\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const addTask2 = (input) => {\n    setTodoList(addTask(todoList, input))\n  }\n\n  const removeTask = id => {\n    const newTodo = [...todoList].filter(task => task.id !== id);\n    setTodoList(newTodo);\n  }\n\n  return (\n      <Box sx={classes.root}>\n        <Header/>\n        <TodoForm addTask={addTask2}/>\n        <TodosList todoList={todoList}\n                   toggleEditState={editTask}\n                   completeTask={completeTask}\n                   completeAllTasks={completeAllTasks}\n                   removeTask={removeTask}\n                   saveEditTask={saveEditTask}\n                   clearCompleted={clearCompleted}\n        />\n      </Box>\n  );\n};\n\nexport {App, addTask}"]},"metadata":{},"sourceType":"module"}