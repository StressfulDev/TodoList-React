{"ast":null,"code":"var _jsxFileName = \"/Users/Sintez/WebstormProjects/todolist-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/TodosForm/TodoForm\";\nimport TodosList from \"./components/TodosList/TodosList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todoList\");\n\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n  useEffect(() => {\n    setTodoList(todoList);\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  const editTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const saveEditTask = (id, userInput) => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit;\n        task.task = userInput;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const clearCompleted = () => {\n    let filtered = todoList.filter(task => {\n      return !task.complete;\n    });\n    setTodoList(filtered);\n  };\n\n  const completeTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.complete = !task.complete;\n      }\n\n      return task;\n    });\n    setTodoList(newTodo);\n  };\n\n  const addTask = userInput => {\n    let newTodo = [...todoList, {\n      id: todoList.length + 1,\n      task: userInput,\n      complete: false,\n      checked: false,\n      edit: false\n    }];\n    setTodoList(newTodo);\n  };\n\n  const removeTask = id => {\n    const newTodo = [...todoList].filter(task => task.id !== id);\n    setTodoList(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n      todoList: todoList,\n      toggleEditState: editTask,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      saveEditTask: saveEditTask,\n      clearCompleted: clearCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"jQwTMR/4h4iGveLJPZ6YKFrjMXg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Sintez/WebstormProjects/todolist-react/src/App.js"],"names":["useEffect","useState","Header","TodoForm","TodosList","App","todoList","setTodoList","savedTodos","localStorage","getItem","JSON","parse","setItem","stringify","editTask","id","newTodo","filter","task","edit","saveEditTask","userInput","clearCompleted","filtered","complete","completeTask","addTask","length","checked","removeTask"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport TodoForm from \"./components/TodosForm/TodoForm\";\nimport TodosList from \"./components/TodosList/TodosList\";\n\nconst App = () => {\n\n  const [todoList, setTodoList] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todoList\");\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    setTodoList(todoList)\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  const editTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const saveEditTask = (id, userInput) => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.edit = !task.edit\n        task.task = userInput;\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const clearCompleted = () => {\n    let filtered = todoList.filter(task => {\n      return !task.complete;\n    });\n    setTodoList(filtered);\n  };\n\n  const completeTask = id => {\n    const newTodo = [...todoList].filter(task => {\n      if (task.id === id) {\n        task.complete = !task.complete;\n      }\n      return task;\n    })\n    setTodoList(newTodo);\n  }\n\n  const addTask = userInput => {\n    let newTodo = [...todoList, {\n      id: todoList.length + 1,\n      task: userInput,\n      complete: false,\n      checked: false,\n      edit: false\n    }];\n    setTodoList(newTodo);\n  }\n\n  const removeTask = id => {\n    const newTodo = [...todoList].filter(task => task.id !== id);\n    setTodoList(newTodo);\n  }\n\n  return (\n      <div className=\"App\">\n        <Header/>\n        <TodoForm addTask={addTask}/>\n        <TodosList todoList={todoList}\n                   toggleEditState={editTask}\n                   completeTask={completeTask}\n                   removeTask={removeTask}\n                   saveEditTask={saveEditTask}\n                   clearCompleted={clearCompleted}\n        />\n      </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}